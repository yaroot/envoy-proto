// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/route/v3/route_components.proto

package io.envoyproxy.envoy.config.route.v3;

/**
 * <pre>
 * [#next-free-field: 42]
 * </pre>
 *
 * Protobuf type {@code envoy.config.route.v3.RouteAction}
 */
public final class RouteAction extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.route.v3.RouteAction)
    RouteActionOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RouteAction.newBuilder() to construct.
  private RouteAction(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RouteAction() {
    clusterNotFoundResponseCode_ = 0;
    prefixRewrite_ = "";
    requestMirrorPolicies_ = java.util.Collections.emptyList();
    priority_ = 0;
    rateLimits_ = java.util.Collections.emptyList();
    hashPolicy_ = java.util.Collections.emptyList();
    upgradeConfigs_ = java.util.Collections.emptyList();
    internalRedirectAction_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RouteAction();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.route.v3.RouteAction.class, io.envoyproxy.envoy.config.route.v3.RouteAction.Builder.class);
  }

  /**
   * Protobuf enum {@code envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode}
   */
  public enum ClusterNotFoundResponseCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * HTTP status code - 503 Service Unavailable.
     * </pre>
     *
     * <code>SERVICE_UNAVAILABLE = 0;</code>
     */
    SERVICE_UNAVAILABLE(0),
    /**
     * <pre>
     * HTTP status code - 404 Not Found.
     * </pre>
     *
     * <code>NOT_FOUND = 1;</code>
     */
    NOT_FOUND(1),
    /**
     * <pre>
     * HTTP status code - 500 Internal Server Error.
     * </pre>
     *
     * <code>INTERNAL_SERVER_ERROR = 2;</code>
     */
    INTERNAL_SERVER_ERROR(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * HTTP status code - 503 Service Unavailable.
     * </pre>
     *
     * <code>SERVICE_UNAVAILABLE = 0;</code>
     */
    public static final int SERVICE_UNAVAILABLE_VALUE = 0;
    /**
     * <pre>
     * HTTP status code - 404 Not Found.
     * </pre>
     *
     * <code>NOT_FOUND = 1;</code>
     */
    public static final int NOT_FOUND_VALUE = 1;
    /**
     * <pre>
     * HTTP status code - 500 Internal Server Error.
     * </pre>
     *
     * <code>INTERNAL_SERVER_ERROR = 2;</code>
     */
    public static final int INTERNAL_SERVER_ERROR_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ClusterNotFoundResponseCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ClusterNotFoundResponseCode forNumber(int value) {
      switch (value) {
        case 0: return SERVICE_UNAVAILABLE;
        case 1: return NOT_FOUND;
        case 2: return INTERNAL_SERVER_ERROR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ClusterNotFoundResponseCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ClusterNotFoundResponseCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ClusterNotFoundResponseCode>() {
            public ClusterNotFoundResponseCode findValueByNumber(int number) {
              return ClusterNotFoundResponseCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.route.v3.RouteAction.getDescriptor().getEnumTypes().get(0);
    }

    private static final ClusterNotFoundResponseCode[] VALUES = values();

    public static ClusterNotFoundResponseCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ClusterNotFoundResponseCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode)
  }

  /**
   * <pre>
   * Configures :ref:`internal redirect &lt;arch_overview_internal_redirects&gt;` behavior.
   * [#next-major-version: remove this definition - it's defined in the InternalRedirectPolicy message.]
   * </pre>
   *
   * Protobuf enum {@code envoy.config.route.v3.RouteAction.InternalRedirectAction}
   */
  @java.lang.Deprecated public enum InternalRedirectAction
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PASS_THROUGH_INTERNAL_REDIRECT = 0;</code>
     */
    PASS_THROUGH_INTERNAL_REDIRECT(0),
    /**
     * <code>HANDLE_INTERNAL_REDIRECT = 1;</code>
     */
    HANDLE_INTERNAL_REDIRECT(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PASS_THROUGH_INTERNAL_REDIRECT = 0;</code>
     */
    public static final int PASS_THROUGH_INTERNAL_REDIRECT_VALUE = 0;
    /**
     * <code>HANDLE_INTERNAL_REDIRECT = 1;</code>
     */
    public static final int HANDLE_INTERNAL_REDIRECT_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static InternalRedirectAction valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static InternalRedirectAction forNumber(int value) {
      switch (value) {
        case 0: return PASS_THROUGH_INTERNAL_REDIRECT;
        case 1: return HANDLE_INTERNAL_REDIRECT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<InternalRedirectAction>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        InternalRedirectAction> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<InternalRedirectAction>() {
            public InternalRedirectAction findValueByNumber(int number) {
              return InternalRedirectAction.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.route.v3.RouteAction.getDescriptor().getEnumTypes().get(1);
    }

    private static final InternalRedirectAction[] VALUES = values();

    public static InternalRedirectAction valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private InternalRedirectAction(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:envoy.config.route.v3.RouteAction.InternalRedirectAction)
  }

  public interface RequestMirrorPolicyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.config.route.v3.RouteAction.RequestMirrorPolicy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Only one of ``cluster`` and ``cluster_header`` can be specified.
     * [#next-major-version: Need to add back the validation rule: (validate.rules).string = {min_len: 1}]
     * Specifies the cluster that requests will be mirrored to. The cluster must
     * exist in the cluster manager configuration.
     * </pre>
     *
     * <code>string cluster = 1 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return The cluster.
     */
    java.lang.String getCluster();
    /**
     * <pre>
     * Only one of ``cluster`` and ``cluster_header`` can be specified.
     * [#next-major-version: Need to add back the validation rule: (validate.rules).string = {min_len: 1}]
     * Specifies the cluster that requests will be mirrored to. The cluster must
     * exist in the cluster manager configuration.
     * </pre>
     *
     * <code>string cluster = 1 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return The bytes for cluster.
     */
    com.google.protobuf.ByteString
        getClusterBytes();

    /**
     * <pre>
     * Only one of ``cluster`` and ``cluster_header`` can be specified.
     * Envoy will determine the cluster to route to by reading the value of the
     * HTTP header named by cluster_header from the request headers. Only the first value in header is used,
     * and no shadow request will happen if the value is not found in headers. Envoy will not wait for
     * the shadow cluster to respond before returning the response from the primary cluster.
     * .. attention::
     *   Internally, Envoy always uses the HTTP/2 ``:authority`` header to represent the HTTP/1
     *   ``Host`` header. Thus, if attempting to match on ``Host``, match on ``:authority`` instead.
     * .. note::
     *   If the header appears multiple times only the first value is used.
     * </pre>
     *
     * <code>string cluster_header = 5 [(.validate.rules) = { ... }</code>
     * @return The clusterHeader.
     */
    java.lang.String getClusterHeader();
    /**
     * <pre>
     * Only one of ``cluster`` and ``cluster_header`` can be specified.
     * Envoy will determine the cluster to route to by reading the value of the
     * HTTP header named by cluster_header from the request headers. Only the first value in header is used,
     * and no shadow request will happen if the value is not found in headers. Envoy will not wait for
     * the shadow cluster to respond before returning the response from the primary cluster.
     * .. attention::
     *   Internally, Envoy always uses the HTTP/2 ``:authority`` header to represent the HTTP/1
     *   ``Host`` header. Thus, if attempting to match on ``Host``, match on ``:authority`` instead.
     * .. note::
     *   If the header appears multiple times only the first value is used.
     * </pre>
     *
     * <code>string cluster_header = 5 [(.validate.rules) = { ... }</code>
     * @return The bytes for clusterHeader.
     */
    com.google.protobuf.ByteString
        getClusterHeaderBytes();

    /**
     * <pre>
     * If not specified, all requests to the target cluster will be mirrored.
     * If specified, this field takes precedence over the ``runtime_key`` field and requests must also
     * fall under the percentage of matches indicated by this field.
     * For some fraction N/D, a random number in the range [0,D) is selected. If the
     * number is &lt;= the value of the numerator N, or if the key is not present, the default
     * value, the request will be mirrored.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFractionalPercent runtime_fraction = 3;</code>
     * @return Whether the runtimeFraction field is set.
     */
    boolean hasRuntimeFraction();
    /**
     * <pre>
     * If not specified, all requests to the target cluster will be mirrored.
     * If specified, this field takes precedence over the ``runtime_key`` field and requests must also
     * fall under the percentage of matches indicated by this field.
     * For some fraction N/D, a random number in the range [0,D) is selected. If the
     * number is &lt;= the value of the numerator N, or if the key is not present, the default
     * value, the request will be mirrored.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFractionalPercent runtime_fraction = 3;</code>
     * @return The runtimeFraction.
     */
    io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent getRuntimeFraction();
    /**
     * <pre>
     * If not specified, all requests to the target cluster will be mirrored.
     * If specified, this field takes precedence over the ``runtime_key`` field and requests must also
     * fall under the percentage of matches indicated by this field.
     * For some fraction N/D, a random number in the range [0,D) is selected. If the
     * number is &lt;= the value of the numerator N, or if the key is not present, the default
     * value, the request will be mirrored.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFractionalPercent runtime_fraction = 3;</code>
     */
    io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercentOrBuilder getRuntimeFractionOrBuilder();

    /**
     * <pre>
     * Determines if the trace span should be sampled. Defaults to true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue trace_sampled = 4;</code>
     * @return Whether the traceSampled field is set.
     */
    boolean hasTraceSampled();
    /**
     * <pre>
     * Determines if the trace span should be sampled. Defaults to true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue trace_sampled = 4;</code>
     * @return The traceSampled.
     */
    com.google.protobuf.BoolValue getTraceSampled();
    /**
     * <pre>
     * Determines if the trace span should be sampled. Defaults to true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue trace_sampled = 4;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getTraceSampledOrBuilder();
  }
  /**
   * <pre>
   * The router is capable of shadowing traffic from one cluster to another. The current
   * implementation is "fire and forget," meaning Envoy will not wait for the shadow cluster to
   * respond before returning the response from the primary cluster. All normal statistics are
   * collected for the shadow cluster making this feature useful for testing.
   * During shadowing, the host/authority header is altered such that ``-shadow`` is appended. This is
   * useful for logging. For example, ``cluster1`` becomes ``cluster1-shadow``.
   * .. note::
   *   Shadowing will not be triggered if the primary cluster does not exist.
   * .. note::
   *   Shadowing doesn't support Http CONNECT and upgrades.
   * [#next-free-field: 6]
   * </pre>
   *
   * Protobuf type {@code envoy.config.route.v3.RouteAction.RequestMirrorPolicy}
   */
  public static final class RequestMirrorPolicy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.config.route.v3.RouteAction.RequestMirrorPolicy)
      RequestMirrorPolicyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RequestMirrorPolicy.newBuilder() to construct.
    private RequestMirrorPolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RequestMirrorPolicy() {
      cluster_ = "";
      clusterHeader_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RequestMirrorPolicy();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_RequestMirrorPolicy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_RequestMirrorPolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.class, io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.Builder.class);
    }

    public static final int CLUSTER_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object cluster_ = "";
    /**
     * <pre>
     * Only one of ``cluster`` and ``cluster_header`` can be specified.
     * [#next-major-version: Need to add back the validation rule: (validate.rules).string = {min_len: 1}]
     * Specifies the cluster that requests will be mirrored to. The cluster must
     * exist in the cluster manager configuration.
     * </pre>
     *
     * <code>string cluster = 1 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return The cluster.
     */
    @java.lang.Override
    public java.lang.String getCluster() {
      java.lang.Object ref = cluster_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cluster_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Only one of ``cluster`` and ``cluster_header`` can be specified.
     * [#next-major-version: Need to add back the validation rule: (validate.rules).string = {min_len: 1}]
     * Specifies the cluster that requests will be mirrored to. The cluster must
     * exist in the cluster manager configuration.
     * </pre>
     *
     * <code>string cluster = 1 [(.udpa.annotations.field_migrate) = { ... }</code>
     * @return The bytes for cluster.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClusterBytes() {
      java.lang.Object ref = cluster_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cluster_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLUSTER_HEADER_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object clusterHeader_ = "";
    /**
     * <pre>
     * Only one of ``cluster`` and ``cluster_header`` can be specified.
     * Envoy will determine the cluster to route to by reading the value of the
     * HTTP header named by cluster_header from the request headers. Only the first value in header is used,
     * and no shadow request will happen if the value is not found in headers. Envoy will not wait for
     * the shadow cluster to respond before returning the response from the primary cluster.
     * .. attention::
     *   Internally, Envoy always uses the HTTP/2 ``:authority`` header to represent the HTTP/1
     *   ``Host`` header. Thus, if attempting to match on ``Host``, match on ``:authority`` instead.
     * .. note::
     *   If the header appears multiple times only the first value is used.
     * </pre>
     *
     * <code>string cluster_header = 5 [(.validate.rules) = { ... }</code>
     * @return The clusterHeader.
     */
    @java.lang.Override
    public java.lang.String getClusterHeader() {
      java.lang.Object ref = clusterHeader_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clusterHeader_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Only one of ``cluster`` and ``cluster_header`` can be specified.
     * Envoy will determine the cluster to route to by reading the value of the
     * HTTP header named by cluster_header from the request headers. Only the first value in header is used,
     * and no shadow request will happen if the value is not found in headers. Envoy will not wait for
     * the shadow cluster to respond before returning the response from the primary cluster.
     * .. attention::
     *   Internally, Envoy always uses the HTTP/2 ``:authority`` header to represent the HTTP/1
     *   ``Host`` header. Thus, if attempting to match on ``Host``, match on ``:authority`` instead.
     * .. note::
     *   If the header appears multiple times only the first value is used.
     * </pre>
     *
     * <code>string cluster_header = 5 [(.validate.rules) = { ... }</code>
     * @return The bytes for clusterHeader.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClusterHeaderBytes() {
      java.lang.Object ref = clusterHeader_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clusterHeader_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RUNTIME_FRACTION_FIELD_NUMBER = 3;
    private io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent runtimeFraction_;
    /**
     * <pre>
     * If not specified, all requests to the target cluster will be mirrored.
     * If specified, this field takes precedence over the ``runtime_key`` field and requests must also
     * fall under the percentage of matches indicated by this field.
     * For some fraction N/D, a random number in the range [0,D) is selected. If the
     * number is &lt;= the value of the numerator N, or if the key is not present, the default
     * value, the request will be mirrored.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFractionalPercent runtime_fraction = 3;</code>
     * @return Whether the runtimeFraction field is set.
     */
    @java.lang.Override
    public boolean hasRuntimeFraction() {
      return runtimeFraction_ != null;
    }
    /**
     * <pre>
     * If not specified, all requests to the target cluster will be mirrored.
     * If specified, this field takes precedence over the ``runtime_key`` field and requests must also
     * fall under the percentage of matches indicated by this field.
     * For some fraction N/D, a random number in the range [0,D) is selected. If the
     * number is &lt;= the value of the numerator N, or if the key is not present, the default
     * value, the request will be mirrored.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFractionalPercent runtime_fraction = 3;</code>
     * @return The runtimeFraction.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent getRuntimeFraction() {
      return runtimeFraction_ == null ? io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.getDefaultInstance() : runtimeFraction_;
    }
    /**
     * <pre>
     * If not specified, all requests to the target cluster will be mirrored.
     * If specified, this field takes precedence over the ``runtime_key`` field and requests must also
     * fall under the percentage of matches indicated by this field.
     * For some fraction N/D, a random number in the range [0,D) is selected. If the
     * number is &lt;= the value of the numerator N, or if the key is not present, the default
     * value, the request will be mirrored.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RuntimeFractionalPercent runtime_fraction = 3;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercentOrBuilder getRuntimeFractionOrBuilder() {
      return runtimeFraction_ == null ? io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.getDefaultInstance() : runtimeFraction_;
    }

    public static final int TRACE_SAMPLED_FIELD_NUMBER = 4;
    private com.google.protobuf.BoolValue traceSampled_;
    /**
     * <pre>
     * Determines if the trace span should be sampled. Defaults to true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue trace_sampled = 4;</code>
     * @return Whether the traceSampled field is set.
     */
    @java.lang.Override
    public boolean hasTraceSampled() {
      return traceSampled_ != null;
    }
    /**
     * <pre>
     * Determines if the trace span should be sampled. Defaults to true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue trace_sampled = 4;</code>
     * @return The traceSampled.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getTraceSampled() {
      return traceSampled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : traceSampled_;
    }
    /**
     * <pre>
     * Determines if the trace span should be sampled. Defaults to true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue trace_sampled = 4;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getTraceSampledOrBuilder() {
      return traceSampled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : traceSampled_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cluster_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, cluster_);
      }
      if (runtimeFraction_ != null) {
        output.writeMessage(3, getRuntimeFraction());
      }
      if (traceSampled_ != null) {
        output.writeMessage(4, getTraceSampled());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clusterHeader_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, clusterHeader_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(cluster_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, cluster_);
      }
      if (runtimeFraction_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRuntimeFraction());
      }
      if (traceSampled_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTraceSampled());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clusterHeader_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, clusterHeader_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy)) {
        return super.equals(obj);
      }
      io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy other = (io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy) obj;

      if (!getCluster()
          .equals(other.getCluster())) return false;
      if (!getClusterHeader()
          .equals(other.getClusterHeader())) return false;
      if (hasRuntimeFraction() != other.hasRuntimeFraction()) return false;
      if (hasRuntimeFraction()) {
        if (!getRuntimeFraction()
            .equals(other.getRuntimeFraction())) return false;
      }
      if (hasTraceSampled() != other.hasTraceSampled()) return false;
      if (hasTraceSampled()) {
        if (!getTraceSampled()
            .equals(other.getTraceSampled())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CLUSTER_FIELD_NUMBER;
      hash = (53 * hash) + getCluster().hashCode();
      hash = (37 * hash) + CLUSTER_HEADER_FIELD_NUMBER;
      hash = (53 * hash) + getClusterHeader().hashCode();
      if (hasRuntimeFraction()) {
        hash = (37 * hash) + RUNTIME_FRACTION_FIELD_NUMBER;
        hash = (53 * hash) + getRuntimeFraction().hashCode();
      }
      if (hasTraceSampled()) {
        hash = (37 * hash) + TRACE_SAMPLED_FIELD_NUMBER;
        hash = (53 * hash) + getTraceSampled().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The router is capable of shadowing traffic from one cluster to another. The current
     * implementation is "fire and forget," meaning Envoy will not wait for the shadow cluster to
     * respond before returning the response from the primary cluster. All normal statistics are
     * collected for the shadow cluster making this feature useful for testing.
     * During shadowing, the host/authority header is altered such that ``-shadow`` is appended. This is
     * useful for logging. For example, ``cluster1`` becomes ``cluster1-shadow``.
     * .. note::
     *   Shadowing will not be triggered if the primary cluster does not exist.
     * .. note::
     *   Shadowing doesn't support Http CONNECT and upgrades.
     * [#next-free-field: 6]
     * </pre>
     *
     * Protobuf type {@code envoy.config.route.v3.RouteAction.RequestMirrorPolicy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.config.route.v3.RouteAction.RequestMirrorPolicy)
        io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_RequestMirrorPolicy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_RequestMirrorPolicy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.class, io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.Builder.class);
      }

      // Construct using io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        cluster_ = "";
        clusterHeader_ = "";
        runtimeFraction_ = null;
        if (runtimeFractionBuilder_ != null) {
          runtimeFractionBuilder_.dispose();
          runtimeFractionBuilder_ = null;
        }
        traceSampled_ = null;
        if (traceSampledBuilder_ != null) {
          traceSampledBuilder_.dispose();
          traceSampledBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_RequestMirrorPolicy_descriptor;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy getDefaultInstanceForType() {
        return io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.getDefaultInstance();
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy build() {
        io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy buildPartial() {
        io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy result = new io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.cluster_ = cluster_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.clusterHeader_ = clusterHeader_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.runtimeFraction_ = runtimeFractionBuilder_ == null
              ? runtimeFraction_
              : runtimeFractionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.traceSampled_ = traceSampledBuilder_ == null
              ? traceSampled_
              : traceSampledBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy) {
          return mergeFrom((io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy other) {
        if (other == io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.getDefaultInstance()) return this;
        if (!other.getCluster().isEmpty()) {
          cluster_ = other.cluster_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getClusterHeader().isEmpty()) {
          clusterHeader_ = other.clusterHeader_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasRuntimeFraction()) {
          mergeRuntimeFraction(other.getRuntimeFraction());
        }
        if (other.hasTraceSampled()) {
          mergeTraceSampled(other.getTraceSampled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                cluster_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 26: {
                input.readMessage(
                    getRuntimeFractionFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getTraceSampledFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                clusterHeader_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object cluster_ = "";
      /**
       * <pre>
       * Only one of ``cluster`` and ``cluster_header`` can be specified.
       * [#next-major-version: Need to add back the validation rule: (validate.rules).string = {min_len: 1}]
       * Specifies the cluster that requests will be mirrored to. The cluster must
       * exist in the cluster manager configuration.
       * </pre>
       *
       * <code>string cluster = 1 [(.udpa.annotations.field_migrate) = { ... }</code>
       * @return The cluster.
       */
      public java.lang.String getCluster() {
        java.lang.Object ref = cluster_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cluster_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Only one of ``cluster`` and ``cluster_header`` can be specified.
       * [#next-major-version: Need to add back the validation rule: (validate.rules).string = {min_len: 1}]
       * Specifies the cluster that requests will be mirrored to. The cluster must
       * exist in the cluster manager configuration.
       * </pre>
       *
       * <code>string cluster = 1 [(.udpa.annotations.field_migrate) = { ... }</code>
       * @return The bytes for cluster.
       */
      public com.google.protobuf.ByteString
          getClusterBytes() {
        java.lang.Object ref = cluster_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cluster_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Only one of ``cluster`` and ``cluster_header`` can be specified.
       * [#next-major-version: Need to add back the validation rule: (validate.rules).string = {min_len: 1}]
       * Specifies the cluster that requests will be mirrored to. The cluster must
       * exist in the cluster manager configuration.
       * </pre>
       *
       * <code>string cluster = 1 [(.udpa.annotations.field_migrate) = { ... }</code>
       * @param value The cluster to set.
       * @return This builder for chaining.
       */
      public Builder setCluster(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        cluster_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only one of ``cluster`` and ``cluster_header`` can be specified.
       * [#next-major-version: Need to add back the validation rule: (validate.rules).string = {min_len: 1}]
       * Specifies the cluster that requests will be mirrored to. The cluster must
       * exist in the cluster manager configuration.
       * </pre>
       *
       * <code>string cluster = 1 [(.udpa.annotations.field_migrate) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearCluster() {
        cluster_ = getDefaultInstance().getCluster();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only one of ``cluster`` and ``cluster_header`` can be specified.
       * [#next-major-version: Need to add back the validation rule: (validate.rules).string = {min_len: 1}]
       * Specifies the cluster that requests will be mirrored to. The cluster must
       * exist in the cluster manager configuration.
       * </pre>
       *
       * <code>string cluster = 1 [(.udpa.annotations.field_migrate) = { ... }</code>
       * @param value The bytes for cluster to set.
       * @return This builder for chaining.
       */
      public Builder setClusterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        cluster_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object clusterHeader_ = "";
      /**
       * <pre>
       * Only one of ``cluster`` and ``cluster_header`` can be specified.
       * Envoy will determine the cluster to route to by reading the value of the
       * HTTP header named by cluster_header from the request headers. Only the first value in header is used,
       * and no shadow request will happen if the value is not found in headers. Envoy will not wait for
       * the shadow cluster to respond before returning the response from the primary cluster.
       * .. attention::
       *   Internally, Envoy always uses the HTTP/2 ``:authority`` header to represent the HTTP/1
       *   ``Host`` header. Thus, if attempting to match on ``Host``, match on ``:authority`` instead.
       * .. note::
       *   If the header appears multiple times only the first value is used.
       * </pre>
       *
       * <code>string cluster_header = 5 [(.validate.rules) = { ... }</code>
       * @return The clusterHeader.
       */
      public java.lang.String getClusterHeader() {
        java.lang.Object ref = clusterHeader_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          clusterHeader_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Only one of ``cluster`` and ``cluster_header`` can be specified.
       * Envoy will determine the cluster to route to by reading the value of the
       * HTTP header named by cluster_header from the request headers. Only the first value in header is used,
       * and no shadow request will happen if the value is not found in headers. Envoy will not wait for
       * the shadow cluster to respond before returning the response from the primary cluster.
       * .. attention::
       *   Internally, Envoy always uses the HTTP/2 ``:authority`` header to represent the HTTP/1
       *   ``Host`` header. Thus, if attempting to match on ``Host``, match on ``:authority`` instead.
       * .. note::
       *   If the header appears multiple times only the first value is used.
       * </pre>
       *
       * <code>string cluster_header = 5 [(.validate.rules) = { ... }</code>
       * @return The bytes for clusterHeader.
       */
      public com.google.protobuf.ByteString
          getClusterHeaderBytes() {
        java.lang.Object ref = clusterHeader_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          clusterHeader_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Only one of ``cluster`` and ``cluster_header`` can be specified.
       * Envoy will determine the cluster to route to by reading the value of the
       * HTTP header named by cluster_header from the request headers. Only the first value in header is used,
       * and no shadow request will happen if the value is not found in headers. Envoy will not wait for
       * the shadow cluster to respond before returning the response from the primary cluster.
       * .. attention::
       *   Internally, Envoy always uses the HTTP/2 ``:authority`` header to represent the HTTP/1
       *   ``Host`` header. Thus, if attempting to match on ``Host``, match on ``:authority`` instead.
       * .. note::
       *   If the header appears multiple times only the first value is used.
       * </pre>
       *
       * <code>string cluster_header = 5 [(.validate.rules) = { ... }</code>
       * @param value The clusterHeader to set.
       * @return This builder for chaining.
       */
      public Builder setClusterHeader(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        clusterHeader_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only one of ``cluster`` and ``cluster_header`` can be specified.
       * Envoy will determine the cluster to route to by reading the value of the
       * HTTP header named by cluster_header from the request headers. Only the first value in header is used,
       * and no shadow request will happen if the value is not found in headers. Envoy will not wait for
       * the shadow cluster to respond before returning the response from the primary cluster.
       * .. attention::
       *   Internally, Envoy always uses the HTTP/2 ``:authority`` header to represent the HTTP/1
       *   ``Host`` header. Thus, if attempting to match on ``Host``, match on ``:authority`` instead.
       * .. note::
       *   If the header appears multiple times only the first value is used.
       * </pre>
       *
       * <code>string cluster_header = 5 [(.validate.rules) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearClusterHeader() {
        clusterHeader_ = getDefaultInstance().getClusterHeader();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only one of ``cluster`` and ``cluster_header`` can be specified.
       * Envoy will determine the cluster to route to by reading the value of the
       * HTTP header named by cluster_header from the request headers. Only the first value in header is used,
       * and no shadow request will happen if the value is not found in headers. Envoy will not wait for
       * the shadow cluster to respond before returning the response from the primary cluster.
       * .. attention::
       *   Internally, Envoy always uses the HTTP/2 ``:authority`` header to represent the HTTP/1
       *   ``Host`` header. Thus, if attempting to match on ``Host``, match on ``:authority`` instead.
       * .. note::
       *   If the header appears multiple times only the first value is used.
       * </pre>
       *
       * <code>string cluster_header = 5 [(.validate.rules) = { ... }</code>
       * @param value The bytes for clusterHeader to set.
       * @return This builder for chaining.
       */
      public Builder setClusterHeaderBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        clusterHeader_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent runtimeFraction_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent, io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.Builder, io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercentOrBuilder> runtimeFractionBuilder_;
      /**
       * <pre>
       * If not specified, all requests to the target cluster will be mirrored.
       * If specified, this field takes precedence over the ``runtime_key`` field and requests must also
       * fall under the percentage of matches indicated by this field.
       * For some fraction N/D, a random number in the range [0,D) is selected. If the
       * number is &lt;= the value of the numerator N, or if the key is not present, the default
       * value, the request will be mirrored.
       * </pre>
       *
       * <code>.envoy.config.core.v3.RuntimeFractionalPercent runtime_fraction = 3;</code>
       * @return Whether the runtimeFraction field is set.
       */
      public boolean hasRuntimeFraction() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * If not specified, all requests to the target cluster will be mirrored.
       * If specified, this field takes precedence over the ``runtime_key`` field and requests must also
       * fall under the percentage of matches indicated by this field.
       * For some fraction N/D, a random number in the range [0,D) is selected. If the
       * number is &lt;= the value of the numerator N, or if the key is not present, the default
       * value, the request will be mirrored.
       * </pre>
       *
       * <code>.envoy.config.core.v3.RuntimeFractionalPercent runtime_fraction = 3;</code>
       * @return The runtimeFraction.
       */
      public io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent getRuntimeFraction() {
        if (runtimeFractionBuilder_ == null) {
          return runtimeFraction_ == null ? io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.getDefaultInstance() : runtimeFraction_;
        } else {
          return runtimeFractionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * If not specified, all requests to the target cluster will be mirrored.
       * If specified, this field takes precedence over the ``runtime_key`` field and requests must also
       * fall under the percentage of matches indicated by this field.
       * For some fraction N/D, a random number in the range [0,D) is selected. If the
       * number is &lt;= the value of the numerator N, or if the key is not present, the default
       * value, the request will be mirrored.
       * </pre>
       *
       * <code>.envoy.config.core.v3.RuntimeFractionalPercent runtime_fraction = 3;</code>
       */
      public Builder setRuntimeFraction(io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent value) {
        if (runtimeFractionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          runtimeFraction_ = value;
        } else {
          runtimeFractionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If not specified, all requests to the target cluster will be mirrored.
       * If specified, this field takes precedence over the ``runtime_key`` field and requests must also
       * fall under the percentage of matches indicated by this field.
       * For some fraction N/D, a random number in the range [0,D) is selected. If the
       * number is &lt;= the value of the numerator N, or if the key is not present, the default
       * value, the request will be mirrored.
       * </pre>
       *
       * <code>.envoy.config.core.v3.RuntimeFractionalPercent runtime_fraction = 3;</code>
       */
      public Builder setRuntimeFraction(
          io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.Builder builderForValue) {
        if (runtimeFractionBuilder_ == null) {
          runtimeFraction_ = builderForValue.build();
        } else {
          runtimeFractionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If not specified, all requests to the target cluster will be mirrored.
       * If specified, this field takes precedence over the ``runtime_key`` field and requests must also
       * fall under the percentage of matches indicated by this field.
       * For some fraction N/D, a random number in the range [0,D) is selected. If the
       * number is &lt;= the value of the numerator N, or if the key is not present, the default
       * value, the request will be mirrored.
       * </pre>
       *
       * <code>.envoy.config.core.v3.RuntimeFractionalPercent runtime_fraction = 3;</code>
       */
      public Builder mergeRuntimeFraction(io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent value) {
        if (runtimeFractionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            runtimeFraction_ != null &&
            runtimeFraction_ != io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.getDefaultInstance()) {
            getRuntimeFractionBuilder().mergeFrom(value);
          } else {
            runtimeFraction_ = value;
          }
        } else {
          runtimeFractionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If not specified, all requests to the target cluster will be mirrored.
       * If specified, this field takes precedence over the ``runtime_key`` field and requests must also
       * fall under the percentage of matches indicated by this field.
       * For some fraction N/D, a random number in the range [0,D) is selected. If the
       * number is &lt;= the value of the numerator N, or if the key is not present, the default
       * value, the request will be mirrored.
       * </pre>
       *
       * <code>.envoy.config.core.v3.RuntimeFractionalPercent runtime_fraction = 3;</code>
       */
      public Builder clearRuntimeFraction() {
        bitField0_ = (bitField0_ & ~0x00000004);
        runtimeFraction_ = null;
        if (runtimeFractionBuilder_ != null) {
          runtimeFractionBuilder_.dispose();
          runtimeFractionBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If not specified, all requests to the target cluster will be mirrored.
       * If specified, this field takes precedence over the ``runtime_key`` field and requests must also
       * fall under the percentage of matches indicated by this field.
       * For some fraction N/D, a random number in the range [0,D) is selected. If the
       * number is &lt;= the value of the numerator N, or if the key is not present, the default
       * value, the request will be mirrored.
       * </pre>
       *
       * <code>.envoy.config.core.v3.RuntimeFractionalPercent runtime_fraction = 3;</code>
       */
      public io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.Builder getRuntimeFractionBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRuntimeFractionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * If not specified, all requests to the target cluster will be mirrored.
       * If specified, this field takes precedence over the ``runtime_key`` field and requests must also
       * fall under the percentage of matches indicated by this field.
       * For some fraction N/D, a random number in the range [0,D) is selected. If the
       * number is &lt;= the value of the numerator N, or if the key is not present, the default
       * value, the request will be mirrored.
       * </pre>
       *
       * <code>.envoy.config.core.v3.RuntimeFractionalPercent runtime_fraction = 3;</code>
       */
      public io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercentOrBuilder getRuntimeFractionOrBuilder() {
        if (runtimeFractionBuilder_ != null) {
          return runtimeFractionBuilder_.getMessageOrBuilder();
        } else {
          return runtimeFraction_ == null ?
              io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.getDefaultInstance() : runtimeFraction_;
        }
      }
      /**
       * <pre>
       * If not specified, all requests to the target cluster will be mirrored.
       * If specified, this field takes precedence over the ``runtime_key`` field and requests must also
       * fall under the percentage of matches indicated by this field.
       * For some fraction N/D, a random number in the range [0,D) is selected. If the
       * number is &lt;= the value of the numerator N, or if the key is not present, the default
       * value, the request will be mirrored.
       * </pre>
       *
       * <code>.envoy.config.core.v3.RuntimeFractionalPercent runtime_fraction = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent, io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.Builder, io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercentOrBuilder> 
          getRuntimeFractionFieldBuilder() {
        if (runtimeFractionBuilder_ == null) {
          runtimeFractionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent, io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercent.Builder, io.envoyproxy.envoy.config.core.v3.RuntimeFractionalPercentOrBuilder>(
                  getRuntimeFraction(),
                  getParentForChildren(),
                  isClean());
          runtimeFraction_ = null;
        }
        return runtimeFractionBuilder_;
      }

      private com.google.protobuf.BoolValue traceSampled_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> traceSampledBuilder_;
      /**
       * <pre>
       * Determines if the trace span should be sampled. Defaults to true.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue trace_sampled = 4;</code>
       * @return Whether the traceSampled field is set.
       */
      public boolean hasTraceSampled() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Determines if the trace span should be sampled. Defaults to true.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue trace_sampled = 4;</code>
       * @return The traceSampled.
       */
      public com.google.protobuf.BoolValue getTraceSampled() {
        if (traceSampledBuilder_ == null) {
          return traceSampled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : traceSampled_;
        } else {
          return traceSampledBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Determines if the trace span should be sampled. Defaults to true.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue trace_sampled = 4;</code>
       */
      public Builder setTraceSampled(com.google.protobuf.BoolValue value) {
        if (traceSampledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          traceSampled_ = value;
        } else {
          traceSampledBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Determines if the trace span should be sampled. Defaults to true.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue trace_sampled = 4;</code>
       */
      public Builder setTraceSampled(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (traceSampledBuilder_ == null) {
          traceSampled_ = builderForValue.build();
        } else {
          traceSampledBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Determines if the trace span should be sampled. Defaults to true.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue trace_sampled = 4;</code>
       */
      public Builder mergeTraceSampled(com.google.protobuf.BoolValue value) {
        if (traceSampledBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            traceSampled_ != null &&
            traceSampled_ != com.google.protobuf.BoolValue.getDefaultInstance()) {
            getTraceSampledBuilder().mergeFrom(value);
          } else {
            traceSampled_ = value;
          }
        } else {
          traceSampledBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Determines if the trace span should be sampled. Defaults to true.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue trace_sampled = 4;</code>
       */
      public Builder clearTraceSampled() {
        bitField0_ = (bitField0_ & ~0x00000008);
        traceSampled_ = null;
        if (traceSampledBuilder_ != null) {
          traceSampledBuilder_.dispose();
          traceSampledBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Determines if the trace span should be sampled. Defaults to true.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue trace_sampled = 4;</code>
       */
      public com.google.protobuf.BoolValue.Builder getTraceSampledBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getTraceSampledFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Determines if the trace span should be sampled. Defaults to true.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue trace_sampled = 4;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getTraceSampledOrBuilder() {
        if (traceSampledBuilder_ != null) {
          return traceSampledBuilder_.getMessageOrBuilder();
        } else {
          return traceSampled_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : traceSampled_;
        }
      }
      /**
       * <pre>
       * Determines if the trace span should be sampled. Defaults to true.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue trace_sampled = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getTraceSampledFieldBuilder() {
        if (traceSampledBuilder_ == null) {
          traceSampledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getTraceSampled(),
                  getParentForChildren(),
                  isClean());
          traceSampled_ = null;
        }
        return traceSampledBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.config.route.v3.RouteAction.RequestMirrorPolicy)
    }

    // @@protoc_insertion_point(class_scope:envoy.config.route.v3.RouteAction.RequestMirrorPolicy)
    private static final io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy();
    }

    public static io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RequestMirrorPolicy>
        PARSER = new com.google.protobuf.AbstractParser<RequestMirrorPolicy>() {
      @java.lang.Override
      public RequestMirrorPolicy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<RequestMirrorPolicy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RequestMirrorPolicy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HashPolicyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.config.route.v3.RouteAction.HashPolicy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Header hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    boolean hasHeader();
    /**
     * <pre>
     * Header hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Header header = 1;</code>
     * @return The header.
     */
    io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header getHeader();
    /**
     * <pre>
     * Header hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Header header = 1;</code>
     */
    io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.HeaderOrBuilder getHeaderOrBuilder();

    /**
     * <pre>
     * Cookie hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Cookie cookie = 2;</code>
     * @return Whether the cookie field is set.
     */
    boolean hasCookie();
    /**
     * <pre>
     * Cookie hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Cookie cookie = 2;</code>
     * @return The cookie.
     */
    io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie getCookie();
    /**
     * <pre>
     * Cookie hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Cookie cookie = 2;</code>
     */
    io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.CookieOrBuilder getCookieOrBuilder();

    /**
     * <pre>
     * Connection properties hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties connection_properties = 3;</code>
     * @return Whether the connectionProperties field is set.
     */
    boolean hasConnectionProperties();
    /**
     * <pre>
     * Connection properties hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties connection_properties = 3;</code>
     * @return The connectionProperties.
     */
    io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties getConnectionProperties();
    /**
     * <pre>
     * Connection properties hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties connection_properties = 3;</code>
     */
    io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionPropertiesOrBuilder getConnectionPropertiesOrBuilder();

    /**
     * <pre>
     * Query parameter hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter query_parameter = 5;</code>
     * @return Whether the queryParameter field is set.
     */
    boolean hasQueryParameter();
    /**
     * <pre>
     * Query parameter hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter query_parameter = 5;</code>
     * @return The queryParameter.
     */
    io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter getQueryParameter();
    /**
     * <pre>
     * Query parameter hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter query_parameter = 5;</code>
     */
    io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameterOrBuilder getQueryParameterOrBuilder();

    /**
     * <pre>
     * Filter state hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.FilterState filter_state = 6;</code>
     * @return Whether the filterState field is set.
     */
    boolean hasFilterState();
    /**
     * <pre>
     * Filter state hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.FilterState filter_state = 6;</code>
     * @return The filterState.
     */
    io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState getFilterState();
    /**
     * <pre>
     * Filter state hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.FilterState filter_state = 6;</code>
     */
    io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterStateOrBuilder getFilterStateOrBuilder();

    /**
     * <pre>
     * The flag that short-circuits the hash computing. This field provides a
     * 'fallback' style of configuration: "if a terminal policy doesn't work,
     * fallback to rest of the policy list", it saves time when the terminal
     * policy works.
     * If true, and there is already a hash computed, ignore rest of the
     * list of hash polices.
     * For example, if the following hash methods are configured:
     *  ========= ========
     *  specifier terminal
     *  ========= ========
     *  Header A  true
     *  Header B  false
     *  Header C  false
     *  ========= ========
     * The generateHash process ends if policy "header A" generates a hash, as
     * it's a terminal policy.
     * </pre>
     *
     * <code>bool terminal = 4;</code>
     * @return The terminal.
     */
    boolean getTerminal();

    public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.PolicySpecifierCase getPolicySpecifierCase();
  }
  /**
   * <pre>
   * Specifies the route's hashing policy if the upstream cluster uses a hashing :ref:`load balancer
   * &lt;arch_overview_load_balancing_types&gt;`.
   * [#next-free-field: 7]
   * </pre>
   *
   * Protobuf type {@code envoy.config.route.v3.RouteAction.HashPolicy}
   */
  public static final class HashPolicy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.config.route.v3.RouteAction.HashPolicy)
      HashPolicyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HashPolicy.newBuilder() to construct.
    private HashPolicy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HashPolicy() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HashPolicy();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.class, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Builder.class);
    }

    public interface HeaderOrBuilder extends
        // @@protoc_insertion_point(interface_extends:envoy.config.route.v3.RouteAction.HashPolicy.Header)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The name of the request header that will be used to obtain the hash
       * key. If the request header is not present, no hash will be produced.
       * </pre>
       *
       * <code>string header_name = 1 [(.validate.rules) = { ... }</code>
       * @return The headerName.
       */
      java.lang.String getHeaderName();
      /**
       * <pre>
       * The name of the request header that will be used to obtain the hash
       * key. If the request header is not present, no hash will be produced.
       * </pre>
       *
       * <code>string header_name = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for headerName.
       */
      com.google.protobuf.ByteString
          getHeaderNameBytes();

      /**
       * <pre>
       * If specified, the request header value will be rewritten and used
       * to produce the hash key.
       * </pre>
       *
       * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 2;</code>
       * @return Whether the regexRewrite field is set.
       */
      boolean hasRegexRewrite();
      /**
       * <pre>
       * If specified, the request header value will be rewritten and used
       * to produce the hash key.
       * </pre>
       *
       * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 2;</code>
       * @return The regexRewrite.
       */
      io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute getRegexRewrite();
      /**
       * <pre>
       * If specified, the request header value will be rewritten and used
       * to produce the hash key.
       * </pre>
       *
       * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 2;</code>
       */
      io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder getRegexRewriteOrBuilder();
    }
    /**
     * Protobuf type {@code envoy.config.route.v3.RouteAction.HashPolicy.Header}
     */
    public static final class Header extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:envoy.config.route.v3.RouteAction.HashPolicy.Header)
        HeaderOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Header.newBuilder() to construct.
      private Header(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Header() {
        headerName_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Header();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_Header_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_Header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.class, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.Builder.class);
      }

      public static final int HEADER_NAME_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object headerName_ = "";
      /**
       * <pre>
       * The name of the request header that will be used to obtain the hash
       * key. If the request header is not present, no hash will be produced.
       * </pre>
       *
       * <code>string header_name = 1 [(.validate.rules) = { ... }</code>
       * @return The headerName.
       */
      @java.lang.Override
      public java.lang.String getHeaderName() {
        java.lang.Object ref = headerName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          headerName_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The name of the request header that will be used to obtain the hash
       * key. If the request header is not present, no hash will be produced.
       * </pre>
       *
       * <code>string header_name = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for headerName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getHeaderNameBytes() {
        java.lang.Object ref = headerName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int REGEX_REWRITE_FIELD_NUMBER = 2;
      private io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute regexRewrite_;
      /**
       * <pre>
       * If specified, the request header value will be rewritten and used
       * to produce the hash key.
       * </pre>
       *
       * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 2;</code>
       * @return Whether the regexRewrite field is set.
       */
      @java.lang.Override
      public boolean hasRegexRewrite() {
        return regexRewrite_ != null;
      }
      /**
       * <pre>
       * If specified, the request header value will be rewritten and used
       * to produce the hash key.
       * </pre>
       *
       * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 2;</code>
       * @return The regexRewrite.
       */
      @java.lang.Override
      public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute getRegexRewrite() {
        return regexRewrite_ == null ? io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance() : regexRewrite_;
      }
      /**
       * <pre>
       * If specified, the request header value will be rewritten and used
       * to produce the hash key.
       * </pre>
       *
       * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 2;</code>
       */
      @java.lang.Override
      public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder getRegexRewriteOrBuilder() {
        return regexRewrite_ == null ? io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance() : regexRewrite_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(headerName_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, headerName_);
        }
        if (regexRewrite_ != null) {
          output.writeMessage(2, getRegexRewrite());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(headerName_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, headerName_);
        }
        if (regexRewrite_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getRegexRewrite());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header)) {
          return super.equals(obj);
        }
        io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header other = (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header) obj;

        if (!getHeaderName()
            .equals(other.getHeaderName())) return false;
        if (hasRegexRewrite() != other.hasRegexRewrite()) return false;
        if (hasRegexRewrite()) {
          if (!getRegexRewrite()
              .equals(other.getRegexRewrite())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + HEADER_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getHeaderName().hashCode();
        if (hasRegexRewrite()) {
          hash = (37 * hash) + REGEX_REWRITE_FIELD_NUMBER;
          hash = (53 * hash) + getRegexRewrite().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code envoy.config.route.v3.RouteAction.HashPolicy.Header}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:envoy.config.route.v3.RouteAction.HashPolicy.Header)
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.HeaderOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_Header_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_Header_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.class, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.Builder.class);
        }

        // Construct using io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          headerName_ = "";
          regexRewrite_ = null;
          if (regexRewriteBuilder_ != null) {
            regexRewriteBuilder_.dispose();
            regexRewriteBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_Header_descriptor;
        }

        @java.lang.Override
        public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header getDefaultInstanceForType() {
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.getDefaultInstance();
        }

        @java.lang.Override
        public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header build() {
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header buildPartial() {
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header result = new io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.headerName_ = headerName_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.regexRewrite_ = regexRewriteBuilder_ == null
                ? regexRewrite_
                : regexRewriteBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header) {
            return mergeFrom((io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header other) {
          if (other == io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.getDefaultInstance()) return this;
          if (!other.getHeaderName().isEmpty()) {
            headerName_ = other.headerName_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (other.hasRegexRewrite()) {
            mergeRegexRewrite(other.getRegexRewrite());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  headerName_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  input.readMessage(
                      getRegexRewriteFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object headerName_ = "";
        /**
         * <pre>
         * The name of the request header that will be used to obtain the hash
         * key. If the request header is not present, no hash will be produced.
         * </pre>
         *
         * <code>string header_name = 1 [(.validate.rules) = { ... }</code>
         * @return The headerName.
         */
        public java.lang.String getHeaderName() {
          java.lang.Object ref = headerName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            headerName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The name of the request header that will be used to obtain the hash
         * key. If the request header is not present, no hash will be produced.
         * </pre>
         *
         * <code>string header_name = 1 [(.validate.rules) = { ... }</code>
         * @return The bytes for headerName.
         */
        public com.google.protobuf.ByteString
            getHeaderNameBytes() {
          java.lang.Object ref = headerName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            headerName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The name of the request header that will be used to obtain the hash
         * key. If the request header is not present, no hash will be produced.
         * </pre>
         *
         * <code>string header_name = 1 [(.validate.rules) = { ... }</code>
         * @param value The headerName to set.
         * @return This builder for chaining.
         */
        public Builder setHeaderName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          headerName_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The name of the request header that will be used to obtain the hash
         * key. If the request header is not present, no hash will be produced.
         * </pre>
         *
         * <code>string header_name = 1 [(.validate.rules) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearHeaderName() {
          headerName_ = getDefaultInstance().getHeaderName();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The name of the request header that will be used to obtain the hash
         * key. If the request header is not present, no hash will be produced.
         * </pre>
         *
         * <code>string header_name = 1 [(.validate.rules) = { ... }</code>
         * @param value The bytes for headerName to set.
         * @return This builder for chaining.
         */
        public Builder setHeaderNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          headerName_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute regexRewrite_;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder> regexRewriteBuilder_;
        /**
         * <pre>
         * If specified, the request header value will be rewritten and used
         * to produce the hash key.
         * </pre>
         *
         * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 2;</code>
         * @return Whether the regexRewrite field is set.
         */
        public boolean hasRegexRewrite() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * If specified, the request header value will be rewritten and used
         * to produce the hash key.
         * </pre>
         *
         * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 2;</code>
         * @return The regexRewrite.
         */
        public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute getRegexRewrite() {
          if (regexRewriteBuilder_ == null) {
            return regexRewrite_ == null ? io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance() : regexRewrite_;
          } else {
            return regexRewriteBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * If specified, the request header value will be rewritten and used
         * to produce the hash key.
         * </pre>
         *
         * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 2;</code>
         */
        public Builder setRegexRewrite(io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute value) {
          if (regexRewriteBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            regexRewrite_ = value;
          } else {
            regexRewriteBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If specified, the request header value will be rewritten and used
         * to produce the hash key.
         * </pre>
         *
         * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 2;</code>
         */
        public Builder setRegexRewrite(
            io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder builderForValue) {
          if (regexRewriteBuilder_ == null) {
            regexRewrite_ = builderForValue.build();
          } else {
            regexRewriteBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If specified, the request header value will be rewritten and used
         * to produce the hash key.
         * </pre>
         *
         * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 2;</code>
         */
        public Builder mergeRegexRewrite(io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute value) {
          if (regexRewriteBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0) &&
              regexRewrite_ != null &&
              regexRewrite_ != io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance()) {
              getRegexRewriteBuilder().mergeFrom(value);
            } else {
              regexRewrite_ = value;
            }
          } else {
            regexRewriteBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If specified, the request header value will be rewritten and used
         * to produce the hash key.
         * </pre>
         *
         * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 2;</code>
         */
        public Builder clearRegexRewrite() {
          bitField0_ = (bitField0_ & ~0x00000002);
          regexRewrite_ = null;
          if (regexRewriteBuilder_ != null) {
            regexRewriteBuilder_.dispose();
            regexRewriteBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If specified, the request header value will be rewritten and used
         * to produce the hash key.
         * </pre>
         *
         * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 2;</code>
         */
        public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder getRegexRewriteBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getRegexRewriteFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * If specified, the request header value will be rewritten and used
         * to produce the hash key.
         * </pre>
         *
         * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 2;</code>
         */
        public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder getRegexRewriteOrBuilder() {
          if (regexRewriteBuilder_ != null) {
            return regexRewriteBuilder_.getMessageOrBuilder();
          } else {
            return regexRewrite_ == null ?
                io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance() : regexRewrite_;
          }
        }
        /**
         * <pre>
         * If specified, the request header value will be rewritten and used
         * to produce the hash key.
         * </pre>
         *
         * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder> 
            getRegexRewriteFieldBuilder() {
          if (regexRewriteBuilder_ == null) {
            regexRewriteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder>(
                    getRegexRewrite(),
                    getParentForChildren(),
                    isClean());
            regexRewrite_ = null;
          }
          return regexRewriteBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:envoy.config.route.v3.RouteAction.HashPolicy.Header)
      }

      // @@protoc_insertion_point(class_scope:envoy.config.route.v3.RouteAction.HashPolicy.Header)
      private static final io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header();
      }

      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Header>
          PARSER = new com.google.protobuf.AbstractParser<Header>() {
        @java.lang.Override
        public Header parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Header> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Header> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CookieOrBuilder extends
        // @@protoc_insertion_point(interface_extends:envoy.config.route.v3.RouteAction.HashPolicy.Cookie)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The name of the cookie that will be used to obtain the hash key. If the
       * cookie is not present and ttl below is not set, no hash will be
       * produced.
       * </pre>
       *
       * <code>string name = 1 [(.validate.rules) = { ... }</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * The name of the cookie that will be used to obtain the hash key. If the
       * cookie is not present and ttl below is not set, no hash will be
       * produced.
       * </pre>
       *
       * <code>string name = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * If specified, a cookie with the TTL will be generated if the cookie is
       * not present. If the TTL is present and zero, the generated cookie will
       * be a session cookie.
       * </pre>
       *
       * <code>.google.protobuf.Duration ttl = 2;</code>
       * @return Whether the ttl field is set.
       */
      boolean hasTtl();
      /**
       * <pre>
       * If specified, a cookie with the TTL will be generated if the cookie is
       * not present. If the TTL is present and zero, the generated cookie will
       * be a session cookie.
       * </pre>
       *
       * <code>.google.protobuf.Duration ttl = 2;</code>
       * @return The ttl.
       */
      com.google.protobuf.Duration getTtl();
      /**
       * <pre>
       * If specified, a cookie with the TTL will be generated if the cookie is
       * not present. If the TTL is present and zero, the generated cookie will
       * be a session cookie.
       * </pre>
       *
       * <code>.google.protobuf.Duration ttl = 2;</code>
       */
      com.google.protobuf.DurationOrBuilder getTtlOrBuilder();

      /**
       * <pre>
       * The name of the path for the cookie. If no path is specified here, no path
       * will be set for the cookie.
       * </pre>
       *
       * <code>string path = 3;</code>
       * @return The path.
       */
      java.lang.String getPath();
      /**
       * <pre>
       * The name of the path for the cookie. If no path is specified here, no path
       * will be set for the cookie.
       * </pre>
       *
       * <code>string path = 3;</code>
       * @return The bytes for path.
       */
      com.google.protobuf.ByteString
          getPathBytes();
    }
    /**
     * <pre>
     * Envoy supports two types of cookie affinity:
     * 1. Passive. Envoy takes a cookie that's present in the cookies header and
     *    hashes on its value.
     * 2. Generated. Envoy generates and sets a cookie with an expiration (TTL)
     *    on the first request from the client in its response to the client,
     *    based on the endpoint the request gets sent to. The client then
     *    presents this on the next and all subsequent requests. The hash of
     *    this is sufficient to ensure these requests get sent to the same
     *    endpoint. The cookie is generated by hashing the source and
     *    destination ports and addresses so that multiple independent HTTP2
     *    streams on the same connection will independently receive the same
     *    cookie, even if they arrive at the Envoy simultaneously.
     * </pre>
     *
     * Protobuf type {@code envoy.config.route.v3.RouteAction.HashPolicy.Cookie}
     */
    public static final class Cookie extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:envoy.config.route.v3.RouteAction.HashPolicy.Cookie)
        CookieOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Cookie.newBuilder() to construct.
      private Cookie(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Cookie() {
        name_ = "";
        path_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Cookie();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_Cookie_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_Cookie_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.class, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.Builder.class);
      }

      public static final int NAME_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the cookie that will be used to obtain the hash key. If the
       * cookie is not present and ttl below is not set, no hash will be
       * produced.
       * </pre>
       *
       * <code>string name = 1 [(.validate.rules) = { ... }</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The name of the cookie that will be used to obtain the hash key. If the
       * cookie is not present and ttl below is not set, no hash will be
       * produced.
       * </pre>
       *
       * <code>string name = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TTL_FIELD_NUMBER = 2;
      private com.google.protobuf.Duration ttl_;
      /**
       * <pre>
       * If specified, a cookie with the TTL will be generated if the cookie is
       * not present. If the TTL is present and zero, the generated cookie will
       * be a session cookie.
       * </pre>
       *
       * <code>.google.protobuf.Duration ttl = 2;</code>
       * @return Whether the ttl field is set.
       */
      @java.lang.Override
      public boolean hasTtl() {
        return ttl_ != null;
      }
      /**
       * <pre>
       * If specified, a cookie with the TTL will be generated if the cookie is
       * not present. If the TTL is present and zero, the generated cookie will
       * be a session cookie.
       * </pre>
       *
       * <code>.google.protobuf.Duration ttl = 2;</code>
       * @return The ttl.
       */
      @java.lang.Override
      public com.google.protobuf.Duration getTtl() {
        return ttl_ == null ? com.google.protobuf.Duration.getDefaultInstance() : ttl_;
      }
      /**
       * <pre>
       * If specified, a cookie with the TTL will be generated if the cookie is
       * not present. If the TTL is present and zero, the generated cookie will
       * be a session cookie.
       * </pre>
       *
       * <code>.google.protobuf.Duration ttl = 2;</code>
       */
      @java.lang.Override
      public com.google.protobuf.DurationOrBuilder getTtlOrBuilder() {
        return ttl_ == null ? com.google.protobuf.Duration.getDefaultInstance() : ttl_;
      }

      public static final int PATH_FIELD_NUMBER = 3;
      @SuppressWarnings("serial")
      private volatile java.lang.Object path_ = "";
      /**
       * <pre>
       * The name of the path for the cookie. If no path is specified here, no path
       * will be set for the cookie.
       * </pre>
       *
       * <code>string path = 3;</code>
       * @return The path.
       */
      @java.lang.Override
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          path_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The name of the path for the cookie. If no path is specified here, no path
       * will be set for the cookie.
       * </pre>
       *
       * <code>string path = 3;</code>
       * @return The bytes for path.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (ttl_ != null) {
          output.writeMessage(2, getTtl());
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(path_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, path_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (ttl_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getTtl());
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(path_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, path_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie)) {
          return super.equals(obj);
        }
        io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie other = (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie) obj;

        if (!getName()
            .equals(other.getName())) return false;
        if (hasTtl() != other.hasTtl()) return false;
        if (hasTtl()) {
          if (!getTtl()
              .equals(other.getTtl())) return false;
        }
        if (!getPath()
            .equals(other.getPath())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        if (hasTtl()) {
          hash = (37 * hash) + TTL_FIELD_NUMBER;
          hash = (53 * hash) + getTtl().hashCode();
        }
        hash = (37 * hash) + PATH_FIELD_NUMBER;
        hash = (53 * hash) + getPath().hashCode();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Envoy supports two types of cookie affinity:
       * 1. Passive. Envoy takes a cookie that's present in the cookies header and
       *    hashes on its value.
       * 2. Generated. Envoy generates and sets a cookie with an expiration (TTL)
       *    on the first request from the client in its response to the client,
       *    based on the endpoint the request gets sent to. The client then
       *    presents this on the next and all subsequent requests. The hash of
       *    this is sufficient to ensure these requests get sent to the same
       *    endpoint. The cookie is generated by hashing the source and
       *    destination ports and addresses so that multiple independent HTTP2
       *    streams on the same connection will independently receive the same
       *    cookie, even if they arrive at the Envoy simultaneously.
       * </pre>
       *
       * Protobuf type {@code envoy.config.route.v3.RouteAction.HashPolicy.Cookie}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:envoy.config.route.v3.RouteAction.HashPolicy.Cookie)
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.CookieOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_Cookie_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_Cookie_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.class, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.Builder.class);
        }

        // Construct using io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          name_ = "";
          ttl_ = null;
          if (ttlBuilder_ != null) {
            ttlBuilder_.dispose();
            ttlBuilder_ = null;
          }
          path_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_Cookie_descriptor;
        }

        @java.lang.Override
        public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie getDefaultInstanceForType() {
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.getDefaultInstance();
        }

        @java.lang.Override
        public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie build() {
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie buildPartial() {
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie result = new io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.name_ = name_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.ttl_ = ttlBuilder_ == null
                ? ttl_
                : ttlBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.path_ = path_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie) {
            return mergeFrom((io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie other) {
          if (other == io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.getDefaultInstance()) return this;
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (other.hasTtl()) {
            mergeTtl(other.getTtl());
          }
          if (!other.getPath().isEmpty()) {
            path_ = other.path_;
            bitField0_ |= 0x00000004;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  name_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  input.readMessage(
                      getTtlFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 26: {
                  path_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 26
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * The name of the cookie that will be used to obtain the hash key. If the
         * cookie is not present and ttl below is not set, no hash will be
         * produced.
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The name of the cookie that will be used to obtain the hash key. If the
         * cookie is not present and ttl below is not set, no hash will be
         * produced.
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The name of the cookie that will be used to obtain the hash key. If the
         * cookie is not present and ttl below is not set, no hash will be
         * produced.
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The name of the cookie that will be used to obtain the hash key. If the
         * cookie is not present and ttl below is not set, no hash will be
         * produced.
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          name_ = getDefaultInstance().getName();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The name of the cookie that will be used to obtain the hash key. If the
         * cookie is not present and ttl below is not set, no hash will be
         * produced.
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          name_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private com.google.protobuf.Duration ttl_;
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> ttlBuilder_;
        /**
         * <pre>
         * If specified, a cookie with the TTL will be generated if the cookie is
         * not present. If the TTL is present and zero, the generated cookie will
         * be a session cookie.
         * </pre>
         *
         * <code>.google.protobuf.Duration ttl = 2;</code>
         * @return Whether the ttl field is set.
         */
        public boolean hasTtl() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * If specified, a cookie with the TTL will be generated if the cookie is
         * not present. If the TTL is present and zero, the generated cookie will
         * be a session cookie.
         * </pre>
         *
         * <code>.google.protobuf.Duration ttl = 2;</code>
         * @return The ttl.
         */
        public com.google.protobuf.Duration getTtl() {
          if (ttlBuilder_ == null) {
            return ttl_ == null ? com.google.protobuf.Duration.getDefaultInstance() : ttl_;
          } else {
            return ttlBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * If specified, a cookie with the TTL will be generated if the cookie is
         * not present. If the TTL is present and zero, the generated cookie will
         * be a session cookie.
         * </pre>
         *
         * <code>.google.protobuf.Duration ttl = 2;</code>
         */
        public Builder setTtl(com.google.protobuf.Duration value) {
          if (ttlBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ttl_ = value;
          } else {
            ttlBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If specified, a cookie with the TTL will be generated if the cookie is
         * not present. If the TTL is present and zero, the generated cookie will
         * be a session cookie.
         * </pre>
         *
         * <code>.google.protobuf.Duration ttl = 2;</code>
         */
        public Builder setTtl(
            com.google.protobuf.Duration.Builder builderForValue) {
          if (ttlBuilder_ == null) {
            ttl_ = builderForValue.build();
          } else {
            ttlBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If specified, a cookie with the TTL will be generated if the cookie is
         * not present. If the TTL is present and zero, the generated cookie will
         * be a session cookie.
         * </pre>
         *
         * <code>.google.protobuf.Duration ttl = 2;</code>
         */
        public Builder mergeTtl(com.google.protobuf.Duration value) {
          if (ttlBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0) &&
              ttl_ != null &&
              ttl_ != com.google.protobuf.Duration.getDefaultInstance()) {
              getTtlBuilder().mergeFrom(value);
            } else {
              ttl_ = value;
            }
          } else {
            ttlBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If specified, a cookie with the TTL will be generated if the cookie is
         * not present. If the TTL is present and zero, the generated cookie will
         * be a session cookie.
         * </pre>
         *
         * <code>.google.protobuf.Duration ttl = 2;</code>
         */
        public Builder clearTtl() {
          bitField0_ = (bitField0_ & ~0x00000002);
          ttl_ = null;
          if (ttlBuilder_ != null) {
            ttlBuilder_.dispose();
            ttlBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If specified, a cookie with the TTL will be generated if the cookie is
         * not present. If the TTL is present and zero, the generated cookie will
         * be a session cookie.
         * </pre>
         *
         * <code>.google.protobuf.Duration ttl = 2;</code>
         */
        public com.google.protobuf.Duration.Builder getTtlBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getTtlFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * If specified, a cookie with the TTL will be generated if the cookie is
         * not present. If the TTL is present and zero, the generated cookie will
         * be a session cookie.
         * </pre>
         *
         * <code>.google.protobuf.Duration ttl = 2;</code>
         */
        public com.google.protobuf.DurationOrBuilder getTtlOrBuilder() {
          if (ttlBuilder_ != null) {
            return ttlBuilder_.getMessageOrBuilder();
          } else {
            return ttl_ == null ?
                com.google.protobuf.Duration.getDefaultInstance() : ttl_;
          }
        }
        /**
         * <pre>
         * If specified, a cookie with the TTL will be generated if the cookie is
         * not present. If the TTL is present and zero, the generated cookie will
         * be a session cookie.
         * </pre>
         *
         * <code>.google.protobuf.Duration ttl = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
            getTtlFieldBuilder() {
          if (ttlBuilder_ == null) {
            ttlBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                    getTtl(),
                    getParentForChildren(),
                    isClean());
            ttl_ = null;
          }
          return ttlBuilder_;
        }

        private java.lang.Object path_ = "";
        /**
         * <pre>
         * The name of the path for the cookie. If no path is specified here, no path
         * will be set for the cookie.
         * </pre>
         *
         * <code>string path = 3;</code>
         * @return The path.
         */
        public java.lang.String getPath() {
          java.lang.Object ref = path_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            path_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The name of the path for the cookie. If no path is specified here, no path
         * will be set for the cookie.
         * </pre>
         *
         * <code>string path = 3;</code>
         * @return The bytes for path.
         */
        public com.google.protobuf.ByteString
            getPathBytes() {
          java.lang.Object ref = path_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            path_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The name of the path for the cookie. If no path is specified here, no path
         * will be set for the cookie.
         * </pre>
         *
         * <code>string path = 3;</code>
         * @param value The path to set.
         * @return This builder for chaining.
         */
        public Builder setPath(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          path_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The name of the path for the cookie. If no path is specified here, no path
         * will be set for the cookie.
         * </pre>
         *
         * <code>string path = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearPath() {
          path_ = getDefaultInstance().getPath();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The name of the path for the cookie. If no path is specified here, no path
         * will be set for the cookie.
         * </pre>
         *
         * <code>string path = 3;</code>
         * @param value The bytes for path to set.
         * @return This builder for chaining.
         */
        public Builder setPathBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          path_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:envoy.config.route.v3.RouteAction.HashPolicy.Cookie)
      }

      // @@protoc_insertion_point(class_scope:envoy.config.route.v3.RouteAction.HashPolicy.Cookie)
      private static final io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie();
      }

      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Cookie>
          PARSER = new com.google.protobuf.AbstractParser<Cookie>() {
        @java.lang.Override
        public Cookie parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Cookie> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Cookie> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ConnectionPropertiesOrBuilder extends
        // @@protoc_insertion_point(interface_extends:envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Hash on source IP address.
       * </pre>
       *
       * <code>bool source_ip = 1;</code>
       * @return The sourceIp.
       */
      boolean getSourceIp();
    }
    /**
     * Protobuf type {@code envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties}
     */
    public static final class ConnectionProperties extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties)
        ConnectionPropertiesOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ConnectionProperties.newBuilder() to construct.
      private ConnectionProperties(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ConnectionProperties() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ConnectionProperties();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_ConnectionProperties_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_ConnectionProperties_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.class, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.Builder.class);
      }

      public static final int SOURCE_IP_FIELD_NUMBER = 1;
      private boolean sourceIp_ = false;
      /**
       * <pre>
       * Hash on source IP address.
       * </pre>
       *
       * <code>bool source_ip = 1;</code>
       * @return The sourceIp.
       */
      @java.lang.Override
      public boolean getSourceIp() {
        return sourceIp_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sourceIp_ != false) {
          output.writeBool(1, sourceIp_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sourceIp_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, sourceIp_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties)) {
          return super.equals(obj);
        }
        io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties other = (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties) obj;

        if (getSourceIp()
            != other.getSourceIp()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + SOURCE_IP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getSourceIp());
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties)
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionPropertiesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_ConnectionProperties_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_ConnectionProperties_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.class, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.Builder.class);
        }

        // Construct using io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          sourceIp_ = false;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_ConnectionProperties_descriptor;
        }

        @java.lang.Override
        public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties getDefaultInstanceForType() {
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.getDefaultInstance();
        }

        @java.lang.Override
        public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties build() {
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties buildPartial() {
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties result = new io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.sourceIp_ = sourceIp_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties) {
            return mergeFrom((io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties other) {
          if (other == io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.getDefaultInstance()) return this;
          if (other.getSourceIp() != false) {
            setSourceIp(other.getSourceIp());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  sourceIp_ = input.readBool();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private boolean sourceIp_ ;
        /**
         * <pre>
         * Hash on source IP address.
         * </pre>
         *
         * <code>bool source_ip = 1;</code>
         * @return The sourceIp.
         */
        @java.lang.Override
        public boolean getSourceIp() {
          return sourceIp_;
        }
        /**
         * <pre>
         * Hash on source IP address.
         * </pre>
         *
         * <code>bool source_ip = 1;</code>
         * @param value The sourceIp to set.
         * @return This builder for chaining.
         */
        public Builder setSourceIp(boolean value) {
          
          sourceIp_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Hash on source IP address.
         * </pre>
         *
         * <code>bool source_ip = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearSourceIp() {
          bitField0_ = (bitField0_ & ~0x00000001);
          sourceIp_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties)
      }

      // @@protoc_insertion_point(class_scope:envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties)
      private static final io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties();
      }

      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ConnectionProperties>
          PARSER = new com.google.protobuf.AbstractParser<ConnectionProperties>() {
        @java.lang.Override
        public ConnectionProperties parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ConnectionProperties> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ConnectionProperties> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface QueryParameterOrBuilder extends
        // @@protoc_insertion_point(interface_extends:envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The name of the URL query parameter that will be used to obtain the hash
       * key. If the parameter is not present, no hash will be produced. Query
       * parameter names are case-sensitive.
       * </pre>
       *
       * <code>string name = 1 [(.validate.rules) = { ... }</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * The name of the URL query parameter that will be used to obtain the hash
       * key. If the parameter is not present, no hash will be produced. Query
       * parameter names are case-sensitive.
       * </pre>
       *
       * <code>string name = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();
    }
    /**
     * Protobuf type {@code envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter}
     */
    public static final class QueryParameter extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter)
        QueryParameterOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use QueryParameter.newBuilder() to construct.
      private QueryParameter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private QueryParameter() {
        name_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new QueryParameter();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_QueryParameter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_QueryParameter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.class, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.Builder.class);
      }

      public static final int NAME_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object name_ = "";
      /**
       * <pre>
       * The name of the URL query parameter that will be used to obtain the hash
       * key. If the parameter is not present, no hash will be produced. Query
       * parameter names are case-sensitive.
       * </pre>
       *
       * <code>string name = 1 [(.validate.rules) = { ... }</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The name of the URL query parameter that will be used to obtain the hash
       * key. If the parameter is not present, no hash will be produced. Query
       * parameter names are case-sensitive.
       * </pre>
       *
       * <code>string name = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter)) {
          return super.equals(obj);
        }
        io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter other = (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter) obj;

        if (!getName()
            .equals(other.getName())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter)
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameterOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_QueryParameter_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_QueryParameter_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.class, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.Builder.class);
        }

        // Construct using io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          name_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_QueryParameter_descriptor;
        }

        @java.lang.Override
        public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter getDefaultInstanceForType() {
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.getDefaultInstance();
        }

        @java.lang.Override
        public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter build() {
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter buildPartial() {
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter result = new io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.name_ = name_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter) {
            return mergeFrom((io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter other) {
          if (other == io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.getDefaultInstance()) return this;
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  name_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * The name of the URL query parameter that will be used to obtain the hash
         * key. If the parameter is not present, no hash will be produced. Query
         * parameter names are case-sensitive.
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The name of the URL query parameter that will be used to obtain the hash
         * key. If the parameter is not present, no hash will be produced. Query
         * parameter names are case-sensitive.
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The name of the URL query parameter that will be used to obtain the hash
         * key. If the parameter is not present, no hash will be produced. Query
         * parameter names are case-sensitive.
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The name of the URL query parameter that will be used to obtain the hash
         * key. If the parameter is not present, no hash will be produced. Query
         * parameter names are case-sensitive.
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          name_ = getDefaultInstance().getName();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The name of the URL query parameter that will be used to obtain the hash
         * key. If the parameter is not present, no hash will be produced. Query
         * parameter names are case-sensitive.
         * </pre>
         *
         * <code>string name = 1 [(.validate.rules) = { ... }</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          name_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter)
      }

      // @@protoc_insertion_point(class_scope:envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter)
      private static final io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter();
      }

      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<QueryParameter>
          PARSER = new com.google.protobuf.AbstractParser<QueryParameter>() {
        @java.lang.Override
        public QueryParameter parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<QueryParameter> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<QueryParameter> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface FilterStateOrBuilder extends
        // @@protoc_insertion_point(interface_extends:envoy.config.route.v3.RouteAction.HashPolicy.FilterState)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The name of the Object in the per-request filterState, which is an
       * Envoy::Hashable object. If there is no data associated with the key,
       * or the stored object is not Envoy::Hashable, no hash will be produced.
       * </pre>
       *
       * <code>string key = 1 [(.validate.rules) = { ... }</code>
       * @return The key.
       */
      java.lang.String getKey();
      /**
       * <pre>
       * The name of the Object in the per-request filterState, which is an
       * Envoy::Hashable object. If there is no data associated with the key,
       * or the stored object is not Envoy::Hashable, no hash will be produced.
       * </pre>
       *
       * <code>string key = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for key.
       */
      com.google.protobuf.ByteString
          getKeyBytes();
    }
    /**
     * Protobuf type {@code envoy.config.route.v3.RouteAction.HashPolicy.FilterState}
     */
    public static final class FilterState extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:envoy.config.route.v3.RouteAction.HashPolicy.FilterState)
        FilterStateOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use FilterState.newBuilder() to construct.
      private FilterState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private FilterState() {
        key_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new FilterState();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_FilterState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_FilterState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.class, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.Builder.class);
      }

      public static final int KEY_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object key_ = "";
      /**
       * <pre>
       * The name of the Object in the per-request filterState, which is an
       * Envoy::Hashable object. If there is no data associated with the key,
       * or the stored object is not Envoy::Hashable, no hash will be produced.
       * </pre>
       *
       * <code>string key = 1 [(.validate.rules) = { ... }</code>
       * @return The key.
       */
      @java.lang.Override
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * The name of the Object in the per-request filterState, which is an
       * Envoy::Hashable object. If there is no data associated with the key,
       * or the stored object is not Envoy::Hashable, no hash will be produced.
       * </pre>
       *
       * <code>string key = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for key.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState)) {
          return super.equals(obj);
        }
        io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState other = (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState) obj;

        if (!getKey()
            .equals(other.getKey())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + KEY_FIELD_NUMBER;
        hash = (53 * hash) + getKey().hashCode();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code envoy.config.route.v3.RouteAction.HashPolicy.FilterState}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:envoy.config.route.v3.RouteAction.HashPolicy.FilterState)
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterStateOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_FilterState_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_FilterState_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.class, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.Builder.class);
        }

        // Construct using io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          key_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_FilterState_descriptor;
        }

        @java.lang.Override
        public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState getDefaultInstanceForType() {
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.getDefaultInstance();
        }

        @java.lang.Override
        public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState build() {
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState buildPartial() {
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState result = new io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.key_ = key_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState) {
            return mergeFrom((io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState other) {
          if (other == io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.getDefaultInstance()) return this;
          if (!other.getKey().isEmpty()) {
            key_ = other.key_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  key_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object key_ = "";
        /**
         * <pre>
         * The name of the Object in the per-request filterState, which is an
         * Envoy::Hashable object. If there is no data associated with the key,
         * or the stored object is not Envoy::Hashable, no hash will be produced.
         * </pre>
         *
         * <code>string key = 1 [(.validate.rules) = { ... }</code>
         * @return The key.
         */
        public java.lang.String getKey() {
          java.lang.Object ref = key_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            key_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The name of the Object in the per-request filterState, which is an
         * Envoy::Hashable object. If there is no data associated with the key,
         * or the stored object is not Envoy::Hashable, no hash will be produced.
         * </pre>
         *
         * <code>string key = 1 [(.validate.rules) = { ... }</code>
         * @return The bytes for key.
         */
        public com.google.protobuf.ByteString
            getKeyBytes() {
          java.lang.Object ref = key_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            key_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The name of the Object in the per-request filterState, which is an
         * Envoy::Hashable object. If there is no data associated with the key,
         * or the stored object is not Envoy::Hashable, no hash will be produced.
         * </pre>
         *
         * <code>string key = 1 [(.validate.rules) = { ... }</code>
         * @param value The key to set.
         * @return This builder for chaining.
         */
        public Builder setKey(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          key_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The name of the Object in the per-request filterState, which is an
         * Envoy::Hashable object. If there is no data associated with the key,
         * or the stored object is not Envoy::Hashable, no hash will be produced.
         * </pre>
         *
         * <code>string key = 1 [(.validate.rules) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearKey() {
          key_ = getDefaultInstance().getKey();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The name of the Object in the per-request filterState, which is an
         * Envoy::Hashable object. If there is no data associated with the key,
         * or the stored object is not Envoy::Hashable, no hash will be produced.
         * </pre>
         *
         * <code>string key = 1 [(.validate.rules) = { ... }</code>
         * @param value The bytes for key to set.
         * @return This builder for chaining.
         */
        public Builder setKeyBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          key_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:envoy.config.route.v3.RouteAction.HashPolicy.FilterState)
      }

      // @@protoc_insertion_point(class_scope:envoy.config.route.v3.RouteAction.HashPolicy.FilterState)
      private static final io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState();
      }

      public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<FilterState>
          PARSER = new com.google.protobuf.AbstractParser<FilterState>() {
        @java.lang.Override
        public FilterState parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<FilterState> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<FilterState> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int policySpecifierCase_ = 0;
    private java.lang.Object policySpecifier_;
    public enum PolicySpecifierCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      HEADER(1),
      COOKIE(2),
      CONNECTION_PROPERTIES(3),
      QUERY_PARAMETER(5),
      FILTER_STATE(6),
      POLICYSPECIFIER_NOT_SET(0);
      private final int value;
      private PolicySpecifierCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PolicySpecifierCase valueOf(int value) {
        return forNumber(value);
      }

      public static PolicySpecifierCase forNumber(int value) {
        switch (value) {
          case 1: return HEADER;
          case 2: return COOKIE;
          case 3: return CONNECTION_PROPERTIES;
          case 5: return QUERY_PARAMETER;
          case 6: return FILTER_STATE;
          case 0: return POLICYSPECIFIER_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PolicySpecifierCase
    getPolicySpecifierCase() {
      return PolicySpecifierCase.forNumber(
          policySpecifierCase_);
    }

    public static final int HEADER_FIELD_NUMBER = 1;
    /**
     * <pre>
     * Header hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Header header = 1;</code>
     * @return Whether the header field is set.
     */
    @java.lang.Override
    public boolean hasHeader() {
      return policySpecifierCase_ == 1;
    }
    /**
     * <pre>
     * Header hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Header header = 1;</code>
     * @return The header.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header getHeader() {
      if (policySpecifierCase_ == 1) {
         return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header) policySpecifier_;
      }
      return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.getDefaultInstance();
    }
    /**
     * <pre>
     * Header hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Header header = 1;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.HeaderOrBuilder getHeaderOrBuilder() {
      if (policySpecifierCase_ == 1) {
         return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header) policySpecifier_;
      }
      return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.getDefaultInstance();
    }

    public static final int COOKIE_FIELD_NUMBER = 2;
    /**
     * <pre>
     * Cookie hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Cookie cookie = 2;</code>
     * @return Whether the cookie field is set.
     */
    @java.lang.Override
    public boolean hasCookie() {
      return policySpecifierCase_ == 2;
    }
    /**
     * <pre>
     * Cookie hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Cookie cookie = 2;</code>
     * @return The cookie.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie getCookie() {
      if (policySpecifierCase_ == 2) {
         return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie) policySpecifier_;
      }
      return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.getDefaultInstance();
    }
    /**
     * <pre>
     * Cookie hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Cookie cookie = 2;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.CookieOrBuilder getCookieOrBuilder() {
      if (policySpecifierCase_ == 2) {
         return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie) policySpecifier_;
      }
      return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.getDefaultInstance();
    }

    public static final int CONNECTION_PROPERTIES_FIELD_NUMBER = 3;
    /**
     * <pre>
     * Connection properties hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties connection_properties = 3;</code>
     * @return Whether the connectionProperties field is set.
     */
    @java.lang.Override
    public boolean hasConnectionProperties() {
      return policySpecifierCase_ == 3;
    }
    /**
     * <pre>
     * Connection properties hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties connection_properties = 3;</code>
     * @return The connectionProperties.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties getConnectionProperties() {
      if (policySpecifierCase_ == 3) {
         return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties) policySpecifier_;
      }
      return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.getDefaultInstance();
    }
    /**
     * <pre>
     * Connection properties hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties connection_properties = 3;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionPropertiesOrBuilder getConnectionPropertiesOrBuilder() {
      if (policySpecifierCase_ == 3) {
         return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties) policySpecifier_;
      }
      return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.getDefaultInstance();
    }

    public static final int QUERY_PARAMETER_FIELD_NUMBER = 5;
    /**
     * <pre>
     * Query parameter hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter query_parameter = 5;</code>
     * @return Whether the queryParameter field is set.
     */
    @java.lang.Override
    public boolean hasQueryParameter() {
      return policySpecifierCase_ == 5;
    }
    /**
     * <pre>
     * Query parameter hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter query_parameter = 5;</code>
     * @return The queryParameter.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter getQueryParameter() {
      if (policySpecifierCase_ == 5) {
         return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter) policySpecifier_;
      }
      return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.getDefaultInstance();
    }
    /**
     * <pre>
     * Query parameter hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter query_parameter = 5;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameterOrBuilder getQueryParameterOrBuilder() {
      if (policySpecifierCase_ == 5) {
         return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter) policySpecifier_;
      }
      return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.getDefaultInstance();
    }

    public static final int FILTER_STATE_FIELD_NUMBER = 6;
    /**
     * <pre>
     * Filter state hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.FilterState filter_state = 6;</code>
     * @return Whether the filterState field is set.
     */
    @java.lang.Override
    public boolean hasFilterState() {
      return policySpecifierCase_ == 6;
    }
    /**
     * <pre>
     * Filter state hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.FilterState filter_state = 6;</code>
     * @return The filterState.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState getFilterState() {
      if (policySpecifierCase_ == 6) {
         return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState) policySpecifier_;
      }
      return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.getDefaultInstance();
    }
    /**
     * <pre>
     * Filter state hash policy.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.HashPolicy.FilterState filter_state = 6;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterStateOrBuilder getFilterStateOrBuilder() {
      if (policySpecifierCase_ == 6) {
         return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState) policySpecifier_;
      }
      return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.getDefaultInstance();
    }

    public static final int TERMINAL_FIELD_NUMBER = 4;
    private boolean terminal_ = false;
    /**
     * <pre>
     * The flag that short-circuits the hash computing. This field provides a
     * 'fallback' style of configuration: "if a terminal policy doesn't work,
     * fallback to rest of the policy list", it saves time when the terminal
     * policy works.
     * If true, and there is already a hash computed, ignore rest of the
     * list of hash polices.
     * For example, if the following hash methods are configured:
     *  ========= ========
     *  specifier terminal
     *  ========= ========
     *  Header A  true
     *  Header B  false
     *  Header C  false
     *  ========= ========
     * The generateHash process ends if policy "header A" generates a hash, as
     * it's a terminal policy.
     * </pre>
     *
     * <code>bool terminal = 4;</code>
     * @return The terminal.
     */
    @java.lang.Override
    public boolean getTerminal() {
      return terminal_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (policySpecifierCase_ == 1) {
        output.writeMessage(1, (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header) policySpecifier_);
      }
      if (policySpecifierCase_ == 2) {
        output.writeMessage(2, (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie) policySpecifier_);
      }
      if (policySpecifierCase_ == 3) {
        output.writeMessage(3, (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties) policySpecifier_);
      }
      if (terminal_ != false) {
        output.writeBool(4, terminal_);
      }
      if (policySpecifierCase_ == 5) {
        output.writeMessage(5, (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter) policySpecifier_);
      }
      if (policySpecifierCase_ == 6) {
        output.writeMessage(6, (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState) policySpecifier_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (policySpecifierCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header) policySpecifier_);
      }
      if (policySpecifierCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie) policySpecifier_);
      }
      if (policySpecifierCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties) policySpecifier_);
      }
      if (terminal_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, terminal_);
      }
      if (policySpecifierCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter) policySpecifier_);
      }
      if (policySpecifierCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState) policySpecifier_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy)) {
        return super.equals(obj);
      }
      io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy other = (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy) obj;

      if (getTerminal()
          != other.getTerminal()) return false;
      if (!getPolicySpecifierCase().equals(other.getPolicySpecifierCase())) return false;
      switch (policySpecifierCase_) {
        case 1:
          if (!getHeader()
              .equals(other.getHeader())) return false;
          break;
        case 2:
          if (!getCookie()
              .equals(other.getCookie())) return false;
          break;
        case 3:
          if (!getConnectionProperties()
              .equals(other.getConnectionProperties())) return false;
          break;
        case 5:
          if (!getQueryParameter()
              .equals(other.getQueryParameter())) return false;
          break;
        case 6:
          if (!getFilterState()
              .equals(other.getFilterState())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TERMINAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getTerminal());
      switch (policySpecifierCase_) {
        case 1:
          hash = (37 * hash) + HEADER_FIELD_NUMBER;
          hash = (53 * hash) + getHeader().hashCode();
          break;
        case 2:
          hash = (37 * hash) + COOKIE_FIELD_NUMBER;
          hash = (53 * hash) + getCookie().hashCode();
          break;
        case 3:
          hash = (37 * hash) + CONNECTION_PROPERTIES_FIELD_NUMBER;
          hash = (53 * hash) + getConnectionProperties().hashCode();
          break;
        case 5:
          hash = (37 * hash) + QUERY_PARAMETER_FIELD_NUMBER;
          hash = (53 * hash) + getQueryParameter().hashCode();
          break;
        case 6:
          hash = (37 * hash) + FILTER_STATE_FIELD_NUMBER;
          hash = (53 * hash) + getFilterState().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies the route's hashing policy if the upstream cluster uses a hashing :ref:`load balancer
     * &lt;arch_overview_load_balancing_types&gt;`.
     * [#next-free-field: 7]
     * </pre>
     *
     * Protobuf type {@code envoy.config.route.v3.RouteAction.HashPolicy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.config.route.v3.RouteAction.HashPolicy)
        io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.class, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Builder.class);
      }

      // Construct using io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (headerBuilder_ != null) {
          headerBuilder_.clear();
        }
        if (cookieBuilder_ != null) {
          cookieBuilder_.clear();
        }
        if (connectionPropertiesBuilder_ != null) {
          connectionPropertiesBuilder_.clear();
        }
        if (queryParameterBuilder_ != null) {
          queryParameterBuilder_.clear();
        }
        if (filterStateBuilder_ != null) {
          filterStateBuilder_.clear();
        }
        terminal_ = false;
        policySpecifierCase_ = 0;
        policySpecifier_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_HashPolicy_descriptor;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy getDefaultInstanceForType() {
        return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.getDefaultInstance();
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy build() {
        io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy buildPartial() {
        io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy result = new io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.terminal_ = terminal_;
        }
      }

      private void buildPartialOneofs(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy result) {
        result.policySpecifierCase_ = policySpecifierCase_;
        result.policySpecifier_ = this.policySpecifier_;
        if (policySpecifierCase_ == 1 &&
            headerBuilder_ != null) {
          result.policySpecifier_ = headerBuilder_.build();
        }
        if (policySpecifierCase_ == 2 &&
            cookieBuilder_ != null) {
          result.policySpecifier_ = cookieBuilder_.build();
        }
        if (policySpecifierCase_ == 3 &&
            connectionPropertiesBuilder_ != null) {
          result.policySpecifier_ = connectionPropertiesBuilder_.build();
        }
        if (policySpecifierCase_ == 5 &&
            queryParameterBuilder_ != null) {
          result.policySpecifier_ = queryParameterBuilder_.build();
        }
        if (policySpecifierCase_ == 6 &&
            filterStateBuilder_ != null) {
          result.policySpecifier_ = filterStateBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy) {
          return mergeFrom((io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy other) {
        if (other == io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.getDefaultInstance()) return this;
        if (other.getTerminal() != false) {
          setTerminal(other.getTerminal());
        }
        switch (other.getPolicySpecifierCase()) {
          case HEADER: {
            mergeHeader(other.getHeader());
            break;
          }
          case COOKIE: {
            mergeCookie(other.getCookie());
            break;
          }
          case CONNECTION_PROPERTIES: {
            mergeConnectionProperties(other.getConnectionProperties());
            break;
          }
          case QUERY_PARAMETER: {
            mergeQueryParameter(other.getQueryParameter());
            break;
          }
          case FILTER_STATE: {
            mergeFilterState(other.getFilterState());
            break;
          }
          case POLICYSPECIFIER_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getHeaderFieldBuilder().getBuilder(),
                    extensionRegistry);
                policySpecifierCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getCookieFieldBuilder().getBuilder(),
                    extensionRegistry);
                policySpecifierCase_ = 2;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getConnectionPropertiesFieldBuilder().getBuilder(),
                    extensionRegistry);
                policySpecifierCase_ = 3;
                break;
              } // case 26
              case 32: {
                terminal_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 32
              case 42: {
                input.readMessage(
                    getQueryParameterFieldBuilder().getBuilder(),
                    extensionRegistry);
                policySpecifierCase_ = 5;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getFilterStateFieldBuilder().getBuilder(),
                    extensionRegistry);
                policySpecifierCase_ = 6;
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int policySpecifierCase_ = 0;
      private java.lang.Object policySpecifier_;
      public PolicySpecifierCase
          getPolicySpecifierCase() {
        return PolicySpecifierCase.forNumber(
            policySpecifierCase_);
      }

      public Builder clearPolicySpecifier() {
        policySpecifierCase_ = 0;
        policySpecifier_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.HeaderOrBuilder> headerBuilder_;
      /**
       * <pre>
       * Header hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Header header = 1;</code>
       * @return Whether the header field is set.
       */
      @java.lang.Override
      public boolean hasHeader() {
        return policySpecifierCase_ == 1;
      }
      /**
       * <pre>
       * Header hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Header header = 1;</code>
       * @return The header.
       */
      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header getHeader() {
        if (headerBuilder_ == null) {
          if (policySpecifierCase_ == 1) {
            return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header) policySpecifier_;
          }
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.getDefaultInstance();
        } else {
          if (policySpecifierCase_ == 1) {
            return headerBuilder_.getMessage();
          }
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Header hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Header header = 1;</code>
       */
      public Builder setHeader(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          policySpecifier_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }
        policySpecifierCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Header hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Header header = 1;</code>
       */
      public Builder setHeader(
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          policySpecifier_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }
        policySpecifierCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Header hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Header header = 1;</code>
       */
      public Builder mergeHeader(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header value) {
        if (headerBuilder_ == null) {
          if (policySpecifierCase_ == 1 &&
              policySpecifier_ != io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.getDefaultInstance()) {
            policySpecifier_ = io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.newBuilder((io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header) policySpecifier_)
                .mergeFrom(value).buildPartial();
          } else {
            policySpecifier_ = value;
          }
          onChanged();
        } else {
          if (policySpecifierCase_ == 1) {
            headerBuilder_.mergeFrom(value);
          } else {
            headerBuilder_.setMessage(value);
          }
        }
        policySpecifierCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Header hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Header header = 1;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          if (policySpecifierCase_ == 1) {
            policySpecifierCase_ = 0;
            policySpecifier_ = null;
            onChanged();
          }
        } else {
          if (policySpecifierCase_ == 1) {
            policySpecifierCase_ = 0;
            policySpecifier_ = null;
          }
          headerBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Header hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Header header = 1;</code>
       */
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.Builder getHeaderBuilder() {
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Header hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Header header = 1;</code>
       */
      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.HeaderOrBuilder getHeaderOrBuilder() {
        if ((policySpecifierCase_ == 1) && (headerBuilder_ != null)) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          if (policySpecifierCase_ == 1) {
            return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header) policySpecifier_;
          }
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Header hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Header header = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          if (!(policySpecifierCase_ == 1)) {
            policySpecifier_ = io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.getDefaultInstance();
          }
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.HeaderOrBuilder>(
                  (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Header) policySpecifier_,
                  getParentForChildren(),
                  isClean());
          policySpecifier_ = null;
        }
        policySpecifierCase_ = 1;
        onChanged();
        return headerBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.CookieOrBuilder> cookieBuilder_;
      /**
       * <pre>
       * Cookie hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Cookie cookie = 2;</code>
       * @return Whether the cookie field is set.
       */
      @java.lang.Override
      public boolean hasCookie() {
        return policySpecifierCase_ == 2;
      }
      /**
       * <pre>
       * Cookie hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Cookie cookie = 2;</code>
       * @return The cookie.
       */
      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie getCookie() {
        if (cookieBuilder_ == null) {
          if (policySpecifierCase_ == 2) {
            return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie) policySpecifier_;
          }
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.getDefaultInstance();
        } else {
          if (policySpecifierCase_ == 2) {
            return cookieBuilder_.getMessage();
          }
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Cookie hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Cookie cookie = 2;</code>
       */
      public Builder setCookie(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie value) {
        if (cookieBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          policySpecifier_ = value;
          onChanged();
        } else {
          cookieBuilder_.setMessage(value);
        }
        policySpecifierCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Cookie hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Cookie cookie = 2;</code>
       */
      public Builder setCookie(
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.Builder builderForValue) {
        if (cookieBuilder_ == null) {
          policySpecifier_ = builderForValue.build();
          onChanged();
        } else {
          cookieBuilder_.setMessage(builderForValue.build());
        }
        policySpecifierCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Cookie hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Cookie cookie = 2;</code>
       */
      public Builder mergeCookie(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie value) {
        if (cookieBuilder_ == null) {
          if (policySpecifierCase_ == 2 &&
              policySpecifier_ != io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.getDefaultInstance()) {
            policySpecifier_ = io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.newBuilder((io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie) policySpecifier_)
                .mergeFrom(value).buildPartial();
          } else {
            policySpecifier_ = value;
          }
          onChanged();
        } else {
          if (policySpecifierCase_ == 2) {
            cookieBuilder_.mergeFrom(value);
          } else {
            cookieBuilder_.setMessage(value);
          }
        }
        policySpecifierCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * Cookie hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Cookie cookie = 2;</code>
       */
      public Builder clearCookie() {
        if (cookieBuilder_ == null) {
          if (policySpecifierCase_ == 2) {
            policySpecifierCase_ = 0;
            policySpecifier_ = null;
            onChanged();
          }
        } else {
          if (policySpecifierCase_ == 2) {
            policySpecifierCase_ = 0;
            policySpecifier_ = null;
          }
          cookieBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Cookie hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Cookie cookie = 2;</code>
       */
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.Builder getCookieBuilder() {
        return getCookieFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Cookie hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Cookie cookie = 2;</code>
       */
      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.CookieOrBuilder getCookieOrBuilder() {
        if ((policySpecifierCase_ == 2) && (cookieBuilder_ != null)) {
          return cookieBuilder_.getMessageOrBuilder();
        } else {
          if (policySpecifierCase_ == 2) {
            return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie) policySpecifier_;
          }
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Cookie hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.Cookie cookie = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.CookieOrBuilder> 
          getCookieFieldBuilder() {
        if (cookieBuilder_ == null) {
          if (!(policySpecifierCase_ == 2)) {
            policySpecifier_ = io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.getDefaultInstance();
          }
          cookieBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.CookieOrBuilder>(
                  (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Cookie) policySpecifier_,
                  getParentForChildren(),
                  isClean());
          policySpecifier_ = null;
        }
        policySpecifierCase_ = 2;
        onChanged();
        return cookieBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionPropertiesOrBuilder> connectionPropertiesBuilder_;
      /**
       * <pre>
       * Connection properties hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties connection_properties = 3;</code>
       * @return Whether the connectionProperties field is set.
       */
      @java.lang.Override
      public boolean hasConnectionProperties() {
        return policySpecifierCase_ == 3;
      }
      /**
       * <pre>
       * Connection properties hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties connection_properties = 3;</code>
       * @return The connectionProperties.
       */
      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties getConnectionProperties() {
        if (connectionPropertiesBuilder_ == null) {
          if (policySpecifierCase_ == 3) {
            return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties) policySpecifier_;
          }
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.getDefaultInstance();
        } else {
          if (policySpecifierCase_ == 3) {
            return connectionPropertiesBuilder_.getMessage();
          }
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Connection properties hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties connection_properties = 3;</code>
       */
      public Builder setConnectionProperties(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties value) {
        if (connectionPropertiesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          policySpecifier_ = value;
          onChanged();
        } else {
          connectionPropertiesBuilder_.setMessage(value);
        }
        policySpecifierCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Connection properties hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties connection_properties = 3;</code>
       */
      public Builder setConnectionProperties(
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.Builder builderForValue) {
        if (connectionPropertiesBuilder_ == null) {
          policySpecifier_ = builderForValue.build();
          onChanged();
        } else {
          connectionPropertiesBuilder_.setMessage(builderForValue.build());
        }
        policySpecifierCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Connection properties hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties connection_properties = 3;</code>
       */
      public Builder mergeConnectionProperties(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties value) {
        if (connectionPropertiesBuilder_ == null) {
          if (policySpecifierCase_ == 3 &&
              policySpecifier_ != io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.getDefaultInstance()) {
            policySpecifier_ = io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.newBuilder((io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties) policySpecifier_)
                .mergeFrom(value).buildPartial();
          } else {
            policySpecifier_ = value;
          }
          onChanged();
        } else {
          if (policySpecifierCase_ == 3) {
            connectionPropertiesBuilder_.mergeFrom(value);
          } else {
            connectionPropertiesBuilder_.setMessage(value);
          }
        }
        policySpecifierCase_ = 3;
        return this;
      }
      /**
       * <pre>
       * Connection properties hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties connection_properties = 3;</code>
       */
      public Builder clearConnectionProperties() {
        if (connectionPropertiesBuilder_ == null) {
          if (policySpecifierCase_ == 3) {
            policySpecifierCase_ = 0;
            policySpecifier_ = null;
            onChanged();
          }
        } else {
          if (policySpecifierCase_ == 3) {
            policySpecifierCase_ = 0;
            policySpecifier_ = null;
          }
          connectionPropertiesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Connection properties hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties connection_properties = 3;</code>
       */
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.Builder getConnectionPropertiesBuilder() {
        return getConnectionPropertiesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Connection properties hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties connection_properties = 3;</code>
       */
      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionPropertiesOrBuilder getConnectionPropertiesOrBuilder() {
        if ((policySpecifierCase_ == 3) && (connectionPropertiesBuilder_ != null)) {
          return connectionPropertiesBuilder_.getMessageOrBuilder();
        } else {
          if (policySpecifierCase_ == 3) {
            return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties) policySpecifier_;
          }
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Connection properties hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties connection_properties = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionPropertiesOrBuilder> 
          getConnectionPropertiesFieldBuilder() {
        if (connectionPropertiesBuilder_ == null) {
          if (!(policySpecifierCase_ == 3)) {
            policySpecifier_ = io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.getDefaultInstance();
          }
          connectionPropertiesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionPropertiesOrBuilder>(
                  (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties) policySpecifier_,
                  getParentForChildren(),
                  isClean());
          policySpecifier_ = null;
        }
        policySpecifierCase_ = 3;
        onChanged();
        return connectionPropertiesBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameterOrBuilder> queryParameterBuilder_;
      /**
       * <pre>
       * Query parameter hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter query_parameter = 5;</code>
       * @return Whether the queryParameter field is set.
       */
      @java.lang.Override
      public boolean hasQueryParameter() {
        return policySpecifierCase_ == 5;
      }
      /**
       * <pre>
       * Query parameter hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter query_parameter = 5;</code>
       * @return The queryParameter.
       */
      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter getQueryParameter() {
        if (queryParameterBuilder_ == null) {
          if (policySpecifierCase_ == 5) {
            return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter) policySpecifier_;
          }
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.getDefaultInstance();
        } else {
          if (policySpecifierCase_ == 5) {
            return queryParameterBuilder_.getMessage();
          }
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Query parameter hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter query_parameter = 5;</code>
       */
      public Builder setQueryParameter(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter value) {
        if (queryParameterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          policySpecifier_ = value;
          onChanged();
        } else {
          queryParameterBuilder_.setMessage(value);
        }
        policySpecifierCase_ = 5;
        return this;
      }
      /**
       * <pre>
       * Query parameter hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter query_parameter = 5;</code>
       */
      public Builder setQueryParameter(
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.Builder builderForValue) {
        if (queryParameterBuilder_ == null) {
          policySpecifier_ = builderForValue.build();
          onChanged();
        } else {
          queryParameterBuilder_.setMessage(builderForValue.build());
        }
        policySpecifierCase_ = 5;
        return this;
      }
      /**
       * <pre>
       * Query parameter hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter query_parameter = 5;</code>
       */
      public Builder mergeQueryParameter(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter value) {
        if (queryParameterBuilder_ == null) {
          if (policySpecifierCase_ == 5 &&
              policySpecifier_ != io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.getDefaultInstance()) {
            policySpecifier_ = io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.newBuilder((io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter) policySpecifier_)
                .mergeFrom(value).buildPartial();
          } else {
            policySpecifier_ = value;
          }
          onChanged();
        } else {
          if (policySpecifierCase_ == 5) {
            queryParameterBuilder_.mergeFrom(value);
          } else {
            queryParameterBuilder_.setMessage(value);
          }
        }
        policySpecifierCase_ = 5;
        return this;
      }
      /**
       * <pre>
       * Query parameter hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter query_parameter = 5;</code>
       */
      public Builder clearQueryParameter() {
        if (queryParameterBuilder_ == null) {
          if (policySpecifierCase_ == 5) {
            policySpecifierCase_ = 0;
            policySpecifier_ = null;
            onChanged();
          }
        } else {
          if (policySpecifierCase_ == 5) {
            policySpecifierCase_ = 0;
            policySpecifier_ = null;
          }
          queryParameterBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Query parameter hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter query_parameter = 5;</code>
       */
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.Builder getQueryParameterBuilder() {
        return getQueryParameterFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Query parameter hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter query_parameter = 5;</code>
       */
      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameterOrBuilder getQueryParameterOrBuilder() {
        if ((policySpecifierCase_ == 5) && (queryParameterBuilder_ != null)) {
          return queryParameterBuilder_.getMessageOrBuilder();
        } else {
          if (policySpecifierCase_ == 5) {
            return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter) policySpecifier_;
          }
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Query parameter hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter query_parameter = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameterOrBuilder> 
          getQueryParameterFieldBuilder() {
        if (queryParameterBuilder_ == null) {
          if (!(policySpecifierCase_ == 5)) {
            policySpecifier_ = io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.getDefaultInstance();
          }
          queryParameterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameterOrBuilder>(
                  (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter) policySpecifier_,
                  getParentForChildren(),
                  isClean());
          policySpecifier_ = null;
        }
        policySpecifierCase_ = 5;
        onChanged();
        return queryParameterBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterStateOrBuilder> filterStateBuilder_;
      /**
       * <pre>
       * Filter state hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.FilterState filter_state = 6;</code>
       * @return Whether the filterState field is set.
       */
      @java.lang.Override
      public boolean hasFilterState() {
        return policySpecifierCase_ == 6;
      }
      /**
       * <pre>
       * Filter state hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.FilterState filter_state = 6;</code>
       * @return The filterState.
       */
      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState getFilterState() {
        if (filterStateBuilder_ == null) {
          if (policySpecifierCase_ == 6) {
            return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState) policySpecifier_;
          }
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.getDefaultInstance();
        } else {
          if (policySpecifierCase_ == 6) {
            return filterStateBuilder_.getMessage();
          }
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Filter state hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.FilterState filter_state = 6;</code>
       */
      public Builder setFilterState(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState value) {
        if (filterStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          policySpecifier_ = value;
          onChanged();
        } else {
          filterStateBuilder_.setMessage(value);
        }
        policySpecifierCase_ = 6;
        return this;
      }
      /**
       * <pre>
       * Filter state hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.FilterState filter_state = 6;</code>
       */
      public Builder setFilterState(
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.Builder builderForValue) {
        if (filterStateBuilder_ == null) {
          policySpecifier_ = builderForValue.build();
          onChanged();
        } else {
          filterStateBuilder_.setMessage(builderForValue.build());
        }
        policySpecifierCase_ = 6;
        return this;
      }
      /**
       * <pre>
       * Filter state hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.FilterState filter_state = 6;</code>
       */
      public Builder mergeFilterState(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState value) {
        if (filterStateBuilder_ == null) {
          if (policySpecifierCase_ == 6 &&
              policySpecifier_ != io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.getDefaultInstance()) {
            policySpecifier_ = io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.newBuilder((io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState) policySpecifier_)
                .mergeFrom(value).buildPartial();
          } else {
            policySpecifier_ = value;
          }
          onChanged();
        } else {
          if (policySpecifierCase_ == 6) {
            filterStateBuilder_.mergeFrom(value);
          } else {
            filterStateBuilder_.setMessage(value);
          }
        }
        policySpecifierCase_ = 6;
        return this;
      }
      /**
       * <pre>
       * Filter state hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.FilterState filter_state = 6;</code>
       */
      public Builder clearFilterState() {
        if (filterStateBuilder_ == null) {
          if (policySpecifierCase_ == 6) {
            policySpecifierCase_ = 0;
            policySpecifier_ = null;
            onChanged();
          }
        } else {
          if (policySpecifierCase_ == 6) {
            policySpecifierCase_ = 0;
            policySpecifier_ = null;
          }
          filterStateBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Filter state hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.FilterState filter_state = 6;</code>
       */
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.Builder getFilterStateBuilder() {
        return getFilterStateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Filter state hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.FilterState filter_state = 6;</code>
       */
      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterStateOrBuilder getFilterStateOrBuilder() {
        if ((policySpecifierCase_ == 6) && (filterStateBuilder_ != null)) {
          return filterStateBuilder_.getMessageOrBuilder();
        } else {
          if (policySpecifierCase_ == 6) {
            return (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState) policySpecifier_;
          }
          return io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Filter state hash policy.
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.HashPolicy.FilterState filter_state = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterStateOrBuilder> 
          getFilterStateFieldBuilder() {
        if (filterStateBuilder_ == null) {
          if (!(policySpecifierCase_ == 6)) {
            policySpecifier_ = io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.getDefaultInstance();
          }
          filterStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterStateOrBuilder>(
                  (io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.FilterState) policySpecifier_,
                  getParentForChildren(),
                  isClean());
          policySpecifier_ = null;
        }
        policySpecifierCase_ = 6;
        onChanged();
        return filterStateBuilder_;
      }

      private boolean terminal_ ;
      /**
       * <pre>
       * The flag that short-circuits the hash computing. This field provides a
       * 'fallback' style of configuration: "if a terminal policy doesn't work,
       * fallback to rest of the policy list", it saves time when the terminal
       * policy works.
       * If true, and there is already a hash computed, ignore rest of the
       * list of hash polices.
       * For example, if the following hash methods are configured:
       *  ========= ========
       *  specifier terminal
       *  ========= ========
       *  Header A  true
       *  Header B  false
       *  Header C  false
       *  ========= ========
       * The generateHash process ends if policy "header A" generates a hash, as
       * it's a terminal policy.
       * </pre>
       *
       * <code>bool terminal = 4;</code>
       * @return The terminal.
       */
      @java.lang.Override
      public boolean getTerminal() {
        return terminal_;
      }
      /**
       * <pre>
       * The flag that short-circuits the hash computing. This field provides a
       * 'fallback' style of configuration: "if a terminal policy doesn't work,
       * fallback to rest of the policy list", it saves time when the terminal
       * policy works.
       * If true, and there is already a hash computed, ignore rest of the
       * list of hash polices.
       * For example, if the following hash methods are configured:
       *  ========= ========
       *  specifier terminal
       *  ========= ========
       *  Header A  true
       *  Header B  false
       *  Header C  false
       *  ========= ========
       * The generateHash process ends if policy "header A" generates a hash, as
       * it's a terminal policy.
       * </pre>
       *
       * <code>bool terminal = 4;</code>
       * @param value The terminal to set.
       * @return This builder for chaining.
       */
      public Builder setTerminal(boolean value) {
        
        terminal_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The flag that short-circuits the hash computing. This field provides a
       * 'fallback' style of configuration: "if a terminal policy doesn't work,
       * fallback to rest of the policy list", it saves time when the terminal
       * policy works.
       * If true, and there is already a hash computed, ignore rest of the
       * list of hash polices.
       * For example, if the following hash methods are configured:
       *  ========= ========
       *  specifier terminal
       *  ========= ========
       *  Header A  true
       *  Header B  false
       *  Header C  false
       *  ========= ========
       * The generateHash process ends if policy "header A" generates a hash, as
       * it's a terminal policy.
       * </pre>
       *
       * <code>bool terminal = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTerminal() {
        bitField0_ = (bitField0_ & ~0x00000020);
        terminal_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.config.route.v3.RouteAction.HashPolicy)
    }

    // @@protoc_insertion_point(class_scope:envoy.config.route.v3.RouteAction.HashPolicy)
    private static final io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy();
    }

    public static io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HashPolicy>
        PARSER = new com.google.protobuf.AbstractParser<HashPolicy>() {
      @java.lang.Override
      public HashPolicy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<HashPolicy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HashPolicy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UpgradeConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.config.route.v3.RouteAction.UpgradeConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The case-insensitive name of this upgrade, e.g. "websocket".
     * For each upgrade type present in upgrade_configs, requests with
     * Upgrade: [upgrade_type] will be proxied upstream.
     * </pre>
     *
     * <code>string upgrade_type = 1 [(.validate.rules) = { ... }</code>
     * @return The upgradeType.
     */
    java.lang.String getUpgradeType();
    /**
     * <pre>
     * The case-insensitive name of this upgrade, e.g. "websocket".
     * For each upgrade type present in upgrade_configs, requests with
     * Upgrade: [upgrade_type] will be proxied upstream.
     * </pre>
     *
     * <code>string upgrade_type = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for upgradeType.
     */
    com.google.protobuf.ByteString
        getUpgradeTypeBytes();

    /**
     * <pre>
     * Determines if upgrades are available on this route. Defaults to true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 2;</code>
     * @return Whether the enabled field is set.
     */
    boolean hasEnabled();
    /**
     * <pre>
     * Determines if upgrades are available on this route. Defaults to true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 2;</code>
     * @return The enabled.
     */
    com.google.protobuf.BoolValue getEnabled();
    /**
     * <pre>
     * Determines if upgrades are available on this route. Defaults to true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 2;</code>
     */
    com.google.protobuf.BoolValueOrBuilder getEnabledOrBuilder();

    /**
     * <pre>
     * Configuration for sending data upstream as a raw data payload. This is used for
     * CONNECT requests, when forwarding CONNECT payload as raw TCP.
     * Note that CONNECT support is currently considered alpha in Envoy.
     * [#comment: TODO(htuch): Replace the above comment with an alpha tag.]
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig connect_config = 3;</code>
     * @return Whether the connectConfig field is set.
     */
    boolean hasConnectConfig();
    /**
     * <pre>
     * Configuration for sending data upstream as a raw data payload. This is used for
     * CONNECT requests, when forwarding CONNECT payload as raw TCP.
     * Note that CONNECT support is currently considered alpha in Envoy.
     * [#comment: TODO(htuch): Replace the above comment with an alpha tag.]
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig connect_config = 3;</code>
     * @return The connectConfig.
     */
    io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig getConnectConfig();
    /**
     * <pre>
     * Configuration for sending data upstream as a raw data payload. This is used for
     * CONNECT requests, when forwarding CONNECT payload as raw TCP.
     * Note that CONNECT support is currently considered alpha in Envoy.
     * [#comment: TODO(htuch): Replace the above comment with an alpha tag.]
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig connect_config = 3;</code>
     */
    io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfigOrBuilder getConnectConfigOrBuilder();
  }
  /**
   * <pre>
   * Allows enabling and disabling upgrades on a per-route basis.
   * This overrides any enabled/disabled upgrade filter chain specified in the
   * HttpConnectionManager
   * :ref:`upgrade_configs
   * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.upgrade_configs&gt;`
   * but does not affect any custom filter chain specified there.
   * </pre>
   *
   * Protobuf type {@code envoy.config.route.v3.RouteAction.UpgradeConfig}
   */
  public static final class UpgradeConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.config.route.v3.RouteAction.UpgradeConfig)
      UpgradeConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UpgradeConfig.newBuilder() to construct.
    private UpgradeConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UpgradeConfig() {
      upgradeType_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UpgradeConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_UpgradeConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_UpgradeConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.class, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.Builder.class);
    }

    public interface ConnectConfigOrBuilder extends
        // @@protoc_insertion_point(interface_extends:envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * If present, the proxy protocol header will be prepended to the CONNECT payload sent upstream.
       * </pre>
       *
       * <code>.envoy.config.core.v3.ProxyProtocolConfig proxy_protocol_config = 1;</code>
       * @return Whether the proxyProtocolConfig field is set.
       */
      boolean hasProxyProtocolConfig();
      /**
       * <pre>
       * If present, the proxy protocol header will be prepended to the CONNECT payload sent upstream.
       * </pre>
       *
       * <code>.envoy.config.core.v3.ProxyProtocolConfig proxy_protocol_config = 1;</code>
       * @return The proxyProtocolConfig.
       */
      io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig getProxyProtocolConfig();
      /**
       * <pre>
       * If present, the proxy protocol header will be prepended to the CONNECT payload sent upstream.
       * </pre>
       *
       * <code>.envoy.config.core.v3.ProxyProtocolConfig proxy_protocol_config = 1;</code>
       */
      io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfigOrBuilder getProxyProtocolConfigOrBuilder();

      /**
       * <pre>
       * If set, the route will also allow forwarding POST payload as raw TCP.
       * </pre>
       *
       * <code>bool allow_post = 2;</code>
       * @return The allowPost.
       */
      boolean getAllowPost();
    }
    /**
     * <pre>
     * Configuration for sending data upstream as a raw data payload. This is used for
     * CONNECT or POST requests, when forwarding request payload as raw TCP.
     * </pre>
     *
     * Protobuf type {@code envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig}
     */
    public static final class ConnectConfig extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig)
        ConnectConfigOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ConnectConfig.newBuilder() to construct.
      private ConnectConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ConnectConfig() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ConnectConfig();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_UpgradeConfig_ConnectConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_UpgradeConfig_ConnectConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig.class, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig.Builder.class);
      }

      public static final int PROXY_PROTOCOL_CONFIG_FIELD_NUMBER = 1;
      private io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig proxyProtocolConfig_;
      /**
       * <pre>
       * If present, the proxy protocol header will be prepended to the CONNECT payload sent upstream.
       * </pre>
       *
       * <code>.envoy.config.core.v3.ProxyProtocolConfig proxy_protocol_config = 1;</code>
       * @return Whether the proxyProtocolConfig field is set.
       */
      @java.lang.Override
      public boolean hasProxyProtocolConfig() {
        return proxyProtocolConfig_ != null;
      }
      /**
       * <pre>
       * If present, the proxy protocol header will be prepended to the CONNECT payload sent upstream.
       * </pre>
       *
       * <code>.envoy.config.core.v3.ProxyProtocolConfig proxy_protocol_config = 1;</code>
       * @return The proxyProtocolConfig.
       */
      @java.lang.Override
      public io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig getProxyProtocolConfig() {
        return proxyProtocolConfig_ == null ? io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig.getDefaultInstance() : proxyProtocolConfig_;
      }
      /**
       * <pre>
       * If present, the proxy protocol header will be prepended to the CONNECT payload sent upstream.
       * </pre>
       *
       * <code>.envoy.config.core.v3.ProxyProtocolConfig proxy_protocol_config = 1;</code>
       */
      @java.lang.Override
      public io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfigOrBuilder getProxyProtocolConfigOrBuilder() {
        return proxyProtocolConfig_ == null ? io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig.getDefaultInstance() : proxyProtocolConfig_;
      }

      public static final int ALLOW_POST_FIELD_NUMBER = 2;
      private boolean allowPost_ = false;
      /**
       * <pre>
       * If set, the route will also allow forwarding POST payload as raw TCP.
       * </pre>
       *
       * <code>bool allow_post = 2;</code>
       * @return The allowPost.
       */
      @java.lang.Override
      public boolean getAllowPost() {
        return allowPost_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (proxyProtocolConfig_ != null) {
          output.writeMessage(1, getProxyProtocolConfig());
        }
        if (allowPost_ != false) {
          output.writeBool(2, allowPost_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (proxyProtocolConfig_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getProxyProtocolConfig());
        }
        if (allowPost_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, allowPost_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig)) {
          return super.equals(obj);
        }
        io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig other = (io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig) obj;

        if (hasProxyProtocolConfig() != other.hasProxyProtocolConfig()) return false;
        if (hasProxyProtocolConfig()) {
          if (!getProxyProtocolConfig()
              .equals(other.getProxyProtocolConfig())) return false;
        }
        if (getAllowPost()
            != other.getAllowPost()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasProxyProtocolConfig()) {
          hash = (37 * hash) + PROXY_PROTOCOL_CONFIG_FIELD_NUMBER;
          hash = (53 * hash) + getProxyProtocolConfig().hashCode();
        }
        hash = (37 * hash) + ALLOW_POST_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAllowPost());
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Configuration for sending data upstream as a raw data payload. This is used for
       * CONNECT or POST requests, when forwarding request payload as raw TCP.
       * </pre>
       *
       * Protobuf type {@code envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig)
          io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfigOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_UpgradeConfig_ConnectConfig_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_UpgradeConfig_ConnectConfig_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig.class, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig.Builder.class);
        }

        // Construct using io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          proxyProtocolConfig_ = null;
          if (proxyProtocolConfigBuilder_ != null) {
            proxyProtocolConfigBuilder_.dispose();
            proxyProtocolConfigBuilder_ = null;
          }
          allowPost_ = false;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_UpgradeConfig_ConnectConfig_descriptor;
        }

        @java.lang.Override
        public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig getDefaultInstanceForType() {
          return io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig.getDefaultInstance();
        }

        @java.lang.Override
        public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig build() {
          io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig buildPartial() {
          io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig result = new io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.proxyProtocolConfig_ = proxyProtocolConfigBuilder_ == null
                ? proxyProtocolConfig_
                : proxyProtocolConfigBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.allowPost_ = allowPost_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig) {
            return mergeFrom((io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig other) {
          if (other == io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig.getDefaultInstance()) return this;
          if (other.hasProxyProtocolConfig()) {
            mergeProxyProtocolConfig(other.getProxyProtocolConfig());
          }
          if (other.getAllowPost() != false) {
            setAllowPost(other.getAllowPost());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getProxyProtocolConfigFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 16: {
                  allowPost_ = input.readBool();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig proxyProtocolConfig_;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig, io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig.Builder, io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfigOrBuilder> proxyProtocolConfigBuilder_;
        /**
         * <pre>
         * If present, the proxy protocol header will be prepended to the CONNECT payload sent upstream.
         * </pre>
         *
         * <code>.envoy.config.core.v3.ProxyProtocolConfig proxy_protocol_config = 1;</code>
         * @return Whether the proxyProtocolConfig field is set.
         */
        public boolean hasProxyProtocolConfig() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * If present, the proxy protocol header will be prepended to the CONNECT payload sent upstream.
         * </pre>
         *
         * <code>.envoy.config.core.v3.ProxyProtocolConfig proxy_protocol_config = 1;</code>
         * @return The proxyProtocolConfig.
         */
        public io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig getProxyProtocolConfig() {
          if (proxyProtocolConfigBuilder_ == null) {
            return proxyProtocolConfig_ == null ? io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig.getDefaultInstance() : proxyProtocolConfig_;
          } else {
            return proxyProtocolConfigBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * If present, the proxy protocol header will be prepended to the CONNECT payload sent upstream.
         * </pre>
         *
         * <code>.envoy.config.core.v3.ProxyProtocolConfig proxy_protocol_config = 1;</code>
         */
        public Builder setProxyProtocolConfig(io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig value) {
          if (proxyProtocolConfigBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            proxyProtocolConfig_ = value;
          } else {
            proxyProtocolConfigBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If present, the proxy protocol header will be prepended to the CONNECT payload sent upstream.
         * </pre>
         *
         * <code>.envoy.config.core.v3.ProxyProtocolConfig proxy_protocol_config = 1;</code>
         */
        public Builder setProxyProtocolConfig(
            io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig.Builder builderForValue) {
          if (proxyProtocolConfigBuilder_ == null) {
            proxyProtocolConfig_ = builderForValue.build();
          } else {
            proxyProtocolConfigBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If present, the proxy protocol header will be prepended to the CONNECT payload sent upstream.
         * </pre>
         *
         * <code>.envoy.config.core.v3.ProxyProtocolConfig proxy_protocol_config = 1;</code>
         */
        public Builder mergeProxyProtocolConfig(io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig value) {
          if (proxyProtocolConfigBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              proxyProtocolConfig_ != null &&
              proxyProtocolConfig_ != io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig.getDefaultInstance()) {
              getProxyProtocolConfigBuilder().mergeFrom(value);
            } else {
              proxyProtocolConfig_ = value;
            }
          } else {
            proxyProtocolConfigBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If present, the proxy protocol header will be prepended to the CONNECT payload sent upstream.
         * </pre>
         *
         * <code>.envoy.config.core.v3.ProxyProtocolConfig proxy_protocol_config = 1;</code>
         */
        public Builder clearProxyProtocolConfig() {
          bitField0_ = (bitField0_ & ~0x00000001);
          proxyProtocolConfig_ = null;
          if (proxyProtocolConfigBuilder_ != null) {
            proxyProtocolConfigBuilder_.dispose();
            proxyProtocolConfigBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If present, the proxy protocol header will be prepended to the CONNECT payload sent upstream.
         * </pre>
         *
         * <code>.envoy.config.core.v3.ProxyProtocolConfig proxy_protocol_config = 1;</code>
         */
        public io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig.Builder getProxyProtocolConfigBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getProxyProtocolConfigFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * If present, the proxy protocol header will be prepended to the CONNECT payload sent upstream.
         * </pre>
         *
         * <code>.envoy.config.core.v3.ProxyProtocolConfig proxy_protocol_config = 1;</code>
         */
        public io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfigOrBuilder getProxyProtocolConfigOrBuilder() {
          if (proxyProtocolConfigBuilder_ != null) {
            return proxyProtocolConfigBuilder_.getMessageOrBuilder();
          } else {
            return proxyProtocolConfig_ == null ?
                io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig.getDefaultInstance() : proxyProtocolConfig_;
          }
        }
        /**
         * <pre>
         * If present, the proxy protocol header will be prepended to the CONNECT payload sent upstream.
         * </pre>
         *
         * <code>.envoy.config.core.v3.ProxyProtocolConfig proxy_protocol_config = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig, io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig.Builder, io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfigOrBuilder> 
            getProxyProtocolConfigFieldBuilder() {
          if (proxyProtocolConfigBuilder_ == null) {
            proxyProtocolConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig, io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfig.Builder, io.envoyproxy.envoy.config.core.v3.ProxyProtocolConfigOrBuilder>(
                    getProxyProtocolConfig(),
                    getParentForChildren(),
                    isClean());
            proxyProtocolConfig_ = null;
          }
          return proxyProtocolConfigBuilder_;
        }

        private boolean allowPost_ ;
        /**
         * <pre>
         * If set, the route will also allow forwarding POST payload as raw TCP.
         * </pre>
         *
         * <code>bool allow_post = 2;</code>
         * @return The allowPost.
         */
        @java.lang.Override
        public boolean getAllowPost() {
          return allowPost_;
        }
        /**
         * <pre>
         * If set, the route will also allow forwarding POST payload as raw TCP.
         * </pre>
         *
         * <code>bool allow_post = 2;</code>
         * @param value The allowPost to set.
         * @return This builder for chaining.
         */
        public Builder setAllowPost(boolean value) {
          
          allowPost_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If set, the route will also allow forwarding POST payload as raw TCP.
         * </pre>
         *
         * <code>bool allow_post = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearAllowPost() {
          bitField0_ = (bitField0_ & ~0x00000002);
          allowPost_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig)
      }

      // @@protoc_insertion_point(class_scope:envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig)
      private static final io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig();
      }

      public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ConnectConfig>
          PARSER = new com.google.protobuf.AbstractParser<ConnectConfig>() {
        @java.lang.Override
        public ConnectConfig parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ConnectConfig> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ConnectConfig> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int UPGRADE_TYPE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object upgradeType_ = "";
    /**
     * <pre>
     * The case-insensitive name of this upgrade, e.g. "websocket".
     * For each upgrade type present in upgrade_configs, requests with
     * Upgrade: [upgrade_type] will be proxied upstream.
     * </pre>
     *
     * <code>string upgrade_type = 1 [(.validate.rules) = { ... }</code>
     * @return The upgradeType.
     */
    @java.lang.Override
    public java.lang.String getUpgradeType() {
      java.lang.Object ref = upgradeType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        upgradeType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The case-insensitive name of this upgrade, e.g. "websocket".
     * For each upgrade type present in upgrade_configs, requests with
     * Upgrade: [upgrade_type] will be proxied upstream.
     * </pre>
     *
     * <code>string upgrade_type = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for upgradeType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUpgradeTypeBytes() {
      java.lang.Object ref = upgradeType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        upgradeType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENABLED_FIELD_NUMBER = 2;
    private com.google.protobuf.BoolValue enabled_;
    /**
     * <pre>
     * Determines if upgrades are available on this route. Defaults to true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 2;</code>
     * @return Whether the enabled field is set.
     */
    @java.lang.Override
    public boolean hasEnabled() {
      return enabled_ != null;
    }
    /**
     * <pre>
     * Determines if upgrades are available on this route. Defaults to true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 2;</code>
     * @return The enabled.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getEnabled() {
      return enabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : enabled_;
    }
    /**
     * <pre>
     * Determines if upgrades are available on this route. Defaults to true.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue enabled = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getEnabledOrBuilder() {
      return enabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : enabled_;
    }

    public static final int CONNECT_CONFIG_FIELD_NUMBER = 3;
    private io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig connectConfig_;
    /**
     * <pre>
     * Configuration for sending data upstream as a raw data payload. This is used for
     * CONNECT requests, when forwarding CONNECT payload as raw TCP.
     * Note that CONNECT support is currently considered alpha in Envoy.
     * [#comment: TODO(htuch): Replace the above comment with an alpha tag.]
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig connect_config = 3;</code>
     * @return Whether the connectConfig field is set.
     */
    @java.lang.Override
    public boolean hasConnectConfig() {
      return connectConfig_ != null;
    }
    /**
     * <pre>
     * Configuration for sending data upstream as a raw data payload. This is used for
     * CONNECT requests, when forwarding CONNECT payload as raw TCP.
     * Note that CONNECT support is currently considered alpha in Envoy.
     * [#comment: TODO(htuch): Replace the above comment with an alpha tag.]
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig connect_config = 3;</code>
     * @return The connectConfig.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig getConnectConfig() {
      return connectConfig_ == null ? io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig.getDefaultInstance() : connectConfig_;
    }
    /**
     * <pre>
     * Configuration for sending data upstream as a raw data payload. This is used for
     * CONNECT requests, when forwarding CONNECT payload as raw TCP.
     * Note that CONNECT support is currently considered alpha in Envoy.
     * [#comment: TODO(htuch): Replace the above comment with an alpha tag.]
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig connect_config = 3;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfigOrBuilder getConnectConfigOrBuilder() {
      return connectConfig_ == null ? io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig.getDefaultInstance() : connectConfig_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(upgradeType_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, upgradeType_);
      }
      if (enabled_ != null) {
        output.writeMessage(2, getEnabled());
      }
      if (connectConfig_ != null) {
        output.writeMessage(3, getConnectConfig());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(upgradeType_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, upgradeType_);
      }
      if (enabled_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getEnabled());
      }
      if (connectConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getConnectConfig());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig)) {
        return super.equals(obj);
      }
      io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig other = (io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig) obj;

      if (!getUpgradeType()
          .equals(other.getUpgradeType())) return false;
      if (hasEnabled() != other.hasEnabled()) return false;
      if (hasEnabled()) {
        if (!getEnabled()
            .equals(other.getEnabled())) return false;
      }
      if (hasConnectConfig() != other.hasConnectConfig()) return false;
      if (hasConnectConfig()) {
        if (!getConnectConfig()
            .equals(other.getConnectConfig())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + UPGRADE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getUpgradeType().hashCode();
      if (hasEnabled()) {
        hash = (37 * hash) + ENABLED_FIELD_NUMBER;
        hash = (53 * hash) + getEnabled().hashCode();
      }
      if (hasConnectConfig()) {
        hash = (37 * hash) + CONNECT_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConnectConfig().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Allows enabling and disabling upgrades on a per-route basis.
     * This overrides any enabled/disabled upgrade filter chain specified in the
     * HttpConnectionManager
     * :ref:`upgrade_configs
     * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.upgrade_configs&gt;`
     * but does not affect any custom filter chain specified there.
     * </pre>
     *
     * Protobuf type {@code envoy.config.route.v3.RouteAction.UpgradeConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.config.route.v3.RouteAction.UpgradeConfig)
        io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_UpgradeConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_UpgradeConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.class, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.Builder.class);
      }

      // Construct using io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        upgradeType_ = "";
        enabled_ = null;
        if (enabledBuilder_ != null) {
          enabledBuilder_.dispose();
          enabledBuilder_ = null;
        }
        connectConfig_ = null;
        if (connectConfigBuilder_ != null) {
          connectConfigBuilder_.dispose();
          connectConfigBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_UpgradeConfig_descriptor;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig getDefaultInstanceForType() {
        return io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.getDefaultInstance();
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig build() {
        io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig buildPartial() {
        io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig result = new io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.upgradeType_ = upgradeType_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.enabled_ = enabledBuilder_ == null
              ? enabled_
              : enabledBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.connectConfig_ = connectConfigBuilder_ == null
              ? connectConfig_
              : connectConfigBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig) {
          return mergeFrom((io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig other) {
        if (other == io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.getDefaultInstance()) return this;
        if (!other.getUpgradeType().isEmpty()) {
          upgradeType_ = other.upgradeType_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasEnabled()) {
          mergeEnabled(other.getEnabled());
        }
        if (other.hasConnectConfig()) {
          mergeConnectConfig(other.getConnectConfig());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                upgradeType_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getEnabledFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getConnectConfigFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object upgradeType_ = "";
      /**
       * <pre>
       * The case-insensitive name of this upgrade, e.g. "websocket".
       * For each upgrade type present in upgrade_configs, requests with
       * Upgrade: [upgrade_type] will be proxied upstream.
       * </pre>
       *
       * <code>string upgrade_type = 1 [(.validate.rules) = { ... }</code>
       * @return The upgradeType.
       */
      public java.lang.String getUpgradeType() {
        java.lang.Object ref = upgradeType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          upgradeType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The case-insensitive name of this upgrade, e.g. "websocket".
       * For each upgrade type present in upgrade_configs, requests with
       * Upgrade: [upgrade_type] will be proxied upstream.
       * </pre>
       *
       * <code>string upgrade_type = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for upgradeType.
       */
      public com.google.protobuf.ByteString
          getUpgradeTypeBytes() {
        java.lang.Object ref = upgradeType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          upgradeType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The case-insensitive name of this upgrade, e.g. "websocket".
       * For each upgrade type present in upgrade_configs, requests with
       * Upgrade: [upgrade_type] will be proxied upstream.
       * </pre>
       *
       * <code>string upgrade_type = 1 [(.validate.rules) = { ... }</code>
       * @param value The upgradeType to set.
       * @return This builder for chaining.
       */
      public Builder setUpgradeType(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        upgradeType_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The case-insensitive name of this upgrade, e.g. "websocket".
       * For each upgrade type present in upgrade_configs, requests with
       * Upgrade: [upgrade_type] will be proxied upstream.
       * </pre>
       *
       * <code>string upgrade_type = 1 [(.validate.rules) = { ... }</code>
       * @return This builder for chaining.
       */
      public Builder clearUpgradeType() {
        upgradeType_ = getDefaultInstance().getUpgradeType();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The case-insensitive name of this upgrade, e.g. "websocket".
       * For each upgrade type present in upgrade_configs, requests with
       * Upgrade: [upgrade_type] will be proxied upstream.
       * </pre>
       *
       * <code>string upgrade_type = 1 [(.validate.rules) = { ... }</code>
       * @param value The bytes for upgradeType to set.
       * @return This builder for chaining.
       */
      public Builder setUpgradeTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        upgradeType_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.BoolValue enabled_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> enabledBuilder_;
      /**
       * <pre>
       * Determines if upgrades are available on this route. Defaults to true.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enabled = 2;</code>
       * @return Whether the enabled field is set.
       */
      public boolean hasEnabled() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Determines if upgrades are available on this route. Defaults to true.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enabled = 2;</code>
       * @return The enabled.
       */
      public com.google.protobuf.BoolValue getEnabled() {
        if (enabledBuilder_ == null) {
          return enabled_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : enabled_;
        } else {
          return enabledBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Determines if upgrades are available on this route. Defaults to true.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enabled = 2;</code>
       */
      public Builder setEnabled(com.google.protobuf.BoolValue value) {
        if (enabledBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          enabled_ = value;
        } else {
          enabledBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Determines if upgrades are available on this route. Defaults to true.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enabled = 2;</code>
       */
      public Builder setEnabled(
          com.google.protobuf.BoolValue.Builder builderForValue) {
        if (enabledBuilder_ == null) {
          enabled_ = builderForValue.build();
        } else {
          enabledBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Determines if upgrades are available on this route. Defaults to true.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enabled = 2;</code>
       */
      public Builder mergeEnabled(com.google.protobuf.BoolValue value) {
        if (enabledBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            enabled_ != null &&
            enabled_ != com.google.protobuf.BoolValue.getDefaultInstance()) {
            getEnabledBuilder().mergeFrom(value);
          } else {
            enabled_ = value;
          }
        } else {
          enabledBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Determines if upgrades are available on this route. Defaults to true.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enabled = 2;</code>
       */
      public Builder clearEnabled() {
        bitField0_ = (bitField0_ & ~0x00000002);
        enabled_ = null;
        if (enabledBuilder_ != null) {
          enabledBuilder_.dispose();
          enabledBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Determines if upgrades are available on this route. Defaults to true.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enabled = 2;</code>
       */
      public com.google.protobuf.BoolValue.Builder getEnabledBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getEnabledFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Determines if upgrades are available on this route. Defaults to true.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enabled = 2;</code>
       */
      public com.google.protobuf.BoolValueOrBuilder getEnabledOrBuilder() {
        if (enabledBuilder_ != null) {
          return enabledBuilder_.getMessageOrBuilder();
        } else {
          return enabled_ == null ?
              com.google.protobuf.BoolValue.getDefaultInstance() : enabled_;
        }
      }
      /**
       * <pre>
       * Determines if upgrades are available on this route. Defaults to true.
       * </pre>
       *
       * <code>.google.protobuf.BoolValue enabled = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
          getEnabledFieldBuilder() {
        if (enabledBuilder_ == null) {
          enabledBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                  getEnabled(),
                  getParentForChildren(),
                  isClean());
          enabled_ = null;
        }
        return enabledBuilder_;
      }

      private io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig connectConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfigOrBuilder> connectConfigBuilder_;
      /**
       * <pre>
       * Configuration for sending data upstream as a raw data payload. This is used for
       * CONNECT requests, when forwarding CONNECT payload as raw TCP.
       * Note that CONNECT support is currently considered alpha in Envoy.
       * [#comment: TODO(htuch): Replace the above comment with an alpha tag.]
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig connect_config = 3;</code>
       * @return Whether the connectConfig field is set.
       */
      public boolean hasConnectConfig() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Configuration for sending data upstream as a raw data payload. This is used for
       * CONNECT requests, when forwarding CONNECT payload as raw TCP.
       * Note that CONNECT support is currently considered alpha in Envoy.
       * [#comment: TODO(htuch): Replace the above comment with an alpha tag.]
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig connect_config = 3;</code>
       * @return The connectConfig.
       */
      public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig getConnectConfig() {
        if (connectConfigBuilder_ == null) {
          return connectConfig_ == null ? io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig.getDefaultInstance() : connectConfig_;
        } else {
          return connectConfigBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Configuration for sending data upstream as a raw data payload. This is used for
       * CONNECT requests, when forwarding CONNECT payload as raw TCP.
       * Note that CONNECT support is currently considered alpha in Envoy.
       * [#comment: TODO(htuch): Replace the above comment with an alpha tag.]
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig connect_config = 3;</code>
       */
      public Builder setConnectConfig(io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig value) {
        if (connectConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          connectConfig_ = value;
        } else {
          connectConfigBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Configuration for sending data upstream as a raw data payload. This is used for
       * CONNECT requests, when forwarding CONNECT payload as raw TCP.
       * Note that CONNECT support is currently considered alpha in Envoy.
       * [#comment: TODO(htuch): Replace the above comment with an alpha tag.]
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig connect_config = 3;</code>
       */
      public Builder setConnectConfig(
          io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig.Builder builderForValue) {
        if (connectConfigBuilder_ == null) {
          connectConfig_ = builderForValue.build();
        } else {
          connectConfigBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Configuration for sending data upstream as a raw data payload. This is used for
       * CONNECT requests, when forwarding CONNECT payload as raw TCP.
       * Note that CONNECT support is currently considered alpha in Envoy.
       * [#comment: TODO(htuch): Replace the above comment with an alpha tag.]
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig connect_config = 3;</code>
       */
      public Builder mergeConnectConfig(io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig value) {
        if (connectConfigBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            connectConfig_ != null &&
            connectConfig_ != io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig.getDefaultInstance()) {
            getConnectConfigBuilder().mergeFrom(value);
          } else {
            connectConfig_ = value;
          }
        } else {
          connectConfigBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Configuration for sending data upstream as a raw data payload. This is used for
       * CONNECT requests, when forwarding CONNECT payload as raw TCP.
       * Note that CONNECT support is currently considered alpha in Envoy.
       * [#comment: TODO(htuch): Replace the above comment with an alpha tag.]
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig connect_config = 3;</code>
       */
      public Builder clearConnectConfig() {
        bitField0_ = (bitField0_ & ~0x00000004);
        connectConfig_ = null;
        if (connectConfigBuilder_ != null) {
          connectConfigBuilder_.dispose();
          connectConfigBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Configuration for sending data upstream as a raw data payload. This is used for
       * CONNECT requests, when forwarding CONNECT payload as raw TCP.
       * Note that CONNECT support is currently considered alpha in Envoy.
       * [#comment: TODO(htuch): Replace the above comment with an alpha tag.]
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig connect_config = 3;</code>
       */
      public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig.Builder getConnectConfigBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getConnectConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Configuration for sending data upstream as a raw data payload. This is used for
       * CONNECT requests, when forwarding CONNECT payload as raw TCP.
       * Note that CONNECT support is currently considered alpha in Envoy.
       * [#comment: TODO(htuch): Replace the above comment with an alpha tag.]
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig connect_config = 3;</code>
       */
      public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfigOrBuilder getConnectConfigOrBuilder() {
        if (connectConfigBuilder_ != null) {
          return connectConfigBuilder_.getMessageOrBuilder();
        } else {
          return connectConfig_ == null ?
              io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig.getDefaultInstance() : connectConfig_;
        }
      }
      /**
       * <pre>
       * Configuration for sending data upstream as a raw data payload. This is used for
       * CONNECT requests, when forwarding CONNECT payload as raw TCP.
       * Note that CONNECT support is currently considered alpha in Envoy.
       * [#comment: TODO(htuch): Replace the above comment with an alpha tag.]
       * </pre>
       *
       * <code>.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig connect_config = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfigOrBuilder> 
          getConnectConfigFieldBuilder() {
        if (connectConfigBuilder_ == null) {
          connectConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfigOrBuilder>(
                  getConnectConfig(),
                  getParentForChildren(),
                  isClean());
          connectConfig_ = null;
        }
        return connectConfigBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.config.route.v3.RouteAction.UpgradeConfig)
    }

    // @@protoc_insertion_point(class_scope:envoy.config.route.v3.RouteAction.UpgradeConfig)
    private static final io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig();
    }

    public static io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UpgradeConfig>
        PARSER = new com.google.protobuf.AbstractParser<UpgradeConfig>() {
      @java.lang.Override
      public UpgradeConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<UpgradeConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UpgradeConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MaxStreamDurationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.config.route.v3.RouteAction.MaxStreamDuration)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Specifies the maximum duration allowed for streams on the route. If not specified, the value
     * from the :ref:`max_stream_duration
     * &lt;envoy_v3_api_field_config.core.v3.HttpProtocolOptions.max_stream_duration&gt;` field in
     * :ref:`HttpConnectionManager.common_http_protocol_options
     * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.common_http_protocol_options&gt;`
     * is used. If this field is set explicitly to zero, any
     * HttpConnectionManager max_stream_duration timeout will be disabled for
     * this route.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_stream_duration = 1;</code>
     * @return Whether the maxStreamDuration field is set.
     */
    boolean hasMaxStreamDuration();
    /**
     * <pre>
     * Specifies the maximum duration allowed for streams on the route. If not specified, the value
     * from the :ref:`max_stream_duration
     * &lt;envoy_v3_api_field_config.core.v3.HttpProtocolOptions.max_stream_duration&gt;` field in
     * :ref:`HttpConnectionManager.common_http_protocol_options
     * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.common_http_protocol_options&gt;`
     * is used. If this field is set explicitly to zero, any
     * HttpConnectionManager max_stream_duration timeout will be disabled for
     * this route.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_stream_duration = 1;</code>
     * @return The maxStreamDuration.
     */
    com.google.protobuf.Duration getMaxStreamDuration();
    /**
     * <pre>
     * Specifies the maximum duration allowed for streams on the route. If not specified, the value
     * from the :ref:`max_stream_duration
     * &lt;envoy_v3_api_field_config.core.v3.HttpProtocolOptions.max_stream_duration&gt;` field in
     * :ref:`HttpConnectionManager.common_http_protocol_options
     * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.common_http_protocol_options&gt;`
     * is used. If this field is set explicitly to zero, any
     * HttpConnectionManager max_stream_duration timeout will be disabled for
     * this route.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_stream_duration = 1;</code>
     */
    com.google.protobuf.DurationOrBuilder getMaxStreamDurationOrBuilder();

    /**
     * <pre>
     * If present, and the request contains a `grpc-timeout header
     * &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, use that value as the
     * ``max_stream_duration``, but limit the applied timeout to the maximum value specified here.
     * If set to 0, the ``grpc-timeout`` header is used without modification.
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_header_max = 2;</code>
     * @return Whether the grpcTimeoutHeaderMax field is set.
     */
    boolean hasGrpcTimeoutHeaderMax();
    /**
     * <pre>
     * If present, and the request contains a `grpc-timeout header
     * &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, use that value as the
     * ``max_stream_duration``, but limit the applied timeout to the maximum value specified here.
     * If set to 0, the ``grpc-timeout`` header is used without modification.
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_header_max = 2;</code>
     * @return The grpcTimeoutHeaderMax.
     */
    com.google.protobuf.Duration getGrpcTimeoutHeaderMax();
    /**
     * <pre>
     * If present, and the request contains a `grpc-timeout header
     * &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, use that value as the
     * ``max_stream_duration``, but limit the applied timeout to the maximum value specified here.
     * If set to 0, the ``grpc-timeout`` header is used without modification.
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_header_max = 2;</code>
     */
    com.google.protobuf.DurationOrBuilder getGrpcTimeoutHeaderMaxOrBuilder();

    /**
     * <pre>
     * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by
     * subtracting the provided duration from the header. This is useful for allowing Envoy to set
     * its global timeout to be less than that of the deadline imposed by the calling client, which
     * makes it more likely that Envoy will handle the timeout instead of having the call canceled
     * by the client. If, after applying the offset, the resulting timeout is zero or negative,
     * the stream will timeout immediately.
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_header_offset = 3;</code>
     * @return Whether the grpcTimeoutHeaderOffset field is set.
     */
    boolean hasGrpcTimeoutHeaderOffset();
    /**
     * <pre>
     * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by
     * subtracting the provided duration from the header. This is useful for allowing Envoy to set
     * its global timeout to be less than that of the deadline imposed by the calling client, which
     * makes it more likely that Envoy will handle the timeout instead of having the call canceled
     * by the client. If, after applying the offset, the resulting timeout is zero or negative,
     * the stream will timeout immediately.
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_header_offset = 3;</code>
     * @return The grpcTimeoutHeaderOffset.
     */
    com.google.protobuf.Duration getGrpcTimeoutHeaderOffset();
    /**
     * <pre>
     * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by
     * subtracting the provided duration from the header. This is useful for allowing Envoy to set
     * its global timeout to be less than that of the deadline imposed by the calling client, which
     * makes it more likely that Envoy will handle the timeout instead of having the call canceled
     * by the client. If, after applying the offset, the resulting timeout is zero or negative,
     * the stream will timeout immediately.
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_header_offset = 3;</code>
     */
    com.google.protobuf.DurationOrBuilder getGrpcTimeoutHeaderOffsetOrBuilder();
  }
  /**
   * Protobuf type {@code envoy.config.route.v3.RouteAction.MaxStreamDuration}
   */
  public static final class MaxStreamDuration extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.config.route.v3.RouteAction.MaxStreamDuration)
      MaxStreamDurationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MaxStreamDuration.newBuilder() to construct.
    private MaxStreamDuration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MaxStreamDuration() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MaxStreamDuration();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_MaxStreamDuration_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_MaxStreamDuration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration.class, io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration.Builder.class);
    }

    public static final int MAX_STREAM_DURATION_FIELD_NUMBER = 1;
    private com.google.protobuf.Duration maxStreamDuration_;
    /**
     * <pre>
     * Specifies the maximum duration allowed for streams on the route. If not specified, the value
     * from the :ref:`max_stream_duration
     * &lt;envoy_v3_api_field_config.core.v3.HttpProtocolOptions.max_stream_duration&gt;` field in
     * :ref:`HttpConnectionManager.common_http_protocol_options
     * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.common_http_protocol_options&gt;`
     * is used. If this field is set explicitly to zero, any
     * HttpConnectionManager max_stream_duration timeout will be disabled for
     * this route.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_stream_duration = 1;</code>
     * @return Whether the maxStreamDuration field is set.
     */
    @java.lang.Override
    public boolean hasMaxStreamDuration() {
      return maxStreamDuration_ != null;
    }
    /**
     * <pre>
     * Specifies the maximum duration allowed for streams on the route. If not specified, the value
     * from the :ref:`max_stream_duration
     * &lt;envoy_v3_api_field_config.core.v3.HttpProtocolOptions.max_stream_duration&gt;` field in
     * :ref:`HttpConnectionManager.common_http_protocol_options
     * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.common_http_protocol_options&gt;`
     * is used. If this field is set explicitly to zero, any
     * HttpConnectionManager max_stream_duration timeout will be disabled for
     * this route.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_stream_duration = 1;</code>
     * @return The maxStreamDuration.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getMaxStreamDuration() {
      return maxStreamDuration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : maxStreamDuration_;
    }
    /**
     * <pre>
     * Specifies the maximum duration allowed for streams on the route. If not specified, the value
     * from the :ref:`max_stream_duration
     * &lt;envoy_v3_api_field_config.core.v3.HttpProtocolOptions.max_stream_duration&gt;` field in
     * :ref:`HttpConnectionManager.common_http_protocol_options
     * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.common_http_protocol_options&gt;`
     * is used. If this field is set explicitly to zero, any
     * HttpConnectionManager max_stream_duration timeout will be disabled for
     * this route.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_stream_duration = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getMaxStreamDurationOrBuilder() {
      return maxStreamDuration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : maxStreamDuration_;
    }

    public static final int GRPC_TIMEOUT_HEADER_MAX_FIELD_NUMBER = 2;
    private com.google.protobuf.Duration grpcTimeoutHeaderMax_;
    /**
     * <pre>
     * If present, and the request contains a `grpc-timeout header
     * &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, use that value as the
     * ``max_stream_duration``, but limit the applied timeout to the maximum value specified here.
     * If set to 0, the ``grpc-timeout`` header is used without modification.
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_header_max = 2;</code>
     * @return Whether the grpcTimeoutHeaderMax field is set.
     */
    @java.lang.Override
    public boolean hasGrpcTimeoutHeaderMax() {
      return grpcTimeoutHeaderMax_ != null;
    }
    /**
     * <pre>
     * If present, and the request contains a `grpc-timeout header
     * &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, use that value as the
     * ``max_stream_duration``, but limit the applied timeout to the maximum value specified here.
     * If set to 0, the ``grpc-timeout`` header is used without modification.
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_header_max = 2;</code>
     * @return The grpcTimeoutHeaderMax.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getGrpcTimeoutHeaderMax() {
      return grpcTimeoutHeaderMax_ == null ? com.google.protobuf.Duration.getDefaultInstance() : grpcTimeoutHeaderMax_;
    }
    /**
     * <pre>
     * If present, and the request contains a `grpc-timeout header
     * &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, use that value as the
     * ``max_stream_duration``, but limit the applied timeout to the maximum value specified here.
     * If set to 0, the ``grpc-timeout`` header is used without modification.
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_header_max = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getGrpcTimeoutHeaderMaxOrBuilder() {
      return grpcTimeoutHeaderMax_ == null ? com.google.protobuf.Duration.getDefaultInstance() : grpcTimeoutHeaderMax_;
    }

    public static final int GRPC_TIMEOUT_HEADER_OFFSET_FIELD_NUMBER = 3;
    private com.google.protobuf.Duration grpcTimeoutHeaderOffset_;
    /**
     * <pre>
     * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by
     * subtracting the provided duration from the header. This is useful for allowing Envoy to set
     * its global timeout to be less than that of the deadline imposed by the calling client, which
     * makes it more likely that Envoy will handle the timeout instead of having the call canceled
     * by the client. If, after applying the offset, the resulting timeout is zero or negative,
     * the stream will timeout immediately.
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_header_offset = 3;</code>
     * @return Whether the grpcTimeoutHeaderOffset field is set.
     */
    @java.lang.Override
    public boolean hasGrpcTimeoutHeaderOffset() {
      return grpcTimeoutHeaderOffset_ != null;
    }
    /**
     * <pre>
     * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by
     * subtracting the provided duration from the header. This is useful for allowing Envoy to set
     * its global timeout to be less than that of the deadline imposed by the calling client, which
     * makes it more likely that Envoy will handle the timeout instead of having the call canceled
     * by the client. If, after applying the offset, the resulting timeout is zero or negative,
     * the stream will timeout immediately.
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_header_offset = 3;</code>
     * @return The grpcTimeoutHeaderOffset.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getGrpcTimeoutHeaderOffset() {
      return grpcTimeoutHeaderOffset_ == null ? com.google.protobuf.Duration.getDefaultInstance() : grpcTimeoutHeaderOffset_;
    }
    /**
     * <pre>
     * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by
     * subtracting the provided duration from the header. This is useful for allowing Envoy to set
     * its global timeout to be less than that of the deadline imposed by the calling client, which
     * makes it more likely that Envoy will handle the timeout instead of having the call canceled
     * by the client. If, after applying the offset, the resulting timeout is zero or negative,
     * the stream will timeout immediately.
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_header_offset = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getGrpcTimeoutHeaderOffsetOrBuilder() {
      return grpcTimeoutHeaderOffset_ == null ? com.google.protobuf.Duration.getDefaultInstance() : grpcTimeoutHeaderOffset_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (maxStreamDuration_ != null) {
        output.writeMessage(1, getMaxStreamDuration());
      }
      if (grpcTimeoutHeaderMax_ != null) {
        output.writeMessage(2, getGrpcTimeoutHeaderMax());
      }
      if (grpcTimeoutHeaderOffset_ != null) {
        output.writeMessage(3, getGrpcTimeoutHeaderOffset());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (maxStreamDuration_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMaxStreamDuration());
      }
      if (grpcTimeoutHeaderMax_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getGrpcTimeoutHeaderMax());
      }
      if (grpcTimeoutHeaderOffset_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getGrpcTimeoutHeaderOffset());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration)) {
        return super.equals(obj);
      }
      io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration other = (io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration) obj;

      if (hasMaxStreamDuration() != other.hasMaxStreamDuration()) return false;
      if (hasMaxStreamDuration()) {
        if (!getMaxStreamDuration()
            .equals(other.getMaxStreamDuration())) return false;
      }
      if (hasGrpcTimeoutHeaderMax() != other.hasGrpcTimeoutHeaderMax()) return false;
      if (hasGrpcTimeoutHeaderMax()) {
        if (!getGrpcTimeoutHeaderMax()
            .equals(other.getGrpcTimeoutHeaderMax())) return false;
      }
      if (hasGrpcTimeoutHeaderOffset() != other.hasGrpcTimeoutHeaderOffset()) return false;
      if (hasGrpcTimeoutHeaderOffset()) {
        if (!getGrpcTimeoutHeaderOffset()
            .equals(other.getGrpcTimeoutHeaderOffset())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMaxStreamDuration()) {
        hash = (37 * hash) + MAX_STREAM_DURATION_FIELD_NUMBER;
        hash = (53 * hash) + getMaxStreamDuration().hashCode();
      }
      if (hasGrpcTimeoutHeaderMax()) {
        hash = (37 * hash) + GRPC_TIMEOUT_HEADER_MAX_FIELD_NUMBER;
        hash = (53 * hash) + getGrpcTimeoutHeaderMax().hashCode();
      }
      if (hasGrpcTimeoutHeaderOffset()) {
        hash = (37 * hash) + GRPC_TIMEOUT_HEADER_OFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getGrpcTimeoutHeaderOffset().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code envoy.config.route.v3.RouteAction.MaxStreamDuration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.config.route.v3.RouteAction.MaxStreamDuration)
        io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_MaxStreamDuration_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_MaxStreamDuration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration.class, io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration.Builder.class);
      }

      // Construct using io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        maxStreamDuration_ = null;
        if (maxStreamDurationBuilder_ != null) {
          maxStreamDurationBuilder_.dispose();
          maxStreamDurationBuilder_ = null;
        }
        grpcTimeoutHeaderMax_ = null;
        if (grpcTimeoutHeaderMaxBuilder_ != null) {
          grpcTimeoutHeaderMaxBuilder_.dispose();
          grpcTimeoutHeaderMaxBuilder_ = null;
        }
        grpcTimeoutHeaderOffset_ = null;
        if (grpcTimeoutHeaderOffsetBuilder_ != null) {
          grpcTimeoutHeaderOffsetBuilder_.dispose();
          grpcTimeoutHeaderOffsetBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_MaxStreamDuration_descriptor;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration getDefaultInstanceForType() {
        return io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration.getDefaultInstance();
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration build() {
        io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration buildPartial() {
        io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration result = new io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.maxStreamDuration_ = maxStreamDurationBuilder_ == null
              ? maxStreamDuration_
              : maxStreamDurationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.grpcTimeoutHeaderMax_ = grpcTimeoutHeaderMaxBuilder_ == null
              ? grpcTimeoutHeaderMax_
              : grpcTimeoutHeaderMaxBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.grpcTimeoutHeaderOffset_ = grpcTimeoutHeaderOffsetBuilder_ == null
              ? grpcTimeoutHeaderOffset_
              : grpcTimeoutHeaderOffsetBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration) {
          return mergeFrom((io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration other) {
        if (other == io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration.getDefaultInstance()) return this;
        if (other.hasMaxStreamDuration()) {
          mergeMaxStreamDuration(other.getMaxStreamDuration());
        }
        if (other.hasGrpcTimeoutHeaderMax()) {
          mergeGrpcTimeoutHeaderMax(other.getGrpcTimeoutHeaderMax());
        }
        if (other.hasGrpcTimeoutHeaderOffset()) {
          mergeGrpcTimeoutHeaderOffset(other.getGrpcTimeoutHeaderOffset());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getMaxStreamDurationFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getGrpcTimeoutHeaderMaxFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getGrpcTimeoutHeaderOffsetFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Duration maxStreamDuration_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> maxStreamDurationBuilder_;
      /**
       * <pre>
       * Specifies the maximum duration allowed for streams on the route. If not specified, the value
       * from the :ref:`max_stream_duration
       * &lt;envoy_v3_api_field_config.core.v3.HttpProtocolOptions.max_stream_duration&gt;` field in
       * :ref:`HttpConnectionManager.common_http_protocol_options
       * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.common_http_protocol_options&gt;`
       * is used. If this field is set explicitly to zero, any
       * HttpConnectionManager max_stream_duration timeout will be disabled for
       * this route.
       * </pre>
       *
       * <code>.google.protobuf.Duration max_stream_duration = 1;</code>
       * @return Whether the maxStreamDuration field is set.
       */
      public boolean hasMaxStreamDuration() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Specifies the maximum duration allowed for streams on the route. If not specified, the value
       * from the :ref:`max_stream_duration
       * &lt;envoy_v3_api_field_config.core.v3.HttpProtocolOptions.max_stream_duration&gt;` field in
       * :ref:`HttpConnectionManager.common_http_protocol_options
       * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.common_http_protocol_options&gt;`
       * is used. If this field is set explicitly to zero, any
       * HttpConnectionManager max_stream_duration timeout will be disabled for
       * this route.
       * </pre>
       *
       * <code>.google.protobuf.Duration max_stream_duration = 1;</code>
       * @return The maxStreamDuration.
       */
      public com.google.protobuf.Duration getMaxStreamDuration() {
        if (maxStreamDurationBuilder_ == null) {
          return maxStreamDuration_ == null ? com.google.protobuf.Duration.getDefaultInstance() : maxStreamDuration_;
        } else {
          return maxStreamDurationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Specifies the maximum duration allowed for streams on the route. If not specified, the value
       * from the :ref:`max_stream_duration
       * &lt;envoy_v3_api_field_config.core.v3.HttpProtocolOptions.max_stream_duration&gt;` field in
       * :ref:`HttpConnectionManager.common_http_protocol_options
       * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.common_http_protocol_options&gt;`
       * is used. If this field is set explicitly to zero, any
       * HttpConnectionManager max_stream_duration timeout will be disabled for
       * this route.
       * </pre>
       *
       * <code>.google.protobuf.Duration max_stream_duration = 1;</code>
       */
      public Builder setMaxStreamDuration(com.google.protobuf.Duration value) {
        if (maxStreamDurationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxStreamDuration_ = value;
        } else {
          maxStreamDurationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the maximum duration allowed for streams on the route. If not specified, the value
       * from the :ref:`max_stream_duration
       * &lt;envoy_v3_api_field_config.core.v3.HttpProtocolOptions.max_stream_duration&gt;` field in
       * :ref:`HttpConnectionManager.common_http_protocol_options
       * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.common_http_protocol_options&gt;`
       * is used. If this field is set explicitly to zero, any
       * HttpConnectionManager max_stream_duration timeout will be disabled for
       * this route.
       * </pre>
       *
       * <code>.google.protobuf.Duration max_stream_duration = 1;</code>
       */
      public Builder setMaxStreamDuration(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (maxStreamDurationBuilder_ == null) {
          maxStreamDuration_ = builderForValue.build();
        } else {
          maxStreamDurationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the maximum duration allowed for streams on the route. If not specified, the value
       * from the :ref:`max_stream_duration
       * &lt;envoy_v3_api_field_config.core.v3.HttpProtocolOptions.max_stream_duration&gt;` field in
       * :ref:`HttpConnectionManager.common_http_protocol_options
       * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.common_http_protocol_options&gt;`
       * is used. If this field is set explicitly to zero, any
       * HttpConnectionManager max_stream_duration timeout will be disabled for
       * this route.
       * </pre>
       *
       * <code>.google.protobuf.Duration max_stream_duration = 1;</code>
       */
      public Builder mergeMaxStreamDuration(com.google.protobuf.Duration value) {
        if (maxStreamDurationBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            maxStreamDuration_ != null &&
            maxStreamDuration_ != com.google.protobuf.Duration.getDefaultInstance()) {
            getMaxStreamDurationBuilder().mergeFrom(value);
          } else {
            maxStreamDuration_ = value;
          }
        } else {
          maxStreamDurationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the maximum duration allowed for streams on the route. If not specified, the value
       * from the :ref:`max_stream_duration
       * &lt;envoy_v3_api_field_config.core.v3.HttpProtocolOptions.max_stream_duration&gt;` field in
       * :ref:`HttpConnectionManager.common_http_protocol_options
       * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.common_http_protocol_options&gt;`
       * is used. If this field is set explicitly to zero, any
       * HttpConnectionManager max_stream_duration timeout will be disabled for
       * this route.
       * </pre>
       *
       * <code>.google.protobuf.Duration max_stream_duration = 1;</code>
       */
      public Builder clearMaxStreamDuration() {
        bitField0_ = (bitField0_ & ~0x00000001);
        maxStreamDuration_ = null;
        if (maxStreamDurationBuilder_ != null) {
          maxStreamDurationBuilder_.dispose();
          maxStreamDurationBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specifies the maximum duration allowed for streams on the route. If not specified, the value
       * from the :ref:`max_stream_duration
       * &lt;envoy_v3_api_field_config.core.v3.HttpProtocolOptions.max_stream_duration&gt;` field in
       * :ref:`HttpConnectionManager.common_http_protocol_options
       * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.common_http_protocol_options&gt;`
       * is used. If this field is set explicitly to zero, any
       * HttpConnectionManager max_stream_duration timeout will be disabled for
       * this route.
       * </pre>
       *
       * <code>.google.protobuf.Duration max_stream_duration = 1;</code>
       */
      public com.google.protobuf.Duration.Builder getMaxStreamDurationBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getMaxStreamDurationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Specifies the maximum duration allowed for streams on the route. If not specified, the value
       * from the :ref:`max_stream_duration
       * &lt;envoy_v3_api_field_config.core.v3.HttpProtocolOptions.max_stream_duration&gt;` field in
       * :ref:`HttpConnectionManager.common_http_protocol_options
       * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.common_http_protocol_options&gt;`
       * is used. If this field is set explicitly to zero, any
       * HttpConnectionManager max_stream_duration timeout will be disabled for
       * this route.
       * </pre>
       *
       * <code>.google.protobuf.Duration max_stream_duration = 1;</code>
       */
      public com.google.protobuf.DurationOrBuilder getMaxStreamDurationOrBuilder() {
        if (maxStreamDurationBuilder_ != null) {
          return maxStreamDurationBuilder_.getMessageOrBuilder();
        } else {
          return maxStreamDuration_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : maxStreamDuration_;
        }
      }
      /**
       * <pre>
       * Specifies the maximum duration allowed for streams on the route. If not specified, the value
       * from the :ref:`max_stream_duration
       * &lt;envoy_v3_api_field_config.core.v3.HttpProtocolOptions.max_stream_duration&gt;` field in
       * :ref:`HttpConnectionManager.common_http_protocol_options
       * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.common_http_protocol_options&gt;`
       * is used. If this field is set explicitly to zero, any
       * HttpConnectionManager max_stream_duration timeout will be disabled for
       * this route.
       * </pre>
       *
       * <code>.google.protobuf.Duration max_stream_duration = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getMaxStreamDurationFieldBuilder() {
        if (maxStreamDurationBuilder_ == null) {
          maxStreamDurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getMaxStreamDuration(),
                  getParentForChildren(),
                  isClean());
          maxStreamDuration_ = null;
        }
        return maxStreamDurationBuilder_;
      }

      private com.google.protobuf.Duration grpcTimeoutHeaderMax_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> grpcTimeoutHeaderMaxBuilder_;
      /**
       * <pre>
       * If present, and the request contains a `grpc-timeout header
       * &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, use that value as the
       * ``max_stream_duration``, but limit the applied timeout to the maximum value specified here.
       * If set to 0, the ``grpc-timeout`` header is used without modification.
       * </pre>
       *
       * <code>.google.protobuf.Duration grpc_timeout_header_max = 2;</code>
       * @return Whether the grpcTimeoutHeaderMax field is set.
       */
      public boolean hasGrpcTimeoutHeaderMax() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * If present, and the request contains a `grpc-timeout header
       * &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, use that value as the
       * ``max_stream_duration``, but limit the applied timeout to the maximum value specified here.
       * If set to 0, the ``grpc-timeout`` header is used without modification.
       * </pre>
       *
       * <code>.google.protobuf.Duration grpc_timeout_header_max = 2;</code>
       * @return The grpcTimeoutHeaderMax.
       */
      public com.google.protobuf.Duration getGrpcTimeoutHeaderMax() {
        if (grpcTimeoutHeaderMaxBuilder_ == null) {
          return grpcTimeoutHeaderMax_ == null ? com.google.protobuf.Duration.getDefaultInstance() : grpcTimeoutHeaderMax_;
        } else {
          return grpcTimeoutHeaderMaxBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * If present, and the request contains a `grpc-timeout header
       * &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, use that value as the
       * ``max_stream_duration``, but limit the applied timeout to the maximum value specified here.
       * If set to 0, the ``grpc-timeout`` header is used without modification.
       * </pre>
       *
       * <code>.google.protobuf.Duration grpc_timeout_header_max = 2;</code>
       */
      public Builder setGrpcTimeoutHeaderMax(com.google.protobuf.Duration value) {
        if (grpcTimeoutHeaderMaxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          grpcTimeoutHeaderMax_ = value;
        } else {
          grpcTimeoutHeaderMaxBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If present, and the request contains a `grpc-timeout header
       * &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, use that value as the
       * ``max_stream_duration``, but limit the applied timeout to the maximum value specified here.
       * If set to 0, the ``grpc-timeout`` header is used without modification.
       * </pre>
       *
       * <code>.google.protobuf.Duration grpc_timeout_header_max = 2;</code>
       */
      public Builder setGrpcTimeoutHeaderMax(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (grpcTimeoutHeaderMaxBuilder_ == null) {
          grpcTimeoutHeaderMax_ = builderForValue.build();
        } else {
          grpcTimeoutHeaderMaxBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If present, and the request contains a `grpc-timeout header
       * &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, use that value as the
       * ``max_stream_duration``, but limit the applied timeout to the maximum value specified here.
       * If set to 0, the ``grpc-timeout`` header is used without modification.
       * </pre>
       *
       * <code>.google.protobuf.Duration grpc_timeout_header_max = 2;</code>
       */
      public Builder mergeGrpcTimeoutHeaderMax(com.google.protobuf.Duration value) {
        if (grpcTimeoutHeaderMaxBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            grpcTimeoutHeaderMax_ != null &&
            grpcTimeoutHeaderMax_ != com.google.protobuf.Duration.getDefaultInstance()) {
            getGrpcTimeoutHeaderMaxBuilder().mergeFrom(value);
          } else {
            grpcTimeoutHeaderMax_ = value;
          }
        } else {
          grpcTimeoutHeaderMaxBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If present, and the request contains a `grpc-timeout header
       * &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, use that value as the
       * ``max_stream_duration``, but limit the applied timeout to the maximum value specified here.
       * If set to 0, the ``grpc-timeout`` header is used without modification.
       * </pre>
       *
       * <code>.google.protobuf.Duration grpc_timeout_header_max = 2;</code>
       */
      public Builder clearGrpcTimeoutHeaderMax() {
        bitField0_ = (bitField0_ & ~0x00000002);
        grpcTimeoutHeaderMax_ = null;
        if (grpcTimeoutHeaderMaxBuilder_ != null) {
          grpcTimeoutHeaderMaxBuilder_.dispose();
          grpcTimeoutHeaderMaxBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If present, and the request contains a `grpc-timeout header
       * &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, use that value as the
       * ``max_stream_duration``, but limit the applied timeout to the maximum value specified here.
       * If set to 0, the ``grpc-timeout`` header is used without modification.
       * </pre>
       *
       * <code>.google.protobuf.Duration grpc_timeout_header_max = 2;</code>
       */
      public com.google.protobuf.Duration.Builder getGrpcTimeoutHeaderMaxBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getGrpcTimeoutHeaderMaxFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * If present, and the request contains a `grpc-timeout header
       * &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, use that value as the
       * ``max_stream_duration``, but limit the applied timeout to the maximum value specified here.
       * If set to 0, the ``grpc-timeout`` header is used without modification.
       * </pre>
       *
       * <code>.google.protobuf.Duration grpc_timeout_header_max = 2;</code>
       */
      public com.google.protobuf.DurationOrBuilder getGrpcTimeoutHeaderMaxOrBuilder() {
        if (grpcTimeoutHeaderMaxBuilder_ != null) {
          return grpcTimeoutHeaderMaxBuilder_.getMessageOrBuilder();
        } else {
          return grpcTimeoutHeaderMax_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : grpcTimeoutHeaderMax_;
        }
      }
      /**
       * <pre>
       * If present, and the request contains a `grpc-timeout header
       * &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, use that value as the
       * ``max_stream_duration``, but limit the applied timeout to the maximum value specified here.
       * If set to 0, the ``grpc-timeout`` header is used without modification.
       * </pre>
       *
       * <code>.google.protobuf.Duration grpc_timeout_header_max = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getGrpcTimeoutHeaderMaxFieldBuilder() {
        if (grpcTimeoutHeaderMaxBuilder_ == null) {
          grpcTimeoutHeaderMaxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getGrpcTimeoutHeaderMax(),
                  getParentForChildren(),
                  isClean());
          grpcTimeoutHeaderMax_ = null;
        }
        return grpcTimeoutHeaderMaxBuilder_;
      }

      private com.google.protobuf.Duration grpcTimeoutHeaderOffset_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> grpcTimeoutHeaderOffsetBuilder_;
      /**
       * <pre>
       * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by
       * subtracting the provided duration from the header. This is useful for allowing Envoy to set
       * its global timeout to be less than that of the deadline imposed by the calling client, which
       * makes it more likely that Envoy will handle the timeout instead of having the call canceled
       * by the client. If, after applying the offset, the resulting timeout is zero or negative,
       * the stream will timeout immediately.
       * </pre>
       *
       * <code>.google.protobuf.Duration grpc_timeout_header_offset = 3;</code>
       * @return Whether the grpcTimeoutHeaderOffset field is set.
       */
      public boolean hasGrpcTimeoutHeaderOffset() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by
       * subtracting the provided duration from the header. This is useful for allowing Envoy to set
       * its global timeout to be less than that of the deadline imposed by the calling client, which
       * makes it more likely that Envoy will handle the timeout instead of having the call canceled
       * by the client. If, after applying the offset, the resulting timeout is zero or negative,
       * the stream will timeout immediately.
       * </pre>
       *
       * <code>.google.protobuf.Duration grpc_timeout_header_offset = 3;</code>
       * @return The grpcTimeoutHeaderOffset.
       */
      public com.google.protobuf.Duration getGrpcTimeoutHeaderOffset() {
        if (grpcTimeoutHeaderOffsetBuilder_ == null) {
          return grpcTimeoutHeaderOffset_ == null ? com.google.protobuf.Duration.getDefaultInstance() : grpcTimeoutHeaderOffset_;
        } else {
          return grpcTimeoutHeaderOffsetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by
       * subtracting the provided duration from the header. This is useful for allowing Envoy to set
       * its global timeout to be less than that of the deadline imposed by the calling client, which
       * makes it more likely that Envoy will handle the timeout instead of having the call canceled
       * by the client. If, after applying the offset, the resulting timeout is zero or negative,
       * the stream will timeout immediately.
       * </pre>
       *
       * <code>.google.protobuf.Duration grpc_timeout_header_offset = 3;</code>
       */
      public Builder setGrpcTimeoutHeaderOffset(com.google.protobuf.Duration value) {
        if (grpcTimeoutHeaderOffsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          grpcTimeoutHeaderOffset_ = value;
        } else {
          grpcTimeoutHeaderOffsetBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by
       * subtracting the provided duration from the header. This is useful for allowing Envoy to set
       * its global timeout to be less than that of the deadline imposed by the calling client, which
       * makes it more likely that Envoy will handle the timeout instead of having the call canceled
       * by the client. If, after applying the offset, the resulting timeout is zero or negative,
       * the stream will timeout immediately.
       * </pre>
       *
       * <code>.google.protobuf.Duration grpc_timeout_header_offset = 3;</code>
       */
      public Builder setGrpcTimeoutHeaderOffset(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (grpcTimeoutHeaderOffsetBuilder_ == null) {
          grpcTimeoutHeaderOffset_ = builderForValue.build();
        } else {
          grpcTimeoutHeaderOffsetBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by
       * subtracting the provided duration from the header. This is useful for allowing Envoy to set
       * its global timeout to be less than that of the deadline imposed by the calling client, which
       * makes it more likely that Envoy will handle the timeout instead of having the call canceled
       * by the client. If, after applying the offset, the resulting timeout is zero or negative,
       * the stream will timeout immediately.
       * </pre>
       *
       * <code>.google.protobuf.Duration grpc_timeout_header_offset = 3;</code>
       */
      public Builder mergeGrpcTimeoutHeaderOffset(com.google.protobuf.Duration value) {
        if (grpcTimeoutHeaderOffsetBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            grpcTimeoutHeaderOffset_ != null &&
            grpcTimeoutHeaderOffset_ != com.google.protobuf.Duration.getDefaultInstance()) {
            getGrpcTimeoutHeaderOffsetBuilder().mergeFrom(value);
          } else {
            grpcTimeoutHeaderOffset_ = value;
          }
        } else {
          grpcTimeoutHeaderOffsetBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by
       * subtracting the provided duration from the header. This is useful for allowing Envoy to set
       * its global timeout to be less than that of the deadline imposed by the calling client, which
       * makes it more likely that Envoy will handle the timeout instead of having the call canceled
       * by the client. If, after applying the offset, the resulting timeout is zero or negative,
       * the stream will timeout immediately.
       * </pre>
       *
       * <code>.google.protobuf.Duration grpc_timeout_header_offset = 3;</code>
       */
      public Builder clearGrpcTimeoutHeaderOffset() {
        bitField0_ = (bitField0_ & ~0x00000004);
        grpcTimeoutHeaderOffset_ = null;
        if (grpcTimeoutHeaderOffsetBuilder_ != null) {
          grpcTimeoutHeaderOffsetBuilder_.dispose();
          grpcTimeoutHeaderOffsetBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by
       * subtracting the provided duration from the header. This is useful for allowing Envoy to set
       * its global timeout to be less than that of the deadline imposed by the calling client, which
       * makes it more likely that Envoy will handle the timeout instead of having the call canceled
       * by the client. If, after applying the offset, the resulting timeout is zero or negative,
       * the stream will timeout immediately.
       * </pre>
       *
       * <code>.google.protobuf.Duration grpc_timeout_header_offset = 3;</code>
       */
      public com.google.protobuf.Duration.Builder getGrpcTimeoutHeaderOffsetBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getGrpcTimeoutHeaderOffsetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by
       * subtracting the provided duration from the header. This is useful for allowing Envoy to set
       * its global timeout to be less than that of the deadline imposed by the calling client, which
       * makes it more likely that Envoy will handle the timeout instead of having the call canceled
       * by the client. If, after applying the offset, the resulting timeout is zero or negative,
       * the stream will timeout immediately.
       * </pre>
       *
       * <code>.google.protobuf.Duration grpc_timeout_header_offset = 3;</code>
       */
      public com.google.protobuf.DurationOrBuilder getGrpcTimeoutHeaderOffsetOrBuilder() {
        if (grpcTimeoutHeaderOffsetBuilder_ != null) {
          return grpcTimeoutHeaderOffsetBuilder_.getMessageOrBuilder();
        } else {
          return grpcTimeoutHeaderOffset_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : grpcTimeoutHeaderOffset_;
        }
      }
      /**
       * <pre>
       * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by
       * subtracting the provided duration from the header. This is useful for allowing Envoy to set
       * its global timeout to be less than that of the deadline imposed by the calling client, which
       * makes it more likely that Envoy will handle the timeout instead of having the call canceled
       * by the client. If, after applying the offset, the resulting timeout is zero or negative,
       * the stream will timeout immediately.
       * </pre>
       *
       * <code>.google.protobuf.Duration grpc_timeout_header_offset = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getGrpcTimeoutHeaderOffsetFieldBuilder() {
        if (grpcTimeoutHeaderOffsetBuilder_ == null) {
          grpcTimeoutHeaderOffsetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getGrpcTimeoutHeaderOffset(),
                  getParentForChildren(),
                  isClean());
          grpcTimeoutHeaderOffset_ = null;
        }
        return grpcTimeoutHeaderOffsetBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.config.route.v3.RouteAction.MaxStreamDuration)
    }

    // @@protoc_insertion_point(class_scope:envoy.config.route.v3.RouteAction.MaxStreamDuration)
    private static final io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration();
    }

    public static io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MaxStreamDuration>
        PARSER = new com.google.protobuf.AbstractParser<MaxStreamDuration>() {
      @java.lang.Override
      public MaxStreamDuration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MaxStreamDuration> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MaxStreamDuration> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int clusterSpecifierCase_ = 0;
  private java.lang.Object clusterSpecifier_;
  public enum ClusterSpecifierCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    CLUSTER(1),
    CLUSTER_HEADER(2),
    WEIGHTED_CLUSTERS(3),
    CLUSTER_SPECIFIER_PLUGIN(37),
    INLINE_CLUSTER_SPECIFIER_PLUGIN(39),
    CLUSTERSPECIFIER_NOT_SET(0);
    private final int value;
    private ClusterSpecifierCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ClusterSpecifierCase valueOf(int value) {
      return forNumber(value);
    }

    public static ClusterSpecifierCase forNumber(int value) {
      switch (value) {
        case 1: return CLUSTER;
        case 2: return CLUSTER_HEADER;
        case 3: return WEIGHTED_CLUSTERS;
        case 37: return CLUSTER_SPECIFIER_PLUGIN;
        case 39: return INLINE_CLUSTER_SPECIFIER_PLUGIN;
        case 0: return CLUSTERSPECIFIER_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ClusterSpecifierCase
  getClusterSpecifierCase() {
    return ClusterSpecifierCase.forNumber(
        clusterSpecifierCase_);
  }

  private int hostRewriteSpecifierCase_ = 0;
  private java.lang.Object hostRewriteSpecifier_;
  public enum HostRewriteSpecifierCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    HOST_REWRITE_LITERAL(6),
    AUTO_HOST_REWRITE(7),
    HOST_REWRITE_HEADER(29),
    HOST_REWRITE_PATH_REGEX(35),
    HOSTREWRITESPECIFIER_NOT_SET(0);
    private final int value;
    private HostRewriteSpecifierCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static HostRewriteSpecifierCase valueOf(int value) {
      return forNumber(value);
    }

    public static HostRewriteSpecifierCase forNumber(int value) {
      switch (value) {
        case 6: return HOST_REWRITE_LITERAL;
        case 7: return AUTO_HOST_REWRITE;
        case 29: return HOST_REWRITE_HEADER;
        case 35: return HOST_REWRITE_PATH_REGEX;
        case 0: return HOSTREWRITESPECIFIER_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public HostRewriteSpecifierCase
  getHostRewriteSpecifierCase() {
    return HostRewriteSpecifierCase.forNumber(
        hostRewriteSpecifierCase_);
  }

  public static final int CLUSTER_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Indicates the upstream cluster to which the request should be routed
   * to.
   * </pre>
   *
   * <code>string cluster = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the cluster field is set.
   */
  public boolean hasCluster() {
    return clusterSpecifierCase_ == 1;
  }
  /**
   * <pre>
   * Indicates the upstream cluster to which the request should be routed
   * to.
   * </pre>
   *
   * <code>string cluster = 1 [(.validate.rules) = { ... }</code>
   * @return The cluster.
   */
  public java.lang.String getCluster() {
    java.lang.Object ref = "";
    if (clusterSpecifierCase_ == 1) {
      ref = clusterSpecifier_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (clusterSpecifierCase_ == 1) {
        clusterSpecifier_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Indicates the upstream cluster to which the request should be routed
   * to.
   * </pre>
   *
   * <code>string cluster = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for cluster.
   */
  public com.google.protobuf.ByteString
      getClusterBytes() {
    java.lang.Object ref = "";
    if (clusterSpecifierCase_ == 1) {
      ref = clusterSpecifier_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (clusterSpecifierCase_ == 1) {
        clusterSpecifier_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CLUSTER_HEADER_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Envoy will determine the cluster to route to by reading the value of the
   * HTTP header named by cluster_header from the request headers. If the
   * header is not found or the referenced cluster does not exist, Envoy will
   * return a 404 response.
   * .. attention::
   *   Internally, Envoy always uses the HTTP/2 ``:authority`` header to represent the HTTP/1
   *   ``Host`` header. Thus, if attempting to match on ``Host``, match on ``:authority`` instead.
   * .. note::
   *   If the header appears multiple times only the first value is used.
   * </pre>
   *
   * <code>string cluster_header = 2 [(.validate.rules) = { ... }</code>
   * @return Whether the clusterHeader field is set.
   */
  public boolean hasClusterHeader() {
    return clusterSpecifierCase_ == 2;
  }
  /**
   * <pre>
   * Envoy will determine the cluster to route to by reading the value of the
   * HTTP header named by cluster_header from the request headers. If the
   * header is not found or the referenced cluster does not exist, Envoy will
   * return a 404 response.
   * .. attention::
   *   Internally, Envoy always uses the HTTP/2 ``:authority`` header to represent the HTTP/1
   *   ``Host`` header. Thus, if attempting to match on ``Host``, match on ``:authority`` instead.
   * .. note::
   *   If the header appears multiple times only the first value is used.
   * </pre>
   *
   * <code>string cluster_header = 2 [(.validate.rules) = { ... }</code>
   * @return The clusterHeader.
   */
  public java.lang.String getClusterHeader() {
    java.lang.Object ref = "";
    if (clusterSpecifierCase_ == 2) {
      ref = clusterSpecifier_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (clusterSpecifierCase_ == 2) {
        clusterSpecifier_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Envoy will determine the cluster to route to by reading the value of the
   * HTTP header named by cluster_header from the request headers. If the
   * header is not found or the referenced cluster does not exist, Envoy will
   * return a 404 response.
   * .. attention::
   *   Internally, Envoy always uses the HTTP/2 ``:authority`` header to represent the HTTP/1
   *   ``Host`` header. Thus, if attempting to match on ``Host``, match on ``:authority`` instead.
   * .. note::
   *   If the header appears multiple times only the first value is used.
   * </pre>
   *
   * <code>string cluster_header = 2 [(.validate.rules) = { ... }</code>
   * @return The bytes for clusterHeader.
   */
  public com.google.protobuf.ByteString
      getClusterHeaderBytes() {
    java.lang.Object ref = "";
    if (clusterSpecifierCase_ == 2) {
      ref = clusterSpecifier_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (clusterSpecifierCase_ == 2) {
        clusterSpecifier_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int WEIGHTED_CLUSTERS_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Multiple upstream clusters can be specified for a given route. The
   * request is routed to one of the upstream clusters based on weights
   * assigned to each cluster. See
   * :ref:`traffic splitting &lt;config_http_conn_man_route_table_traffic_splitting_split&gt;`
   * for additional documentation.
   * </pre>
   *
   * <code>.envoy.config.route.v3.WeightedCluster weighted_clusters = 3;</code>
   * @return Whether the weightedClusters field is set.
   */
  @java.lang.Override
  public boolean hasWeightedClusters() {
    return clusterSpecifierCase_ == 3;
  }
  /**
   * <pre>
   * Multiple upstream clusters can be specified for a given route. The
   * request is routed to one of the upstream clusters based on weights
   * assigned to each cluster. See
   * :ref:`traffic splitting &lt;config_http_conn_man_route_table_traffic_splitting_split&gt;`
   * for additional documentation.
   * </pre>
   *
   * <code>.envoy.config.route.v3.WeightedCluster weighted_clusters = 3;</code>
   * @return The weightedClusters.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.WeightedCluster getWeightedClusters() {
    if (clusterSpecifierCase_ == 3) {
       return (io.envoyproxy.envoy.config.route.v3.WeightedCluster) clusterSpecifier_;
    }
    return io.envoyproxy.envoy.config.route.v3.WeightedCluster.getDefaultInstance();
  }
  /**
   * <pre>
   * Multiple upstream clusters can be specified for a given route. The
   * request is routed to one of the upstream clusters based on weights
   * assigned to each cluster. See
   * :ref:`traffic splitting &lt;config_http_conn_man_route_table_traffic_splitting_split&gt;`
   * for additional documentation.
   * </pre>
   *
   * <code>.envoy.config.route.v3.WeightedCluster weighted_clusters = 3;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.WeightedClusterOrBuilder getWeightedClustersOrBuilder() {
    if (clusterSpecifierCase_ == 3) {
       return (io.envoyproxy.envoy.config.route.v3.WeightedCluster) clusterSpecifier_;
    }
    return io.envoyproxy.envoy.config.route.v3.WeightedCluster.getDefaultInstance();
  }

  public static final int CLUSTER_SPECIFIER_PLUGIN_FIELD_NUMBER = 37;
  /**
   * <pre>
   * Name of the cluster specifier plugin to use to determine the cluster for requests on this route.
   * The cluster specifier plugin name must be defined in the associated
   * :ref:`cluster specifier plugins &lt;envoy_v3_api_field_config.route.v3.RouteConfiguration.cluster_specifier_plugins&gt;`
   * in the :ref:`name &lt;envoy_v3_api_field_config.core.v3.TypedExtensionConfig.name&gt;` field.
   * </pre>
   *
   * <code>string cluster_specifier_plugin = 37;</code>
   * @return Whether the clusterSpecifierPlugin field is set.
   */
  public boolean hasClusterSpecifierPlugin() {
    return clusterSpecifierCase_ == 37;
  }
  /**
   * <pre>
   * Name of the cluster specifier plugin to use to determine the cluster for requests on this route.
   * The cluster specifier plugin name must be defined in the associated
   * :ref:`cluster specifier plugins &lt;envoy_v3_api_field_config.route.v3.RouteConfiguration.cluster_specifier_plugins&gt;`
   * in the :ref:`name &lt;envoy_v3_api_field_config.core.v3.TypedExtensionConfig.name&gt;` field.
   * </pre>
   *
   * <code>string cluster_specifier_plugin = 37;</code>
   * @return The clusterSpecifierPlugin.
   */
  public java.lang.String getClusterSpecifierPlugin() {
    java.lang.Object ref = "";
    if (clusterSpecifierCase_ == 37) {
      ref = clusterSpecifier_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (clusterSpecifierCase_ == 37) {
        clusterSpecifier_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Name of the cluster specifier plugin to use to determine the cluster for requests on this route.
   * The cluster specifier plugin name must be defined in the associated
   * :ref:`cluster specifier plugins &lt;envoy_v3_api_field_config.route.v3.RouteConfiguration.cluster_specifier_plugins&gt;`
   * in the :ref:`name &lt;envoy_v3_api_field_config.core.v3.TypedExtensionConfig.name&gt;` field.
   * </pre>
   *
   * <code>string cluster_specifier_plugin = 37;</code>
   * @return The bytes for clusterSpecifierPlugin.
   */
  public com.google.protobuf.ByteString
      getClusterSpecifierPluginBytes() {
    java.lang.Object ref = "";
    if (clusterSpecifierCase_ == 37) {
      ref = clusterSpecifier_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (clusterSpecifierCase_ == 37) {
        clusterSpecifier_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INLINE_CLUSTER_SPECIFIER_PLUGIN_FIELD_NUMBER = 39;
  /**
   * <pre>
   * Custom cluster specifier plugin configuration to use to determine the cluster for requests
   * on this route.
   * </pre>
   *
   * <code>.envoy.config.route.v3.ClusterSpecifierPlugin inline_cluster_specifier_plugin = 39;</code>
   * @return Whether the inlineClusterSpecifierPlugin field is set.
   */
  @java.lang.Override
  public boolean hasInlineClusterSpecifierPlugin() {
    return clusterSpecifierCase_ == 39;
  }
  /**
   * <pre>
   * Custom cluster specifier plugin configuration to use to determine the cluster for requests
   * on this route.
   * </pre>
   *
   * <code>.envoy.config.route.v3.ClusterSpecifierPlugin inline_cluster_specifier_plugin = 39;</code>
   * @return The inlineClusterSpecifierPlugin.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin getInlineClusterSpecifierPlugin() {
    if (clusterSpecifierCase_ == 39) {
       return (io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin) clusterSpecifier_;
    }
    return io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin.getDefaultInstance();
  }
  /**
   * <pre>
   * Custom cluster specifier plugin configuration to use to determine the cluster for requests
   * on this route.
   * </pre>
   *
   * <code>.envoy.config.route.v3.ClusterSpecifierPlugin inline_cluster_specifier_plugin = 39;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPluginOrBuilder getInlineClusterSpecifierPluginOrBuilder() {
    if (clusterSpecifierCase_ == 39) {
       return (io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin) clusterSpecifier_;
    }
    return io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin.getDefaultInstance();
  }

  public static final int CLUSTER_NOT_FOUND_RESPONSE_CODE_FIELD_NUMBER = 20;
  private int clusterNotFoundResponseCode_ = 0;
  /**
   * <pre>
   * The HTTP status code to use when configured cluster is not found.
   * The default response code is 503 Service Unavailable.
   * </pre>
   *
   * <code>.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode cluster_not_found_response_code = 20 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for clusterNotFoundResponseCode.
   */
  @java.lang.Override public int getClusterNotFoundResponseCodeValue() {
    return clusterNotFoundResponseCode_;
  }
  /**
   * <pre>
   * The HTTP status code to use when configured cluster is not found.
   * The default response code is 503 Service Unavailable.
   * </pre>
   *
   * <code>.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode cluster_not_found_response_code = 20 [(.validate.rules) = { ... }</code>
   * @return The clusterNotFoundResponseCode.
   */
  @java.lang.Override public io.envoyproxy.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode getClusterNotFoundResponseCode() {
    io.envoyproxy.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode result = io.envoyproxy.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode.forNumber(clusterNotFoundResponseCode_);
    return result == null ? io.envoyproxy.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode.UNRECOGNIZED : result;
  }

  public static final int METADATA_MATCH_FIELD_NUMBER = 4;
  private io.envoyproxy.envoy.config.core.v3.Metadata metadataMatch_;
  /**
   * <pre>
   * Optional endpoint metadata match criteria used by the subset load balancer. Only endpoints
   * in the upstream cluster with metadata matching what's set in this field will be considered
   * for load balancing. If using :ref:`weighted_clusters
   * &lt;envoy_v3_api_field_config.route.v3.RouteAction.weighted_clusters&gt;`, metadata will be merged, with values
   * provided there taking precedence. The filter name should be specified as ``envoy.lb``.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Metadata metadata_match = 4;</code>
   * @return Whether the metadataMatch field is set.
   */
  @java.lang.Override
  public boolean hasMetadataMatch() {
    return metadataMatch_ != null;
  }
  /**
   * <pre>
   * Optional endpoint metadata match criteria used by the subset load balancer. Only endpoints
   * in the upstream cluster with metadata matching what's set in this field will be considered
   * for load balancing. If using :ref:`weighted_clusters
   * &lt;envoy_v3_api_field_config.route.v3.RouteAction.weighted_clusters&gt;`, metadata will be merged, with values
   * provided there taking precedence. The filter name should be specified as ``envoy.lb``.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Metadata metadata_match = 4;</code>
   * @return The metadataMatch.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.Metadata getMetadataMatch() {
    return metadataMatch_ == null ? io.envoyproxy.envoy.config.core.v3.Metadata.getDefaultInstance() : metadataMatch_;
  }
  /**
   * <pre>
   * Optional endpoint metadata match criteria used by the subset load balancer. Only endpoints
   * in the upstream cluster with metadata matching what's set in this field will be considered
   * for load balancing. If using :ref:`weighted_clusters
   * &lt;envoy_v3_api_field_config.route.v3.RouteAction.weighted_clusters&gt;`, metadata will be merged, with values
   * provided there taking precedence. The filter name should be specified as ``envoy.lb``.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Metadata metadata_match = 4;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.MetadataOrBuilder getMetadataMatchOrBuilder() {
    return metadataMatch_ == null ? io.envoyproxy.envoy.config.core.v3.Metadata.getDefaultInstance() : metadataMatch_;
  }

  public static final int PREFIX_REWRITE_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object prefixRewrite_ = "";
  /**
   * <pre>
   * Indicates that during forwarding, the matched prefix (or path) should be
   * swapped with this value. This option allows application URLs to be rooted
   * at a different path from those exposed at the reverse proxy layer. The router filter will
   * place the original path before rewrite into the :ref:`x-envoy-original-path
   * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
   * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`
   * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`,
   * or :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;` may be specified.
   * .. attention::
   *   Pay careful attention to the use of trailing slashes in the
   *   :ref:`route's match &lt;envoy_v3_api_field_config.route.v3.Route.match&gt;` prefix value.
   *   Stripping a prefix from a path requires multiple Routes to handle all cases. For example,
   *   rewriting ``/prefix`` to ``/`` and ``/prefix/etc`` to ``/etc`` cannot be done in a single
   *   :ref:`Route &lt;envoy_v3_api_msg_config.route.v3.Route&gt;`, as shown by the below config entries:
   *   .. code-block:: yaml
   *     - match:
   *         prefix: "/prefix/"
   *       route:
   *         prefix_rewrite: "/"
   *     - match:
   *         prefix: "/prefix"
   *       route:
   *         prefix_rewrite: "/"
   *   Having above entries in the config, requests to ``/prefix`` will be stripped to ``/``, while
   *   requests to ``/prefix/etc`` will be stripped to ``/etc``.
   * </pre>
   *
   * <code>string prefix_rewrite = 5 [(.validate.rules) = { ... }</code>
   * @return The prefixRewrite.
   */
  @java.lang.Override
  public java.lang.String getPrefixRewrite() {
    java.lang.Object ref = prefixRewrite_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      prefixRewrite_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Indicates that during forwarding, the matched prefix (or path) should be
   * swapped with this value. This option allows application URLs to be rooted
   * at a different path from those exposed at the reverse proxy layer. The router filter will
   * place the original path before rewrite into the :ref:`x-envoy-original-path
   * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
   * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`
   * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`,
   * or :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;` may be specified.
   * .. attention::
   *   Pay careful attention to the use of trailing slashes in the
   *   :ref:`route's match &lt;envoy_v3_api_field_config.route.v3.Route.match&gt;` prefix value.
   *   Stripping a prefix from a path requires multiple Routes to handle all cases. For example,
   *   rewriting ``/prefix`` to ``/`` and ``/prefix/etc`` to ``/etc`` cannot be done in a single
   *   :ref:`Route &lt;envoy_v3_api_msg_config.route.v3.Route&gt;`, as shown by the below config entries:
   *   .. code-block:: yaml
   *     - match:
   *         prefix: "/prefix/"
   *       route:
   *         prefix_rewrite: "/"
   *     - match:
   *         prefix: "/prefix"
   *       route:
   *         prefix_rewrite: "/"
   *   Having above entries in the config, requests to ``/prefix`` will be stripped to ``/``, while
   *   requests to ``/prefix/etc`` will be stripped to ``/etc``.
   * </pre>
   *
   * <code>string prefix_rewrite = 5 [(.validate.rules) = { ... }</code>
   * @return The bytes for prefixRewrite.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPrefixRewriteBytes() {
    java.lang.Object ref = prefixRewrite_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      prefixRewrite_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REGEX_REWRITE_FIELD_NUMBER = 32;
  private io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute regexRewrite_;
  /**
   * <pre>
   * Indicates that during forwarding, portions of the path that match the
   * pattern should be rewritten, even allowing the substitution of capture
   * groups from the pattern into the new path as specified by the rewrite
   * substitution string. This is useful to allow application paths to be
   * rewritten in a way that is aware of segments with variable content like
   * identifiers. The router filter will place the original path as it was
   * before the rewrite into the :ref:`x-envoy-original-path
   * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
   * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`,
   * :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;`, or
   * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`]
   * may be specified.
   * Examples using Google's `RE2 &lt;https://github.com/google/re2&gt;`_ engine:
   * * The path pattern ``^/service/([^/]+)(/.*)$`` paired with a substitution
   *   string of ``&#92;2/instance/&#92;1`` would transform ``/service/foo/v1/api``
   *   into ``/v1/api/instance/foo``.
   * * The pattern ``one`` paired with a substitution string of ``two`` would
   *   transform ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/two/zzz``.
   * * The pattern ``^(.*?)one(.*)$`` paired with a substitution string of
   *   ``&#92;1two&#92;2`` would replace only the first occurrence of ``one``,
   *   transforming path ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/one/zzz``.
   * * The pattern ``(?i)/xxx/`` paired with a substitution string of ``/yyy/``
   *   would do a case-insensitive match and transform path ``/aaa/XxX/bbb`` to
   *   ``/aaa/yyy/bbb``.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 32;</code>
   * @return Whether the regexRewrite field is set.
   */
  @java.lang.Override
  public boolean hasRegexRewrite() {
    return regexRewrite_ != null;
  }
  /**
   * <pre>
   * Indicates that during forwarding, portions of the path that match the
   * pattern should be rewritten, even allowing the substitution of capture
   * groups from the pattern into the new path as specified by the rewrite
   * substitution string. This is useful to allow application paths to be
   * rewritten in a way that is aware of segments with variable content like
   * identifiers. The router filter will place the original path as it was
   * before the rewrite into the :ref:`x-envoy-original-path
   * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
   * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`,
   * :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;`, or
   * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`]
   * may be specified.
   * Examples using Google's `RE2 &lt;https://github.com/google/re2&gt;`_ engine:
   * * The path pattern ``^/service/([^/]+)(/.*)$`` paired with a substitution
   *   string of ``&#92;2/instance/&#92;1`` would transform ``/service/foo/v1/api``
   *   into ``/v1/api/instance/foo``.
   * * The pattern ``one`` paired with a substitution string of ``two`` would
   *   transform ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/two/zzz``.
   * * The pattern ``^(.*?)one(.*)$`` paired with a substitution string of
   *   ``&#92;1two&#92;2`` would replace only the first occurrence of ``one``,
   *   transforming path ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/one/zzz``.
   * * The pattern ``(?i)/xxx/`` paired with a substitution string of ``/yyy/``
   *   would do a case-insensitive match and transform path ``/aaa/XxX/bbb`` to
   *   ``/aaa/yyy/bbb``.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 32;</code>
   * @return The regexRewrite.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute getRegexRewrite() {
    return regexRewrite_ == null ? io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance() : regexRewrite_;
  }
  /**
   * <pre>
   * Indicates that during forwarding, portions of the path that match the
   * pattern should be rewritten, even allowing the substitution of capture
   * groups from the pattern into the new path as specified by the rewrite
   * substitution string. This is useful to allow application paths to be
   * rewritten in a way that is aware of segments with variable content like
   * identifiers. The router filter will place the original path as it was
   * before the rewrite into the :ref:`x-envoy-original-path
   * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
   * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`,
   * :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;`, or
   * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`]
   * may be specified.
   * Examples using Google's `RE2 &lt;https://github.com/google/re2&gt;`_ engine:
   * * The path pattern ``^/service/([^/]+)(/.*)$`` paired with a substitution
   *   string of ``&#92;2/instance/&#92;1`` would transform ``/service/foo/v1/api``
   *   into ``/v1/api/instance/foo``.
   * * The pattern ``one`` paired with a substitution string of ``two`` would
   *   transform ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/two/zzz``.
   * * The pattern ``^(.*?)one(.*)$`` paired with a substitution string of
   *   ``&#92;1two&#92;2`` would replace only the first occurrence of ``one``,
   *   transforming path ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/one/zzz``.
   * * The pattern ``(?i)/xxx/`` paired with a substitution string of ``/yyy/``
   *   would do a case-insensitive match and transform path ``/aaa/XxX/bbb`` to
   *   ``/aaa/yyy/bbb``.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 32;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder getRegexRewriteOrBuilder() {
    return regexRewrite_ == null ? io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance() : regexRewrite_;
  }

  public static final int PATH_REWRITE_POLICY_FIELD_NUMBER = 41;
  private io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig pathRewritePolicy_;
  /**
   * <pre>
   * [#extension-category: envoy.path.rewrite]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig path_rewrite_policy = 41;</code>
   * @return Whether the pathRewritePolicy field is set.
   */
  @java.lang.Override
  public boolean hasPathRewritePolicy() {
    return pathRewritePolicy_ != null;
  }
  /**
   * <pre>
   * [#extension-category: envoy.path.rewrite]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig path_rewrite_policy = 41;</code>
   * @return The pathRewritePolicy.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig getPathRewritePolicy() {
    return pathRewritePolicy_ == null ? io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance() : pathRewritePolicy_;
  }
  /**
   * <pre>
   * [#extension-category: envoy.path.rewrite]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig path_rewrite_policy = 41;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder getPathRewritePolicyOrBuilder() {
    return pathRewritePolicy_ == null ? io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance() : pathRewritePolicy_;
  }

  public static final int HOST_REWRITE_LITERAL_FIELD_NUMBER = 6;
  /**
   * <pre>
   * Indicates that during forwarding, the host header will be swapped with
   * this value. Using this option will append the
   * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
   * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
   * is set.
   * </pre>
   *
   * <code>string host_rewrite_literal = 6 [(.validate.rules) = { ... }</code>
   * @return Whether the hostRewriteLiteral field is set.
   */
  public boolean hasHostRewriteLiteral() {
    return hostRewriteSpecifierCase_ == 6;
  }
  /**
   * <pre>
   * Indicates that during forwarding, the host header will be swapped with
   * this value. Using this option will append the
   * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
   * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
   * is set.
   * </pre>
   *
   * <code>string host_rewrite_literal = 6 [(.validate.rules) = { ... }</code>
   * @return The hostRewriteLiteral.
   */
  public java.lang.String getHostRewriteLiteral() {
    java.lang.Object ref = "";
    if (hostRewriteSpecifierCase_ == 6) {
      ref = hostRewriteSpecifier_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (hostRewriteSpecifierCase_ == 6) {
        hostRewriteSpecifier_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Indicates that during forwarding, the host header will be swapped with
   * this value. Using this option will append the
   * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
   * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
   * is set.
   * </pre>
   *
   * <code>string host_rewrite_literal = 6 [(.validate.rules) = { ... }</code>
   * @return The bytes for hostRewriteLiteral.
   */
  public com.google.protobuf.ByteString
      getHostRewriteLiteralBytes() {
    java.lang.Object ref = "";
    if (hostRewriteSpecifierCase_ == 6) {
      ref = hostRewriteSpecifier_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (hostRewriteSpecifierCase_ == 6) {
        hostRewriteSpecifier_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int AUTO_HOST_REWRITE_FIELD_NUMBER = 7;
  /**
   * <pre>
   * Indicates that during forwarding, the host header will be swapped with
   * the hostname of the upstream host chosen by the cluster manager. This
   * option is applicable only when the destination cluster for a route is of
   * type ``strict_dns`` or ``logical_dns``. Setting this to true with other cluster types
   * has no effect. Using this option will append the
   * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
   * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
   * is set.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue auto_host_rewrite = 7;</code>
   * @return Whether the autoHostRewrite field is set.
   */
  @java.lang.Override
  public boolean hasAutoHostRewrite() {
    return hostRewriteSpecifierCase_ == 7;
  }
  /**
   * <pre>
   * Indicates that during forwarding, the host header will be swapped with
   * the hostname of the upstream host chosen by the cluster manager. This
   * option is applicable only when the destination cluster for a route is of
   * type ``strict_dns`` or ``logical_dns``. Setting this to true with other cluster types
   * has no effect. Using this option will append the
   * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
   * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
   * is set.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue auto_host_rewrite = 7;</code>
   * @return The autoHostRewrite.
   */
  @java.lang.Override
  public com.google.protobuf.BoolValue getAutoHostRewrite() {
    if (hostRewriteSpecifierCase_ == 7) {
       return (com.google.protobuf.BoolValue) hostRewriteSpecifier_;
    }
    return com.google.protobuf.BoolValue.getDefaultInstance();
  }
  /**
   * <pre>
   * Indicates that during forwarding, the host header will be swapped with
   * the hostname of the upstream host chosen by the cluster manager. This
   * option is applicable only when the destination cluster for a route is of
   * type ``strict_dns`` or ``logical_dns``. Setting this to true with other cluster types
   * has no effect. Using this option will append the
   * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
   * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
   * is set.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue auto_host_rewrite = 7;</code>
   */
  @java.lang.Override
  public com.google.protobuf.BoolValueOrBuilder getAutoHostRewriteOrBuilder() {
    if (hostRewriteSpecifierCase_ == 7) {
       return (com.google.protobuf.BoolValue) hostRewriteSpecifier_;
    }
    return com.google.protobuf.BoolValue.getDefaultInstance();
  }

  public static final int HOST_REWRITE_HEADER_FIELD_NUMBER = 29;
  /**
   * <pre>
   * Indicates that during forwarding, the host header will be swapped with the content of given
   * downstream or :ref:`custom &lt;config_http_conn_man_headers_custom_request_headers&gt;` header.
   * If header value is empty, host header is left intact. Using this option will append the
   * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
   * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
   * is set.
   * .. attention::
   *   Pay attention to the potential security implications of using this option. Provided header
   *   must come from trusted source.
   * .. note::
   *   If the header appears multiple times only the first value is used.
   * </pre>
   *
   * <code>string host_rewrite_header = 29 [(.validate.rules) = { ... }</code>
   * @return Whether the hostRewriteHeader field is set.
   */
  public boolean hasHostRewriteHeader() {
    return hostRewriteSpecifierCase_ == 29;
  }
  /**
   * <pre>
   * Indicates that during forwarding, the host header will be swapped with the content of given
   * downstream or :ref:`custom &lt;config_http_conn_man_headers_custom_request_headers&gt;` header.
   * If header value is empty, host header is left intact. Using this option will append the
   * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
   * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
   * is set.
   * .. attention::
   *   Pay attention to the potential security implications of using this option. Provided header
   *   must come from trusted source.
   * .. note::
   *   If the header appears multiple times only the first value is used.
   * </pre>
   *
   * <code>string host_rewrite_header = 29 [(.validate.rules) = { ... }</code>
   * @return The hostRewriteHeader.
   */
  public java.lang.String getHostRewriteHeader() {
    java.lang.Object ref = "";
    if (hostRewriteSpecifierCase_ == 29) {
      ref = hostRewriteSpecifier_;
    }
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (hostRewriteSpecifierCase_ == 29) {
        hostRewriteSpecifier_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * Indicates that during forwarding, the host header will be swapped with the content of given
   * downstream or :ref:`custom &lt;config_http_conn_man_headers_custom_request_headers&gt;` header.
   * If header value is empty, host header is left intact. Using this option will append the
   * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
   * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
   * is set.
   * .. attention::
   *   Pay attention to the potential security implications of using this option. Provided header
   *   must come from trusted source.
   * .. note::
   *   If the header appears multiple times only the first value is used.
   * </pre>
   *
   * <code>string host_rewrite_header = 29 [(.validate.rules) = { ... }</code>
   * @return The bytes for hostRewriteHeader.
   */
  public com.google.protobuf.ByteString
      getHostRewriteHeaderBytes() {
    java.lang.Object ref = "";
    if (hostRewriteSpecifierCase_ == 29) {
      ref = hostRewriteSpecifier_;
    }
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      if (hostRewriteSpecifierCase_ == 29) {
        hostRewriteSpecifier_ = b;
      }
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HOST_REWRITE_PATH_REGEX_FIELD_NUMBER = 35;
  /**
   * <pre>
   * Indicates that during forwarding, the host header will be swapped with
   * the result of the regex substitution executed on path value with query and fragment removed.
   * This is useful for transitioning variable content between path segment and subdomain.
   * Using this option will append the
   * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
   * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
   * is set.
   * For example with the following config:
   *   .. code-block:: yaml
   *     host_rewrite_path_regex:
   *       pattern:
   *         google_re2: {}
   *         regex: "^/(.+)/.+$"
   *       substitution: &#92;1
   * Would rewrite the host header to ``envoyproxy.io`` given the path ``/envoyproxy.io/some/path``.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute host_rewrite_path_regex = 35;</code>
   * @return Whether the hostRewritePathRegex field is set.
   */
  @java.lang.Override
  public boolean hasHostRewritePathRegex() {
    return hostRewriteSpecifierCase_ == 35;
  }
  /**
   * <pre>
   * Indicates that during forwarding, the host header will be swapped with
   * the result of the regex substitution executed on path value with query and fragment removed.
   * This is useful for transitioning variable content between path segment and subdomain.
   * Using this option will append the
   * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
   * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
   * is set.
   * For example with the following config:
   *   .. code-block:: yaml
   *     host_rewrite_path_regex:
   *       pattern:
   *         google_re2: {}
   *         regex: "^/(.+)/.+$"
   *       substitution: &#92;1
   * Would rewrite the host header to ``envoyproxy.io`` given the path ``/envoyproxy.io/some/path``.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute host_rewrite_path_regex = 35;</code>
   * @return The hostRewritePathRegex.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute getHostRewritePathRegex() {
    if (hostRewriteSpecifierCase_ == 35) {
       return (io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute) hostRewriteSpecifier_;
    }
    return io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance();
  }
  /**
   * <pre>
   * Indicates that during forwarding, the host header will be swapped with
   * the result of the regex substitution executed on path value with query and fragment removed.
   * This is useful for transitioning variable content between path segment and subdomain.
   * Using this option will append the
   * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
   * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
   * is set.
   * For example with the following config:
   *   .. code-block:: yaml
   *     host_rewrite_path_regex:
   *       pattern:
   *         google_re2: {}
   *         regex: "^/(.+)/.+$"
   *       substitution: &#92;1
   * Would rewrite the host header to ``envoyproxy.io`` given the path ``/envoyproxy.io/some/path``.
   * </pre>
   *
   * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute host_rewrite_path_regex = 35;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder getHostRewritePathRegexOrBuilder() {
    if (hostRewriteSpecifierCase_ == 35) {
       return (io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute) hostRewriteSpecifier_;
    }
    return io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance();
  }

  public static final int APPEND_X_FORWARDED_HOST_FIELD_NUMBER = 38;
  private boolean appendXForwardedHost_ = false;
  /**
   * <pre>
   * If set, then a host rewrite action (one of
   * :ref:`host_rewrite_literal &lt;envoy_v3_api_field_config.route.v3.RouteAction.host_rewrite_literal&gt;`,
   * :ref:`auto_host_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.auto_host_rewrite&gt;`,
   * :ref:`host_rewrite_header &lt;envoy_v3_api_field_config.route.v3.RouteAction.host_rewrite_header&gt;`, or
   * :ref:`host_rewrite_path_regex &lt;envoy_v3_api_field_config.route.v3.RouteAction.host_rewrite_path_regex&gt;`)
   * causes the original value of the host header, if any, to be appended to the
   * :ref:`config_http_conn_man_headers_x-forwarded-host` HTTP header.
   * </pre>
   *
   * <code>bool append_x_forwarded_host = 38;</code>
   * @return The appendXForwardedHost.
   */
  @java.lang.Override
  public boolean getAppendXForwardedHost() {
    return appendXForwardedHost_;
  }

  public static final int TIMEOUT_FIELD_NUMBER = 8;
  private com.google.protobuf.Duration timeout_;
  /**
   * <pre>
   * Specifies the upstream timeout for the route. If not specified, the default is 15s. This
   * spans between the point at which the entire downstream request (i.e. end-of-stream) has been
   * processed and when the upstream response has been completely processed. A value of 0 will
   * disable the route's timeout.
   * .. note::
   *   This timeout includes all retries. See also
   *   :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
   *   :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
   *   :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 8;</code>
   * @return Whether the timeout field is set.
   */
  @java.lang.Override
  public boolean hasTimeout() {
    return timeout_ != null;
  }
  /**
   * <pre>
   * Specifies the upstream timeout for the route. If not specified, the default is 15s. This
   * spans between the point at which the entire downstream request (i.e. end-of-stream) has been
   * processed and when the upstream response has been completely processed. A value of 0 will
   * disable the route's timeout.
   * .. note::
   *   This timeout includes all retries. See also
   *   :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
   *   :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
   *   :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 8;</code>
   * @return The timeout.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getTimeout() {
    return timeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : timeout_;
  }
  /**
   * <pre>
   * Specifies the upstream timeout for the route. If not specified, the default is 15s. This
   * spans between the point at which the entire downstream request (i.e. end-of-stream) has been
   * processed and when the upstream response has been completely processed. A value of 0 will
   * disable the route's timeout.
   * .. note::
   *   This timeout includes all retries. See also
   *   :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
   *   :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
   *   :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 8;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder() {
    return timeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : timeout_;
  }

  public static final int IDLE_TIMEOUT_FIELD_NUMBER = 24;
  private com.google.protobuf.Duration idleTimeout_;
  /**
   * <pre>
   * Specifies the idle timeout for the route. If not specified, there is no per-route idle timeout,
   * although the connection manager wide :ref:`stream_idle_timeout
   * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.stream_idle_timeout&gt;`
   * will still apply. A value of 0 will completely disable the route's idle timeout, even if a
   * connection manager stream idle timeout is configured.
   * The idle timeout is distinct to :ref:`timeout
   * &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, which provides an upper bound
   * on the upstream response time; :ref:`idle_timeout
   * &lt;envoy_v3_api_field_config.route.v3.RouteAction.idle_timeout&gt;` instead bounds the amount
   * of time the request's stream may be idle.
   * After header decoding, the idle timeout will apply on downstream and
   * upstream request events. Each time an encode/decode event for headers or
   * data is processed for the stream, the timer will be reset. If the timeout
   * fires, the stream is terminated with a 408 Request Timeout error code if no
   * upstream response header has been received, otherwise a stream reset
   * occurs.
   * If the :ref:`overload action &lt;config_overload_manager_overload_actions&gt;` "envoy.overload_actions.reduce_timeouts"
   * is configured, this timeout is scaled according to the value for
   * :ref:`HTTP_DOWNSTREAM_STREAM_IDLE &lt;envoy_v3_api_enum_value_config.overload.v3.ScaleTimersOverloadActionConfig.TimerType.HTTP_DOWNSTREAM_STREAM_IDLE&gt;`.
   * </pre>
   *
   * <code>.google.protobuf.Duration idle_timeout = 24;</code>
   * @return Whether the idleTimeout field is set.
   */
  @java.lang.Override
  public boolean hasIdleTimeout() {
    return idleTimeout_ != null;
  }
  /**
   * <pre>
   * Specifies the idle timeout for the route. If not specified, there is no per-route idle timeout,
   * although the connection manager wide :ref:`stream_idle_timeout
   * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.stream_idle_timeout&gt;`
   * will still apply. A value of 0 will completely disable the route's idle timeout, even if a
   * connection manager stream idle timeout is configured.
   * The idle timeout is distinct to :ref:`timeout
   * &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, which provides an upper bound
   * on the upstream response time; :ref:`idle_timeout
   * &lt;envoy_v3_api_field_config.route.v3.RouteAction.idle_timeout&gt;` instead bounds the amount
   * of time the request's stream may be idle.
   * After header decoding, the idle timeout will apply on downstream and
   * upstream request events. Each time an encode/decode event for headers or
   * data is processed for the stream, the timer will be reset. If the timeout
   * fires, the stream is terminated with a 408 Request Timeout error code if no
   * upstream response header has been received, otherwise a stream reset
   * occurs.
   * If the :ref:`overload action &lt;config_overload_manager_overload_actions&gt;` "envoy.overload_actions.reduce_timeouts"
   * is configured, this timeout is scaled according to the value for
   * :ref:`HTTP_DOWNSTREAM_STREAM_IDLE &lt;envoy_v3_api_enum_value_config.overload.v3.ScaleTimersOverloadActionConfig.TimerType.HTTP_DOWNSTREAM_STREAM_IDLE&gt;`.
   * </pre>
   *
   * <code>.google.protobuf.Duration idle_timeout = 24;</code>
   * @return The idleTimeout.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getIdleTimeout() {
    return idleTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : idleTimeout_;
  }
  /**
   * <pre>
   * Specifies the idle timeout for the route. If not specified, there is no per-route idle timeout,
   * although the connection manager wide :ref:`stream_idle_timeout
   * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.stream_idle_timeout&gt;`
   * will still apply. A value of 0 will completely disable the route's idle timeout, even if a
   * connection manager stream idle timeout is configured.
   * The idle timeout is distinct to :ref:`timeout
   * &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, which provides an upper bound
   * on the upstream response time; :ref:`idle_timeout
   * &lt;envoy_v3_api_field_config.route.v3.RouteAction.idle_timeout&gt;` instead bounds the amount
   * of time the request's stream may be idle.
   * After header decoding, the idle timeout will apply on downstream and
   * upstream request events. Each time an encode/decode event for headers or
   * data is processed for the stream, the timer will be reset. If the timeout
   * fires, the stream is terminated with a 408 Request Timeout error code if no
   * upstream response header has been received, otherwise a stream reset
   * occurs.
   * If the :ref:`overload action &lt;config_overload_manager_overload_actions&gt;` "envoy.overload_actions.reduce_timeouts"
   * is configured, this timeout is scaled according to the value for
   * :ref:`HTTP_DOWNSTREAM_STREAM_IDLE &lt;envoy_v3_api_enum_value_config.overload.v3.ScaleTimersOverloadActionConfig.TimerType.HTTP_DOWNSTREAM_STREAM_IDLE&gt;`.
   * </pre>
   *
   * <code>.google.protobuf.Duration idle_timeout = 24;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getIdleTimeoutOrBuilder() {
    return idleTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : idleTimeout_;
  }

  public static final int EARLY_DATA_POLICY_FIELD_NUMBER = 40;
  private io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig earlyDataPolicy_;
  /**
   * <pre>
   * Specifies how to send request over TLS early data.
   * If absent, allows `safe HTTP requests &lt;https://www.rfc-editor.org/rfc/rfc7231#section-4.2.1&gt;`_ to be sent on early data.
   * [#extension-category: envoy.route.early_data_policy]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig early_data_policy = 40;</code>
   * @return Whether the earlyDataPolicy field is set.
   */
  @java.lang.Override
  public boolean hasEarlyDataPolicy() {
    return earlyDataPolicy_ != null;
  }
  /**
   * <pre>
   * Specifies how to send request over TLS early data.
   * If absent, allows `safe HTTP requests &lt;https://www.rfc-editor.org/rfc/rfc7231#section-4.2.1&gt;`_ to be sent on early data.
   * [#extension-category: envoy.route.early_data_policy]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig early_data_policy = 40;</code>
   * @return The earlyDataPolicy.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig getEarlyDataPolicy() {
    return earlyDataPolicy_ == null ? io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance() : earlyDataPolicy_;
  }
  /**
   * <pre>
   * Specifies how to send request over TLS early data.
   * If absent, allows `safe HTTP requests &lt;https://www.rfc-editor.org/rfc/rfc7231#section-4.2.1&gt;`_ to be sent on early data.
   * [#extension-category: envoy.route.early_data_policy]
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig early_data_policy = 40;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder getEarlyDataPolicyOrBuilder() {
    return earlyDataPolicy_ == null ? io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance() : earlyDataPolicy_;
  }

  public static final int RETRY_POLICY_FIELD_NUMBER = 9;
  private io.envoyproxy.envoy.config.route.v3.RetryPolicy retryPolicy_;
  /**
   * <pre>
   * Indicates that the route has a retry policy. Note that if this is set,
   * it'll take precedence over the virtual host level retry policy entirely
   * (e.g.: policies are not merged, most internal one becomes the enforced policy).
   * </pre>
   *
   * <code>.envoy.config.route.v3.RetryPolicy retry_policy = 9;</code>
   * @return Whether the retryPolicy field is set.
   */
  @java.lang.Override
  public boolean hasRetryPolicy() {
    return retryPolicy_ != null;
  }
  /**
   * <pre>
   * Indicates that the route has a retry policy. Note that if this is set,
   * it'll take precedence over the virtual host level retry policy entirely
   * (e.g.: policies are not merged, most internal one becomes the enforced policy).
   * </pre>
   *
   * <code>.envoy.config.route.v3.RetryPolicy retry_policy = 9;</code>
   * @return The retryPolicy.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.RetryPolicy getRetryPolicy() {
    return retryPolicy_ == null ? io.envoyproxy.envoy.config.route.v3.RetryPolicy.getDefaultInstance() : retryPolicy_;
  }
  /**
   * <pre>
   * Indicates that the route has a retry policy. Note that if this is set,
   * it'll take precedence over the virtual host level retry policy entirely
   * (e.g.: policies are not merged, most internal one becomes the enforced policy).
   * </pre>
   *
   * <code>.envoy.config.route.v3.RetryPolicy retry_policy = 9;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.RetryPolicyOrBuilder getRetryPolicyOrBuilder() {
    return retryPolicy_ == null ? io.envoyproxy.envoy.config.route.v3.RetryPolicy.getDefaultInstance() : retryPolicy_;
  }

  public static final int RETRY_POLICY_TYPED_CONFIG_FIELD_NUMBER = 33;
  private com.google.protobuf.Any retryPolicyTypedConfig_;
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Specifies the configuration for retry policy extension. Note that if this is set, it'll take
   * precedence over the virtual host level retry policy entirely (e.g.: policies are not merged,
   * most internal one becomes the enforced policy). :ref:`Retry policy &lt;envoy_v3_api_field_config.route.v3.VirtualHost.retry_policy&gt;`
   * should not be set if this field is used.
   * </pre>
   *
   * <code>.google.protobuf.Any retry_policy_typed_config = 33;</code>
   * @return Whether the retryPolicyTypedConfig field is set.
   */
  @java.lang.Override
  public boolean hasRetryPolicyTypedConfig() {
    return retryPolicyTypedConfig_ != null;
  }
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Specifies the configuration for retry policy extension. Note that if this is set, it'll take
   * precedence over the virtual host level retry policy entirely (e.g.: policies are not merged,
   * most internal one becomes the enforced policy). :ref:`Retry policy &lt;envoy_v3_api_field_config.route.v3.VirtualHost.retry_policy&gt;`
   * should not be set if this field is used.
   * </pre>
   *
   * <code>.google.protobuf.Any retry_policy_typed_config = 33;</code>
   * @return The retryPolicyTypedConfig.
   */
  @java.lang.Override
  public com.google.protobuf.Any getRetryPolicyTypedConfig() {
    return retryPolicyTypedConfig_ == null ? com.google.protobuf.Any.getDefaultInstance() : retryPolicyTypedConfig_;
  }
  /**
   * <pre>
   * [#not-implemented-hide:]
   * Specifies the configuration for retry policy extension. Note that if this is set, it'll take
   * precedence over the virtual host level retry policy entirely (e.g.: policies are not merged,
   * most internal one becomes the enforced policy). :ref:`Retry policy &lt;envoy_v3_api_field_config.route.v3.VirtualHost.retry_policy&gt;`
   * should not be set if this field is used.
   * </pre>
   *
   * <code>.google.protobuf.Any retry_policy_typed_config = 33;</code>
   */
  @java.lang.Override
  public com.google.protobuf.AnyOrBuilder getRetryPolicyTypedConfigOrBuilder() {
    return retryPolicyTypedConfig_ == null ? com.google.protobuf.Any.getDefaultInstance() : retryPolicyTypedConfig_;
  }

  public static final int REQUEST_MIRROR_POLICIES_FIELD_NUMBER = 30;
  @SuppressWarnings("serial")
  private java.util.List<io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy> requestMirrorPolicies_;
  /**
   * <pre>
   * Specify a set of route request mirroring policies.
   * It takes precedence over the virtual host and route config mirror policy entirely.
   * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy> getRequestMirrorPoliciesList() {
    return requestMirrorPolicies_;
  }
  /**
   * <pre>
   * Specify a set of route request mirroring policies.
   * It takes precedence over the virtual host and route config mirror policy entirely.
   * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicyOrBuilder> 
      getRequestMirrorPoliciesOrBuilderList() {
    return requestMirrorPolicies_;
  }
  /**
   * <pre>
   * Specify a set of route request mirroring policies.
   * It takes precedence over the virtual host and route config mirror policy entirely.
   * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
   */
  @java.lang.Override
  public int getRequestMirrorPoliciesCount() {
    return requestMirrorPolicies_.size();
  }
  /**
   * <pre>
   * Specify a set of route request mirroring policies.
   * It takes precedence over the virtual host and route config mirror policy entirely.
   * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy getRequestMirrorPolicies(int index) {
    return requestMirrorPolicies_.get(index);
  }
  /**
   * <pre>
   * Specify a set of route request mirroring policies.
   * It takes precedence over the virtual host and route config mirror policy entirely.
   * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicyOrBuilder getRequestMirrorPoliciesOrBuilder(
      int index) {
    return requestMirrorPolicies_.get(index);
  }

  public static final int PRIORITY_FIELD_NUMBER = 11;
  private int priority_ = 0;
  /**
   * <pre>
   * Optionally specifies the :ref:`routing priority &lt;arch_overview_http_routing_priority&gt;`.
   * </pre>
   *
   * <code>.envoy.config.core.v3.RoutingPriority priority = 11 [(.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for priority.
   */
  @java.lang.Override public int getPriorityValue() {
    return priority_;
  }
  /**
   * <pre>
   * Optionally specifies the :ref:`routing priority &lt;arch_overview_http_routing_priority&gt;`.
   * </pre>
   *
   * <code>.envoy.config.core.v3.RoutingPriority priority = 11 [(.validate.rules) = { ... }</code>
   * @return The priority.
   */
  @java.lang.Override public io.envoyproxy.envoy.config.core.v3.RoutingPriority getPriority() {
    io.envoyproxy.envoy.config.core.v3.RoutingPriority result = io.envoyproxy.envoy.config.core.v3.RoutingPriority.forNumber(priority_);
    return result == null ? io.envoyproxy.envoy.config.core.v3.RoutingPriority.UNRECOGNIZED : result;
  }

  public static final int RATE_LIMITS_FIELD_NUMBER = 13;
  @SuppressWarnings("serial")
  private java.util.List<io.envoyproxy.envoy.config.route.v3.RateLimit> rateLimits_;
  /**
   * <pre>
   * Specifies a set of rate limit configurations that could be applied to the
   * route.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.route.v3.RateLimit> getRateLimitsList() {
    return rateLimits_;
  }
  /**
   * <pre>
   * Specifies a set of rate limit configurations that could be applied to the
   * route.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.route.v3.RateLimitOrBuilder> 
      getRateLimitsOrBuilderList() {
    return rateLimits_;
  }
  /**
   * <pre>
   * Specifies a set of rate limit configurations that could be applied to the
   * route.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
   */
  @java.lang.Override
  public int getRateLimitsCount() {
    return rateLimits_.size();
  }
  /**
   * <pre>
   * Specifies a set of rate limit configurations that could be applied to the
   * route.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.RateLimit getRateLimits(int index) {
    return rateLimits_.get(index);
  }
  /**
   * <pre>
   * Specifies a set of rate limit configurations that could be applied to the
   * route.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.RateLimitOrBuilder getRateLimitsOrBuilder(
      int index) {
    return rateLimits_.get(index);
  }

  public static final int INCLUDE_VH_RATE_LIMITS_FIELD_NUMBER = 14;
  private com.google.protobuf.BoolValue includeVhRateLimits_;
  /**
   * <pre>
   * Specifies if the rate limit filter should include the virtual host rate
   * limits. By default, if the route configured rate limits, the virtual host
   * :ref:`rate_limits &lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` are not applied to the
   * request.
   * This field is deprecated. Please use :ref:`vh_rate_limits &lt;envoy_v3_api_field_extensions.filters.http.ratelimit.v3.RateLimitPerRoute.vh_rate_limits&gt;`
   * </pre>
   *
   * <code>.google.protobuf.BoolValue include_vh_rate_limits = 14 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.config.route.v3.RouteAction.include_vh_rate_limits is deprecated.
   *     See envoy/config/route/v3/route_components.proto;l=1260
   * @return Whether the includeVhRateLimits field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasIncludeVhRateLimits() {
    return includeVhRateLimits_ != null;
  }
  /**
   * <pre>
   * Specifies if the rate limit filter should include the virtual host rate
   * limits. By default, if the route configured rate limits, the virtual host
   * :ref:`rate_limits &lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` are not applied to the
   * request.
   * This field is deprecated. Please use :ref:`vh_rate_limits &lt;envoy_v3_api_field_extensions.filters.http.ratelimit.v3.RateLimitPerRoute.vh_rate_limits&gt;`
   * </pre>
   *
   * <code>.google.protobuf.BoolValue include_vh_rate_limits = 14 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.config.route.v3.RouteAction.include_vh_rate_limits is deprecated.
   *     See envoy/config/route/v3/route_components.proto;l=1260
   * @return The includeVhRateLimits.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.BoolValue getIncludeVhRateLimits() {
    return includeVhRateLimits_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : includeVhRateLimits_;
  }
  /**
   * <pre>
   * Specifies if the rate limit filter should include the virtual host rate
   * limits. By default, if the route configured rate limits, the virtual host
   * :ref:`rate_limits &lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` are not applied to the
   * request.
   * This field is deprecated. Please use :ref:`vh_rate_limits &lt;envoy_v3_api_field_extensions.filters.http.ratelimit.v3.RateLimitPerRoute.vh_rate_limits&gt;`
   * </pre>
   *
   * <code>.google.protobuf.BoolValue include_vh_rate_limits = 14 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.BoolValueOrBuilder getIncludeVhRateLimitsOrBuilder() {
    return includeVhRateLimits_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : includeVhRateLimits_;
  }

  public static final int HASH_POLICY_FIELD_NUMBER = 15;
  @SuppressWarnings("serial")
  private java.util.List<io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy> hashPolicy_;
  /**
   * <pre>
   * Specifies a list of hash policies to use for ring hash load balancing. Each
   * hash policy is evaluated individually and the combined result is used to
   * route the request. The method of combination is deterministic such that
   * identical lists of hash policies will produce the same hash. Since a hash
   * policy examines specific parts of a request, it can fail to produce a hash
   * (i.e. if the hashed header is not present). If (and only if) all configured
   * hash policies fail to generate a hash, no hash will be produced for
   * the route. In this case, the behavior is the same as if no hash policies
   * were specified (i.e. the ring hash load balancer will choose a random
   * backend). If a hash policy has the "terminal" attribute set to true, and
   * there is already a hash generated, the hash is returned immediately,
   * ignoring the rest of the hash policy list.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy> getHashPolicyList() {
    return hashPolicy_;
  }
  /**
   * <pre>
   * Specifies a list of hash policies to use for ring hash load balancing. Each
   * hash policy is evaluated individually and the combined result is used to
   * route the request. The method of combination is deterministic such that
   * identical lists of hash policies will produce the same hash. Since a hash
   * policy examines specific parts of a request, it can fail to produce a hash
   * (i.e. if the hashed header is not present). If (and only if) all configured
   * hash policies fail to generate a hash, no hash will be produced for
   * the route. In this case, the behavior is the same as if no hash policies
   * were specified (i.e. the ring hash load balancer will choose a random
   * backend). If a hash policy has the "terminal" attribute set to true, and
   * there is already a hash generated, the hash is returned immediately,
   * ignoring the rest of the hash policy list.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicyOrBuilder> 
      getHashPolicyOrBuilderList() {
    return hashPolicy_;
  }
  /**
   * <pre>
   * Specifies a list of hash policies to use for ring hash load balancing. Each
   * hash policy is evaluated individually and the combined result is used to
   * route the request. The method of combination is deterministic such that
   * identical lists of hash policies will produce the same hash. Since a hash
   * policy examines specific parts of a request, it can fail to produce a hash
   * (i.e. if the hashed header is not present). If (and only if) all configured
   * hash policies fail to generate a hash, no hash will be produced for
   * the route. In this case, the behavior is the same as if no hash policies
   * were specified (i.e. the ring hash load balancer will choose a random
   * backend). If a hash policy has the "terminal" attribute set to true, and
   * there is already a hash generated, the hash is returned immediately,
   * ignoring the rest of the hash policy list.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
   */
  @java.lang.Override
  public int getHashPolicyCount() {
    return hashPolicy_.size();
  }
  /**
   * <pre>
   * Specifies a list of hash policies to use for ring hash load balancing. Each
   * hash policy is evaluated individually and the combined result is used to
   * route the request. The method of combination is deterministic such that
   * identical lists of hash policies will produce the same hash. Since a hash
   * policy examines specific parts of a request, it can fail to produce a hash
   * (i.e. if the hashed header is not present). If (and only if) all configured
   * hash policies fail to generate a hash, no hash will be produced for
   * the route. In this case, the behavior is the same as if no hash policies
   * were specified (i.e. the ring hash load balancer will choose a random
   * backend). If a hash policy has the "terminal" attribute set to true, and
   * there is already a hash generated, the hash is returned immediately,
   * ignoring the rest of the hash policy list.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy getHashPolicy(int index) {
    return hashPolicy_.get(index);
  }
  /**
   * <pre>
   * Specifies a list of hash policies to use for ring hash load balancing. Each
   * hash policy is evaluated individually and the combined result is used to
   * route the request. The method of combination is deterministic such that
   * identical lists of hash policies will produce the same hash. Since a hash
   * policy examines specific parts of a request, it can fail to produce a hash
   * (i.e. if the hashed header is not present). If (and only if) all configured
   * hash policies fail to generate a hash, no hash will be produced for
   * the route. In this case, the behavior is the same as if no hash policies
   * were specified (i.e. the ring hash load balancer will choose a random
   * backend). If a hash policy has the "terminal" attribute set to true, and
   * there is already a hash generated, the hash is returned immediately,
   * ignoring the rest of the hash policy list.
   * </pre>
   *
   * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicyOrBuilder getHashPolicyOrBuilder(
      int index) {
    return hashPolicy_.get(index);
  }

  public static final int CORS_FIELD_NUMBER = 17;
  private io.envoyproxy.envoy.config.route.v3.CorsPolicy cors_;
  /**
   * <pre>
   * Indicates that the route has a CORS policy. This field is ignored if related cors policy is
   * found in the :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
   * :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`.
   * .. attention::
   *   This option has been deprecated. Please use
   *   :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
   *   :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`
   *   to configure the CORS HTTP filter.
   * </pre>
   *
   * <code>.envoy.config.route.v3.CorsPolicy cors = 17 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.config.route.v3.RouteAction.cors is deprecated.
   *     See envoy/config/route/v3/route_components.proto;l=1287
   * @return Whether the cors field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasCors() {
    return cors_ != null;
  }
  /**
   * <pre>
   * Indicates that the route has a CORS policy. This field is ignored if related cors policy is
   * found in the :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
   * :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`.
   * .. attention::
   *   This option has been deprecated. Please use
   *   :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
   *   :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`
   *   to configure the CORS HTTP filter.
   * </pre>
   *
   * <code>.envoy.config.route.v3.CorsPolicy cors = 17 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.config.route.v3.RouteAction.cors is deprecated.
   *     See envoy/config/route/v3/route_components.proto;l=1287
   * @return The cors.
   */
  @java.lang.Override
  @java.lang.Deprecated public io.envoyproxy.envoy.config.route.v3.CorsPolicy getCors() {
    return cors_ == null ? io.envoyproxy.envoy.config.route.v3.CorsPolicy.getDefaultInstance() : cors_;
  }
  /**
   * <pre>
   * Indicates that the route has a CORS policy. This field is ignored if related cors policy is
   * found in the :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
   * :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`.
   * .. attention::
   *   This option has been deprecated. Please use
   *   :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
   *   :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`
   *   to configure the CORS HTTP filter.
   * </pre>
   *
   * <code>.envoy.config.route.v3.CorsPolicy cors = 17 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public io.envoyproxy.envoy.config.route.v3.CorsPolicyOrBuilder getCorsOrBuilder() {
    return cors_ == null ? io.envoyproxy.envoy.config.route.v3.CorsPolicy.getDefaultInstance() : cors_;
  }

  public static final int MAX_GRPC_TIMEOUT_FIELD_NUMBER = 23;
  private com.google.protobuf.Duration maxGrpcTimeout_;
  /**
   * <pre>
   * Deprecated by :ref:`grpc_timeout_header_max &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_max&gt;`
   * If present, and the request is a gRPC request, use the
   * `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_,
   * or its default value (infinity) instead of
   * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, but limit the applied timeout
   * to the maximum value specified here. If configured as 0, the maximum allowed timeout for
   * gRPC requests is infinity. If not configured at all, the ``grpc-timeout`` header is not used
   * and gRPC requests time out like any other requests using
   * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;` or its default.
   * This can be used to prevent unexpected upstream request timeouts due to potentially long
   * time gaps between gRPC request and response in gRPC streaming mode.
   * .. note::
   *    If a timeout is specified using :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`, it takes
   *    precedence over `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, when
   *    both are present. See also
   *    :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
   *    :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
   *    :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
   * </pre>
   *
   * <code>.google.protobuf.Duration max_grpc_timeout = 23 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.config.route.v3.RouteAction.max_grpc_timeout is deprecated.
   *     See envoy/config/route/v3/route_components.proto;l=1309
   * @return Whether the maxGrpcTimeout field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasMaxGrpcTimeout() {
    return maxGrpcTimeout_ != null;
  }
  /**
   * <pre>
   * Deprecated by :ref:`grpc_timeout_header_max &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_max&gt;`
   * If present, and the request is a gRPC request, use the
   * `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_,
   * or its default value (infinity) instead of
   * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, but limit the applied timeout
   * to the maximum value specified here. If configured as 0, the maximum allowed timeout for
   * gRPC requests is infinity. If not configured at all, the ``grpc-timeout`` header is not used
   * and gRPC requests time out like any other requests using
   * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;` or its default.
   * This can be used to prevent unexpected upstream request timeouts due to potentially long
   * time gaps between gRPC request and response in gRPC streaming mode.
   * .. note::
   *    If a timeout is specified using :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`, it takes
   *    precedence over `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, when
   *    both are present. See also
   *    :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
   *    :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
   *    :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
   * </pre>
   *
   * <code>.google.protobuf.Duration max_grpc_timeout = 23 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.config.route.v3.RouteAction.max_grpc_timeout is deprecated.
   *     See envoy/config/route/v3/route_components.proto;l=1309
   * @return The maxGrpcTimeout.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.Duration getMaxGrpcTimeout() {
    return maxGrpcTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : maxGrpcTimeout_;
  }
  /**
   * <pre>
   * Deprecated by :ref:`grpc_timeout_header_max &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_max&gt;`
   * If present, and the request is a gRPC request, use the
   * `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_,
   * or its default value (infinity) instead of
   * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, but limit the applied timeout
   * to the maximum value specified here. If configured as 0, the maximum allowed timeout for
   * gRPC requests is infinity. If not configured at all, the ``grpc-timeout`` header is not used
   * and gRPC requests time out like any other requests using
   * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;` or its default.
   * This can be used to prevent unexpected upstream request timeouts due to potentially long
   * time gaps between gRPC request and response in gRPC streaming mode.
   * .. note::
   *    If a timeout is specified using :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`, it takes
   *    precedence over `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, when
   *    both are present. See also
   *    :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
   *    :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
   *    :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
   * </pre>
   *
   * <code>.google.protobuf.Duration max_grpc_timeout = 23 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.DurationOrBuilder getMaxGrpcTimeoutOrBuilder() {
    return maxGrpcTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : maxGrpcTimeout_;
  }

  public static final int GRPC_TIMEOUT_OFFSET_FIELD_NUMBER = 28;
  private com.google.protobuf.Duration grpcTimeoutOffset_;
  /**
   * <pre>
   * Deprecated by :ref:`grpc_timeout_header_offset &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_offset&gt;`.
   * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by subtracting
   * the provided duration from the header. This is useful in allowing Envoy to set its global
   * timeout to be less than that of the deadline imposed by the calling client, which makes it more
   * likely that Envoy will handle the timeout instead of having the call canceled by the client.
   * The offset will only be applied if the provided grpc_timeout is greater than the offset. This
   * ensures that the offset will only ever decrease the timeout and never set it to 0 (meaning
   * infinity).
   * </pre>
   *
   * <code>.google.protobuf.Duration grpc_timeout_offset = 28 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.config.route.v3.RouteAction.grpc_timeout_offset is deprecated.
   *     See envoy/config/route/v3/route_components.proto;l=1320
   * @return Whether the grpcTimeoutOffset field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasGrpcTimeoutOffset() {
    return grpcTimeoutOffset_ != null;
  }
  /**
   * <pre>
   * Deprecated by :ref:`grpc_timeout_header_offset &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_offset&gt;`.
   * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by subtracting
   * the provided duration from the header. This is useful in allowing Envoy to set its global
   * timeout to be less than that of the deadline imposed by the calling client, which makes it more
   * likely that Envoy will handle the timeout instead of having the call canceled by the client.
   * The offset will only be applied if the provided grpc_timeout is greater than the offset. This
   * ensures that the offset will only ever decrease the timeout and never set it to 0 (meaning
   * infinity).
   * </pre>
   *
   * <code>.google.protobuf.Duration grpc_timeout_offset = 28 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.config.route.v3.RouteAction.grpc_timeout_offset is deprecated.
   *     See envoy/config/route/v3/route_components.proto;l=1320
   * @return The grpcTimeoutOffset.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.Duration getGrpcTimeoutOffset() {
    return grpcTimeoutOffset_ == null ? com.google.protobuf.Duration.getDefaultInstance() : grpcTimeoutOffset_;
  }
  /**
   * <pre>
   * Deprecated by :ref:`grpc_timeout_header_offset &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_offset&gt;`.
   * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by subtracting
   * the provided duration from the header. This is useful in allowing Envoy to set its global
   * timeout to be less than that of the deadline imposed by the calling client, which makes it more
   * likely that Envoy will handle the timeout instead of having the call canceled by the client.
   * The offset will only be applied if the provided grpc_timeout is greater than the offset. This
   * ensures that the offset will only ever decrease the timeout and never set it to 0 (meaning
   * infinity).
   * </pre>
   *
   * <code>.google.protobuf.Duration grpc_timeout_offset = 28 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.DurationOrBuilder getGrpcTimeoutOffsetOrBuilder() {
    return grpcTimeoutOffset_ == null ? com.google.protobuf.Duration.getDefaultInstance() : grpcTimeoutOffset_;
  }

  public static final int UPGRADE_CONFIGS_FIELD_NUMBER = 25;
  @SuppressWarnings("serial")
  private java.util.List<io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig> upgradeConfigs_;
  /**
   * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig> getUpgradeConfigsList() {
    return upgradeConfigs_;
  }
  /**
   * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfigOrBuilder> 
      getUpgradeConfigsOrBuilderList() {
    return upgradeConfigs_;
  }
  /**
   * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
   */
  @java.lang.Override
  public int getUpgradeConfigsCount() {
    return upgradeConfigs_.size();
  }
  /**
   * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig getUpgradeConfigs(int index) {
    return upgradeConfigs_.get(index);
  }
  /**
   * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfigOrBuilder getUpgradeConfigsOrBuilder(
      int index) {
    return upgradeConfigs_.get(index);
  }

  public static final int INTERNAL_REDIRECT_POLICY_FIELD_NUMBER = 34;
  private io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy internalRedirectPolicy_;
  /**
   * <pre>
   * If present, Envoy will try to follow an upstream redirect response instead of proxying the
   * response back to the downstream. An upstream redirect response is defined
   * by :ref:`redirect_response_codes
   * &lt;envoy_v3_api_field_config.route.v3.InternalRedirectPolicy.redirect_response_codes&gt;`.
   * </pre>
   *
   * <code>.envoy.config.route.v3.InternalRedirectPolicy internal_redirect_policy = 34;</code>
   * @return Whether the internalRedirectPolicy field is set.
   */
  @java.lang.Override
  public boolean hasInternalRedirectPolicy() {
    return internalRedirectPolicy_ != null;
  }
  /**
   * <pre>
   * If present, Envoy will try to follow an upstream redirect response instead of proxying the
   * response back to the downstream. An upstream redirect response is defined
   * by :ref:`redirect_response_codes
   * &lt;envoy_v3_api_field_config.route.v3.InternalRedirectPolicy.redirect_response_codes&gt;`.
   * </pre>
   *
   * <code>.envoy.config.route.v3.InternalRedirectPolicy internal_redirect_policy = 34;</code>
   * @return The internalRedirectPolicy.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy getInternalRedirectPolicy() {
    return internalRedirectPolicy_ == null ? io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy.getDefaultInstance() : internalRedirectPolicy_;
  }
  /**
   * <pre>
   * If present, Envoy will try to follow an upstream redirect response instead of proxying the
   * response back to the downstream. An upstream redirect response is defined
   * by :ref:`redirect_response_codes
   * &lt;envoy_v3_api_field_config.route.v3.InternalRedirectPolicy.redirect_response_codes&gt;`.
   * </pre>
   *
   * <code>.envoy.config.route.v3.InternalRedirectPolicy internal_redirect_policy = 34;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicyOrBuilder getInternalRedirectPolicyOrBuilder() {
    return internalRedirectPolicy_ == null ? io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy.getDefaultInstance() : internalRedirectPolicy_;
  }

  public static final int INTERNAL_REDIRECT_ACTION_FIELD_NUMBER = 26;
  private int internalRedirectAction_ = 0;
  /**
   * <code>.envoy.config.route.v3.RouteAction.InternalRedirectAction internal_redirect_action = 26 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.config.route.v3.RouteAction.internal_redirect_action is deprecated.
   *     See envoy/config/route/v3/route_components.proto;l=1331
   * @return The enum numeric value on the wire for internalRedirectAction.
   */
  @java.lang.Override @java.lang.Deprecated public int getInternalRedirectActionValue() {
    return internalRedirectAction_;
  }
  /**
   * <code>.envoy.config.route.v3.RouteAction.InternalRedirectAction internal_redirect_action = 26 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.config.route.v3.RouteAction.internal_redirect_action is deprecated.
   *     See envoy/config/route/v3/route_components.proto;l=1331
   * @return The internalRedirectAction.
   */
  @java.lang.Override @java.lang.Deprecated public io.envoyproxy.envoy.config.route.v3.RouteAction.InternalRedirectAction getInternalRedirectAction() {
    io.envoyproxy.envoy.config.route.v3.RouteAction.InternalRedirectAction result = io.envoyproxy.envoy.config.route.v3.RouteAction.InternalRedirectAction.forNumber(internalRedirectAction_);
    return result == null ? io.envoyproxy.envoy.config.route.v3.RouteAction.InternalRedirectAction.UNRECOGNIZED : result;
  }

  public static final int MAX_INTERNAL_REDIRECTS_FIELD_NUMBER = 31;
  private com.google.protobuf.UInt32Value maxInternalRedirects_;
  /**
   * <pre>
   * An internal redirect is handled, iff the number of previous internal redirects that a
   * downstream request has encountered is lower than this value, and
   * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
   * is set to :ref:`HANDLE_INTERNAL_REDIRECT
   * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.HANDLE_INTERNAL_REDIRECT&gt;`
   * In the case where a downstream request is bounced among multiple routes by internal redirect,
   * the first route that hits this threshold, or has
   * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
   * set to
   * :ref:`PASS_THROUGH_INTERNAL_REDIRECT
   * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.PASS_THROUGH_INTERNAL_REDIRECT&gt;`
   * will pass the redirect back to downstream.
   * If not specified, at most one redirect will be followed.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_internal_redirects = 31 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.config.route.v3.RouteAction.max_internal_redirects is deprecated.
   *     See envoy/config/route/v3/route_components.proto;l=1348
   * @return Whether the maxInternalRedirects field is set.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean hasMaxInternalRedirects() {
    return maxInternalRedirects_ != null;
  }
  /**
   * <pre>
   * An internal redirect is handled, iff the number of previous internal redirects that a
   * downstream request has encountered is lower than this value, and
   * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
   * is set to :ref:`HANDLE_INTERNAL_REDIRECT
   * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.HANDLE_INTERNAL_REDIRECT&gt;`
   * In the case where a downstream request is bounced among multiple routes by internal redirect,
   * the first route that hits this threshold, or has
   * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
   * set to
   * :ref:`PASS_THROUGH_INTERNAL_REDIRECT
   * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.PASS_THROUGH_INTERNAL_REDIRECT&gt;`
   * will pass the redirect back to downstream.
   * If not specified, at most one redirect will be followed.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_internal_redirects = 31 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.config.route.v3.RouteAction.max_internal_redirects is deprecated.
   *     See envoy/config/route/v3/route_components.proto;l=1348
   * @return The maxInternalRedirects.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.UInt32Value getMaxInternalRedirects() {
    return maxInternalRedirects_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxInternalRedirects_;
  }
  /**
   * <pre>
   * An internal redirect is handled, iff the number of previous internal redirects that a
   * downstream request has encountered is lower than this value, and
   * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
   * is set to :ref:`HANDLE_INTERNAL_REDIRECT
   * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.HANDLE_INTERNAL_REDIRECT&gt;`
   * In the case where a downstream request is bounced among multiple routes by internal redirect,
   * the first route that hits this threshold, or has
   * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
   * set to
   * :ref:`PASS_THROUGH_INTERNAL_REDIRECT
   * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.PASS_THROUGH_INTERNAL_REDIRECT&gt;`
   * will pass the redirect back to downstream.
   * If not specified, at most one redirect will be followed.
   * </pre>
   *
   * <code>.google.protobuf.UInt32Value max_internal_redirects = 31 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.UInt32ValueOrBuilder getMaxInternalRedirectsOrBuilder() {
    return maxInternalRedirects_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxInternalRedirects_;
  }

  public static final int HEDGE_POLICY_FIELD_NUMBER = 27;
  private io.envoyproxy.envoy.config.route.v3.HedgePolicy hedgePolicy_;
  /**
   * <pre>
   * Indicates that the route has a hedge policy. Note that if this is set,
   * it'll take precedence over the virtual host level hedge policy entirely
   * (e.g.: policies are not merged, most internal one becomes the enforced policy).
   * </pre>
   *
   * <code>.envoy.config.route.v3.HedgePolicy hedge_policy = 27;</code>
   * @return Whether the hedgePolicy field is set.
   */
  @java.lang.Override
  public boolean hasHedgePolicy() {
    return hedgePolicy_ != null;
  }
  /**
   * <pre>
   * Indicates that the route has a hedge policy. Note that if this is set,
   * it'll take precedence over the virtual host level hedge policy entirely
   * (e.g.: policies are not merged, most internal one becomes the enforced policy).
   * </pre>
   *
   * <code>.envoy.config.route.v3.HedgePolicy hedge_policy = 27;</code>
   * @return The hedgePolicy.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.HedgePolicy getHedgePolicy() {
    return hedgePolicy_ == null ? io.envoyproxy.envoy.config.route.v3.HedgePolicy.getDefaultInstance() : hedgePolicy_;
  }
  /**
   * <pre>
   * Indicates that the route has a hedge policy. Note that if this is set,
   * it'll take precedence over the virtual host level hedge policy entirely
   * (e.g.: policies are not merged, most internal one becomes the enforced policy).
   * </pre>
   *
   * <code>.envoy.config.route.v3.HedgePolicy hedge_policy = 27;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.HedgePolicyOrBuilder getHedgePolicyOrBuilder() {
    return hedgePolicy_ == null ? io.envoyproxy.envoy.config.route.v3.HedgePolicy.getDefaultInstance() : hedgePolicy_;
  }

  public static final int MAX_STREAM_DURATION_FIELD_NUMBER = 36;
  private io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration maxStreamDuration_;
  /**
   * <pre>
   * Specifies the maximum stream duration for this route.
   * </pre>
   *
   * <code>.envoy.config.route.v3.RouteAction.MaxStreamDuration max_stream_duration = 36;</code>
   * @return Whether the maxStreamDuration field is set.
   */
  @java.lang.Override
  public boolean hasMaxStreamDuration() {
    return maxStreamDuration_ != null;
  }
  /**
   * <pre>
   * Specifies the maximum stream duration for this route.
   * </pre>
   *
   * <code>.envoy.config.route.v3.RouteAction.MaxStreamDuration max_stream_duration = 36;</code>
   * @return The maxStreamDuration.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration getMaxStreamDuration() {
    return maxStreamDuration_ == null ? io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration.getDefaultInstance() : maxStreamDuration_;
  }
  /**
   * <pre>
   * Specifies the maximum stream duration for this route.
   * </pre>
   *
   * <code>.envoy.config.route.v3.RouteAction.MaxStreamDuration max_stream_duration = 36;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDurationOrBuilder getMaxStreamDurationOrBuilder() {
    return maxStreamDuration_ == null ? io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration.getDefaultInstance() : maxStreamDuration_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (clusterSpecifierCase_ == 1) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, clusterSpecifier_);
    }
    if (clusterSpecifierCase_ == 2) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, clusterSpecifier_);
    }
    if (clusterSpecifierCase_ == 3) {
      output.writeMessage(3, (io.envoyproxy.envoy.config.route.v3.WeightedCluster) clusterSpecifier_);
    }
    if (metadataMatch_ != null) {
      output.writeMessage(4, getMetadataMatch());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(prefixRewrite_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, prefixRewrite_);
    }
    if (hostRewriteSpecifierCase_ == 6) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, hostRewriteSpecifier_);
    }
    if (hostRewriteSpecifierCase_ == 7) {
      output.writeMessage(7, (com.google.protobuf.BoolValue) hostRewriteSpecifier_);
    }
    if (timeout_ != null) {
      output.writeMessage(8, getTimeout());
    }
    if (retryPolicy_ != null) {
      output.writeMessage(9, getRetryPolicy());
    }
    if (priority_ != io.envoyproxy.envoy.config.core.v3.RoutingPriority.DEFAULT.getNumber()) {
      output.writeEnum(11, priority_);
    }
    for (int i = 0; i < rateLimits_.size(); i++) {
      output.writeMessage(13, rateLimits_.get(i));
    }
    if (includeVhRateLimits_ != null) {
      output.writeMessage(14, getIncludeVhRateLimits());
    }
    for (int i = 0; i < hashPolicy_.size(); i++) {
      output.writeMessage(15, hashPolicy_.get(i));
    }
    if (cors_ != null) {
      output.writeMessage(17, getCors());
    }
    if (clusterNotFoundResponseCode_ != io.envoyproxy.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode.SERVICE_UNAVAILABLE.getNumber()) {
      output.writeEnum(20, clusterNotFoundResponseCode_);
    }
    if (maxGrpcTimeout_ != null) {
      output.writeMessage(23, getMaxGrpcTimeout());
    }
    if (idleTimeout_ != null) {
      output.writeMessage(24, getIdleTimeout());
    }
    for (int i = 0; i < upgradeConfigs_.size(); i++) {
      output.writeMessage(25, upgradeConfigs_.get(i));
    }
    if (internalRedirectAction_ != io.envoyproxy.envoy.config.route.v3.RouteAction.InternalRedirectAction.PASS_THROUGH_INTERNAL_REDIRECT.getNumber()) {
      output.writeEnum(26, internalRedirectAction_);
    }
    if (hedgePolicy_ != null) {
      output.writeMessage(27, getHedgePolicy());
    }
    if (grpcTimeoutOffset_ != null) {
      output.writeMessage(28, getGrpcTimeoutOffset());
    }
    if (hostRewriteSpecifierCase_ == 29) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 29, hostRewriteSpecifier_);
    }
    for (int i = 0; i < requestMirrorPolicies_.size(); i++) {
      output.writeMessage(30, requestMirrorPolicies_.get(i));
    }
    if (maxInternalRedirects_ != null) {
      output.writeMessage(31, getMaxInternalRedirects());
    }
    if (regexRewrite_ != null) {
      output.writeMessage(32, getRegexRewrite());
    }
    if (retryPolicyTypedConfig_ != null) {
      output.writeMessage(33, getRetryPolicyTypedConfig());
    }
    if (internalRedirectPolicy_ != null) {
      output.writeMessage(34, getInternalRedirectPolicy());
    }
    if (hostRewriteSpecifierCase_ == 35) {
      output.writeMessage(35, (io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute) hostRewriteSpecifier_);
    }
    if (maxStreamDuration_ != null) {
      output.writeMessage(36, getMaxStreamDuration());
    }
    if (clusterSpecifierCase_ == 37) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 37, clusterSpecifier_);
    }
    if (appendXForwardedHost_ != false) {
      output.writeBool(38, appendXForwardedHost_);
    }
    if (clusterSpecifierCase_ == 39) {
      output.writeMessage(39, (io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin) clusterSpecifier_);
    }
    if (earlyDataPolicy_ != null) {
      output.writeMessage(40, getEarlyDataPolicy());
    }
    if (pathRewritePolicy_ != null) {
      output.writeMessage(41, getPathRewritePolicy());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (clusterSpecifierCase_ == 1) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, clusterSpecifier_);
    }
    if (clusterSpecifierCase_ == 2) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, clusterSpecifier_);
    }
    if (clusterSpecifierCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (io.envoyproxy.envoy.config.route.v3.WeightedCluster) clusterSpecifier_);
    }
    if (metadataMatch_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getMetadataMatch());
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(prefixRewrite_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, prefixRewrite_);
    }
    if (hostRewriteSpecifierCase_ == 6) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, hostRewriteSpecifier_);
    }
    if (hostRewriteSpecifierCase_ == 7) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, (com.google.protobuf.BoolValue) hostRewriteSpecifier_);
    }
    if (timeout_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getTimeout());
    }
    if (retryPolicy_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, getRetryPolicy());
    }
    if (priority_ != io.envoyproxy.envoy.config.core.v3.RoutingPriority.DEFAULT.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(11, priority_);
    }
    for (int i = 0; i < rateLimits_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, rateLimits_.get(i));
    }
    if (includeVhRateLimits_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, getIncludeVhRateLimits());
    }
    for (int i = 0; i < hashPolicy_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, hashPolicy_.get(i));
    }
    if (cors_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(17, getCors());
    }
    if (clusterNotFoundResponseCode_ != io.envoyproxy.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode.SERVICE_UNAVAILABLE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(20, clusterNotFoundResponseCode_);
    }
    if (maxGrpcTimeout_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(23, getMaxGrpcTimeout());
    }
    if (idleTimeout_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(24, getIdleTimeout());
    }
    for (int i = 0; i < upgradeConfigs_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(25, upgradeConfigs_.get(i));
    }
    if (internalRedirectAction_ != io.envoyproxy.envoy.config.route.v3.RouteAction.InternalRedirectAction.PASS_THROUGH_INTERNAL_REDIRECT.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(26, internalRedirectAction_);
    }
    if (hedgePolicy_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(27, getHedgePolicy());
    }
    if (grpcTimeoutOffset_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(28, getGrpcTimeoutOffset());
    }
    if (hostRewriteSpecifierCase_ == 29) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(29, hostRewriteSpecifier_);
    }
    for (int i = 0; i < requestMirrorPolicies_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(30, requestMirrorPolicies_.get(i));
    }
    if (maxInternalRedirects_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(31, getMaxInternalRedirects());
    }
    if (regexRewrite_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(32, getRegexRewrite());
    }
    if (retryPolicyTypedConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(33, getRetryPolicyTypedConfig());
    }
    if (internalRedirectPolicy_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(34, getInternalRedirectPolicy());
    }
    if (hostRewriteSpecifierCase_ == 35) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(35, (io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute) hostRewriteSpecifier_);
    }
    if (maxStreamDuration_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(36, getMaxStreamDuration());
    }
    if (clusterSpecifierCase_ == 37) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(37, clusterSpecifier_);
    }
    if (appendXForwardedHost_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(38, appendXForwardedHost_);
    }
    if (clusterSpecifierCase_ == 39) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(39, (io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin) clusterSpecifier_);
    }
    if (earlyDataPolicy_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(40, getEarlyDataPolicy());
    }
    if (pathRewritePolicy_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(41, getPathRewritePolicy());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.route.v3.RouteAction)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.route.v3.RouteAction other = (io.envoyproxy.envoy.config.route.v3.RouteAction) obj;

    if (clusterNotFoundResponseCode_ != other.clusterNotFoundResponseCode_) return false;
    if (hasMetadataMatch() != other.hasMetadataMatch()) return false;
    if (hasMetadataMatch()) {
      if (!getMetadataMatch()
          .equals(other.getMetadataMatch())) return false;
    }
    if (!getPrefixRewrite()
        .equals(other.getPrefixRewrite())) return false;
    if (hasRegexRewrite() != other.hasRegexRewrite()) return false;
    if (hasRegexRewrite()) {
      if (!getRegexRewrite()
          .equals(other.getRegexRewrite())) return false;
    }
    if (hasPathRewritePolicy() != other.hasPathRewritePolicy()) return false;
    if (hasPathRewritePolicy()) {
      if (!getPathRewritePolicy()
          .equals(other.getPathRewritePolicy())) return false;
    }
    if (getAppendXForwardedHost()
        != other.getAppendXForwardedHost()) return false;
    if (hasTimeout() != other.hasTimeout()) return false;
    if (hasTimeout()) {
      if (!getTimeout()
          .equals(other.getTimeout())) return false;
    }
    if (hasIdleTimeout() != other.hasIdleTimeout()) return false;
    if (hasIdleTimeout()) {
      if (!getIdleTimeout()
          .equals(other.getIdleTimeout())) return false;
    }
    if (hasEarlyDataPolicy() != other.hasEarlyDataPolicy()) return false;
    if (hasEarlyDataPolicy()) {
      if (!getEarlyDataPolicy()
          .equals(other.getEarlyDataPolicy())) return false;
    }
    if (hasRetryPolicy() != other.hasRetryPolicy()) return false;
    if (hasRetryPolicy()) {
      if (!getRetryPolicy()
          .equals(other.getRetryPolicy())) return false;
    }
    if (hasRetryPolicyTypedConfig() != other.hasRetryPolicyTypedConfig()) return false;
    if (hasRetryPolicyTypedConfig()) {
      if (!getRetryPolicyTypedConfig()
          .equals(other.getRetryPolicyTypedConfig())) return false;
    }
    if (!getRequestMirrorPoliciesList()
        .equals(other.getRequestMirrorPoliciesList())) return false;
    if (priority_ != other.priority_) return false;
    if (!getRateLimitsList()
        .equals(other.getRateLimitsList())) return false;
    if (hasIncludeVhRateLimits() != other.hasIncludeVhRateLimits()) return false;
    if (hasIncludeVhRateLimits()) {
      if (!getIncludeVhRateLimits()
          .equals(other.getIncludeVhRateLimits())) return false;
    }
    if (!getHashPolicyList()
        .equals(other.getHashPolicyList())) return false;
    if (hasCors() != other.hasCors()) return false;
    if (hasCors()) {
      if (!getCors()
          .equals(other.getCors())) return false;
    }
    if (hasMaxGrpcTimeout() != other.hasMaxGrpcTimeout()) return false;
    if (hasMaxGrpcTimeout()) {
      if (!getMaxGrpcTimeout()
          .equals(other.getMaxGrpcTimeout())) return false;
    }
    if (hasGrpcTimeoutOffset() != other.hasGrpcTimeoutOffset()) return false;
    if (hasGrpcTimeoutOffset()) {
      if (!getGrpcTimeoutOffset()
          .equals(other.getGrpcTimeoutOffset())) return false;
    }
    if (!getUpgradeConfigsList()
        .equals(other.getUpgradeConfigsList())) return false;
    if (hasInternalRedirectPolicy() != other.hasInternalRedirectPolicy()) return false;
    if (hasInternalRedirectPolicy()) {
      if (!getInternalRedirectPolicy()
          .equals(other.getInternalRedirectPolicy())) return false;
    }
    if (internalRedirectAction_ != other.internalRedirectAction_) return false;
    if (hasMaxInternalRedirects() != other.hasMaxInternalRedirects()) return false;
    if (hasMaxInternalRedirects()) {
      if (!getMaxInternalRedirects()
          .equals(other.getMaxInternalRedirects())) return false;
    }
    if (hasHedgePolicy() != other.hasHedgePolicy()) return false;
    if (hasHedgePolicy()) {
      if (!getHedgePolicy()
          .equals(other.getHedgePolicy())) return false;
    }
    if (hasMaxStreamDuration() != other.hasMaxStreamDuration()) return false;
    if (hasMaxStreamDuration()) {
      if (!getMaxStreamDuration()
          .equals(other.getMaxStreamDuration())) return false;
    }
    if (!getClusterSpecifierCase().equals(other.getClusterSpecifierCase())) return false;
    switch (clusterSpecifierCase_) {
      case 1:
        if (!getCluster()
            .equals(other.getCluster())) return false;
        break;
      case 2:
        if (!getClusterHeader()
            .equals(other.getClusterHeader())) return false;
        break;
      case 3:
        if (!getWeightedClusters()
            .equals(other.getWeightedClusters())) return false;
        break;
      case 37:
        if (!getClusterSpecifierPlugin()
            .equals(other.getClusterSpecifierPlugin())) return false;
        break;
      case 39:
        if (!getInlineClusterSpecifierPlugin()
            .equals(other.getInlineClusterSpecifierPlugin())) return false;
        break;
      case 0:
      default:
    }
    if (!getHostRewriteSpecifierCase().equals(other.getHostRewriteSpecifierCase())) return false;
    switch (hostRewriteSpecifierCase_) {
      case 6:
        if (!getHostRewriteLiteral()
            .equals(other.getHostRewriteLiteral())) return false;
        break;
      case 7:
        if (!getAutoHostRewrite()
            .equals(other.getAutoHostRewrite())) return false;
        break;
      case 29:
        if (!getHostRewriteHeader()
            .equals(other.getHostRewriteHeader())) return false;
        break;
      case 35:
        if (!getHostRewritePathRegex()
            .equals(other.getHostRewritePathRegex())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CLUSTER_NOT_FOUND_RESPONSE_CODE_FIELD_NUMBER;
    hash = (53 * hash) + clusterNotFoundResponseCode_;
    if (hasMetadataMatch()) {
      hash = (37 * hash) + METADATA_MATCH_FIELD_NUMBER;
      hash = (53 * hash) + getMetadataMatch().hashCode();
    }
    hash = (37 * hash) + PREFIX_REWRITE_FIELD_NUMBER;
    hash = (53 * hash) + getPrefixRewrite().hashCode();
    if (hasRegexRewrite()) {
      hash = (37 * hash) + REGEX_REWRITE_FIELD_NUMBER;
      hash = (53 * hash) + getRegexRewrite().hashCode();
    }
    if (hasPathRewritePolicy()) {
      hash = (37 * hash) + PATH_REWRITE_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + getPathRewritePolicy().hashCode();
    }
    hash = (37 * hash) + APPEND_X_FORWARDED_HOST_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAppendXForwardedHost());
    if (hasTimeout()) {
      hash = (37 * hash) + TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getTimeout().hashCode();
    }
    if (hasIdleTimeout()) {
      hash = (37 * hash) + IDLE_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getIdleTimeout().hashCode();
    }
    if (hasEarlyDataPolicy()) {
      hash = (37 * hash) + EARLY_DATA_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + getEarlyDataPolicy().hashCode();
    }
    if (hasRetryPolicy()) {
      hash = (37 * hash) + RETRY_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + getRetryPolicy().hashCode();
    }
    if (hasRetryPolicyTypedConfig()) {
      hash = (37 * hash) + RETRY_POLICY_TYPED_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getRetryPolicyTypedConfig().hashCode();
    }
    if (getRequestMirrorPoliciesCount() > 0) {
      hash = (37 * hash) + REQUEST_MIRROR_POLICIES_FIELD_NUMBER;
      hash = (53 * hash) + getRequestMirrorPoliciesList().hashCode();
    }
    hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
    hash = (53 * hash) + priority_;
    if (getRateLimitsCount() > 0) {
      hash = (37 * hash) + RATE_LIMITS_FIELD_NUMBER;
      hash = (53 * hash) + getRateLimitsList().hashCode();
    }
    if (hasIncludeVhRateLimits()) {
      hash = (37 * hash) + INCLUDE_VH_RATE_LIMITS_FIELD_NUMBER;
      hash = (53 * hash) + getIncludeVhRateLimits().hashCode();
    }
    if (getHashPolicyCount() > 0) {
      hash = (37 * hash) + HASH_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + getHashPolicyList().hashCode();
    }
    if (hasCors()) {
      hash = (37 * hash) + CORS_FIELD_NUMBER;
      hash = (53 * hash) + getCors().hashCode();
    }
    if (hasMaxGrpcTimeout()) {
      hash = (37 * hash) + MAX_GRPC_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getMaxGrpcTimeout().hashCode();
    }
    if (hasGrpcTimeoutOffset()) {
      hash = (37 * hash) + GRPC_TIMEOUT_OFFSET_FIELD_NUMBER;
      hash = (53 * hash) + getGrpcTimeoutOffset().hashCode();
    }
    if (getUpgradeConfigsCount() > 0) {
      hash = (37 * hash) + UPGRADE_CONFIGS_FIELD_NUMBER;
      hash = (53 * hash) + getUpgradeConfigsList().hashCode();
    }
    if (hasInternalRedirectPolicy()) {
      hash = (37 * hash) + INTERNAL_REDIRECT_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + getInternalRedirectPolicy().hashCode();
    }
    hash = (37 * hash) + INTERNAL_REDIRECT_ACTION_FIELD_NUMBER;
    hash = (53 * hash) + internalRedirectAction_;
    if (hasMaxInternalRedirects()) {
      hash = (37 * hash) + MAX_INTERNAL_REDIRECTS_FIELD_NUMBER;
      hash = (53 * hash) + getMaxInternalRedirects().hashCode();
    }
    if (hasHedgePolicy()) {
      hash = (37 * hash) + HEDGE_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + getHedgePolicy().hashCode();
    }
    if (hasMaxStreamDuration()) {
      hash = (37 * hash) + MAX_STREAM_DURATION_FIELD_NUMBER;
      hash = (53 * hash) + getMaxStreamDuration().hashCode();
    }
    switch (clusterSpecifierCase_) {
      case 1:
        hash = (37 * hash) + CLUSTER_FIELD_NUMBER;
        hash = (53 * hash) + getCluster().hashCode();
        break;
      case 2:
        hash = (37 * hash) + CLUSTER_HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getClusterHeader().hashCode();
        break;
      case 3:
        hash = (37 * hash) + WEIGHTED_CLUSTERS_FIELD_NUMBER;
        hash = (53 * hash) + getWeightedClusters().hashCode();
        break;
      case 37:
        hash = (37 * hash) + CLUSTER_SPECIFIER_PLUGIN_FIELD_NUMBER;
        hash = (53 * hash) + getClusterSpecifierPlugin().hashCode();
        break;
      case 39:
        hash = (37 * hash) + INLINE_CLUSTER_SPECIFIER_PLUGIN_FIELD_NUMBER;
        hash = (53 * hash) + getInlineClusterSpecifierPlugin().hashCode();
        break;
      case 0:
      default:
    }
    switch (hostRewriteSpecifierCase_) {
      case 6:
        hash = (37 * hash) + HOST_REWRITE_LITERAL_FIELD_NUMBER;
        hash = (53 * hash) + getHostRewriteLiteral().hashCode();
        break;
      case 7:
        hash = (37 * hash) + AUTO_HOST_REWRITE_FIELD_NUMBER;
        hash = (53 * hash) + getAutoHostRewrite().hashCode();
        break;
      case 29:
        hash = (37 * hash) + HOST_REWRITE_HEADER_FIELD_NUMBER;
        hash = (53 * hash) + getHostRewriteHeader().hashCode();
        break;
      case 35:
        hash = (37 * hash) + HOST_REWRITE_PATH_REGEX_FIELD_NUMBER;
        hash = (53 * hash) + getHostRewritePathRegex().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.route.v3.RouteAction parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.route.v3.RouteAction parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.route.v3.RouteAction parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.route.v3.RouteAction parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.route.v3.RouteAction parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.route.v3.RouteAction parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.route.v3.RouteAction parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.route.v3.RouteAction parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.route.v3.RouteAction parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.route.v3.RouteAction parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.route.v3.RouteAction parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.route.v3.RouteAction parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.route.v3.RouteAction prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * [#next-free-field: 42]
   * </pre>
   *
   * Protobuf type {@code envoy.config.route.v3.RouteAction}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.route.v3.RouteAction)
      io.envoyproxy.envoy.config.route.v3.RouteActionOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.route.v3.RouteAction.class, io.envoyproxy.envoy.config.route.v3.RouteAction.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.route.v3.RouteAction.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      bitField1_ = 0;
      if (weightedClustersBuilder_ != null) {
        weightedClustersBuilder_.clear();
      }
      if (inlineClusterSpecifierPluginBuilder_ != null) {
        inlineClusterSpecifierPluginBuilder_.clear();
      }
      clusterNotFoundResponseCode_ = 0;
      metadataMatch_ = null;
      if (metadataMatchBuilder_ != null) {
        metadataMatchBuilder_.dispose();
        metadataMatchBuilder_ = null;
      }
      prefixRewrite_ = "";
      regexRewrite_ = null;
      if (regexRewriteBuilder_ != null) {
        regexRewriteBuilder_.dispose();
        regexRewriteBuilder_ = null;
      }
      pathRewritePolicy_ = null;
      if (pathRewritePolicyBuilder_ != null) {
        pathRewritePolicyBuilder_.dispose();
        pathRewritePolicyBuilder_ = null;
      }
      if (autoHostRewriteBuilder_ != null) {
        autoHostRewriteBuilder_.clear();
      }
      if (hostRewritePathRegexBuilder_ != null) {
        hostRewritePathRegexBuilder_.clear();
      }
      appendXForwardedHost_ = false;
      timeout_ = null;
      if (timeoutBuilder_ != null) {
        timeoutBuilder_.dispose();
        timeoutBuilder_ = null;
      }
      idleTimeout_ = null;
      if (idleTimeoutBuilder_ != null) {
        idleTimeoutBuilder_.dispose();
        idleTimeoutBuilder_ = null;
      }
      earlyDataPolicy_ = null;
      if (earlyDataPolicyBuilder_ != null) {
        earlyDataPolicyBuilder_.dispose();
        earlyDataPolicyBuilder_ = null;
      }
      retryPolicy_ = null;
      if (retryPolicyBuilder_ != null) {
        retryPolicyBuilder_.dispose();
        retryPolicyBuilder_ = null;
      }
      retryPolicyTypedConfig_ = null;
      if (retryPolicyTypedConfigBuilder_ != null) {
        retryPolicyTypedConfigBuilder_.dispose();
        retryPolicyTypedConfigBuilder_ = null;
      }
      if (requestMirrorPoliciesBuilder_ == null) {
        requestMirrorPolicies_ = java.util.Collections.emptyList();
      } else {
        requestMirrorPolicies_ = null;
        requestMirrorPoliciesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00100000);
      priority_ = 0;
      if (rateLimitsBuilder_ == null) {
        rateLimits_ = java.util.Collections.emptyList();
      } else {
        rateLimits_ = null;
        rateLimitsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00400000);
      includeVhRateLimits_ = null;
      if (includeVhRateLimitsBuilder_ != null) {
        includeVhRateLimitsBuilder_.dispose();
        includeVhRateLimitsBuilder_ = null;
      }
      if (hashPolicyBuilder_ == null) {
        hashPolicy_ = java.util.Collections.emptyList();
      } else {
        hashPolicy_ = null;
        hashPolicyBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x01000000);
      cors_ = null;
      if (corsBuilder_ != null) {
        corsBuilder_.dispose();
        corsBuilder_ = null;
      }
      maxGrpcTimeout_ = null;
      if (maxGrpcTimeoutBuilder_ != null) {
        maxGrpcTimeoutBuilder_.dispose();
        maxGrpcTimeoutBuilder_ = null;
      }
      grpcTimeoutOffset_ = null;
      if (grpcTimeoutOffsetBuilder_ != null) {
        grpcTimeoutOffsetBuilder_.dispose();
        grpcTimeoutOffsetBuilder_ = null;
      }
      if (upgradeConfigsBuilder_ == null) {
        upgradeConfigs_ = java.util.Collections.emptyList();
      } else {
        upgradeConfigs_ = null;
        upgradeConfigsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x10000000);
      internalRedirectPolicy_ = null;
      if (internalRedirectPolicyBuilder_ != null) {
        internalRedirectPolicyBuilder_.dispose();
        internalRedirectPolicyBuilder_ = null;
      }
      internalRedirectAction_ = 0;
      maxInternalRedirects_ = null;
      if (maxInternalRedirectsBuilder_ != null) {
        maxInternalRedirectsBuilder_.dispose();
        maxInternalRedirectsBuilder_ = null;
      }
      hedgePolicy_ = null;
      if (hedgePolicyBuilder_ != null) {
        hedgePolicyBuilder_.dispose();
        hedgePolicyBuilder_ = null;
      }
      maxStreamDuration_ = null;
      if (maxStreamDurationBuilder_ != null) {
        maxStreamDurationBuilder_.dispose();
        maxStreamDurationBuilder_ = null;
      }
      clusterSpecifierCase_ = 0;
      clusterSpecifier_ = null;
      hostRewriteSpecifierCase_ = 0;
      hostRewriteSpecifier_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.route.v3.RouteComponentsProto.internal_static_envoy_config_route_v3_RouteAction_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.route.v3.RouteAction.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction build() {
      io.envoyproxy.envoy.config.route.v3.RouteAction result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction buildPartial() {
      io.envoyproxy.envoy.config.route.v3.RouteAction result = new io.envoyproxy.envoy.config.route.v3.RouteAction(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      if (bitField1_ != 0) { buildPartial1(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.envoyproxy.envoy.config.route.v3.RouteAction result) {
      if (requestMirrorPoliciesBuilder_ == null) {
        if (((bitField0_ & 0x00100000) != 0)) {
          requestMirrorPolicies_ = java.util.Collections.unmodifiableList(requestMirrorPolicies_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.requestMirrorPolicies_ = requestMirrorPolicies_;
      } else {
        result.requestMirrorPolicies_ = requestMirrorPoliciesBuilder_.build();
      }
      if (rateLimitsBuilder_ == null) {
        if (((bitField0_ & 0x00400000) != 0)) {
          rateLimits_ = java.util.Collections.unmodifiableList(rateLimits_);
          bitField0_ = (bitField0_ & ~0x00400000);
        }
        result.rateLimits_ = rateLimits_;
      } else {
        result.rateLimits_ = rateLimitsBuilder_.build();
      }
      if (hashPolicyBuilder_ == null) {
        if (((bitField0_ & 0x01000000) != 0)) {
          hashPolicy_ = java.util.Collections.unmodifiableList(hashPolicy_);
          bitField0_ = (bitField0_ & ~0x01000000);
        }
        result.hashPolicy_ = hashPolicy_;
      } else {
        result.hashPolicy_ = hashPolicyBuilder_.build();
      }
      if (upgradeConfigsBuilder_ == null) {
        if (((bitField0_ & 0x10000000) != 0)) {
          upgradeConfigs_ = java.util.Collections.unmodifiableList(upgradeConfigs_);
          bitField0_ = (bitField0_ & ~0x10000000);
        }
        result.upgradeConfigs_ = upgradeConfigs_;
      } else {
        result.upgradeConfigs_ = upgradeConfigsBuilder_.build();
      }
    }

    private void buildPartial0(io.envoyproxy.envoy.config.route.v3.RouteAction result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.clusterNotFoundResponseCode_ = clusterNotFoundResponseCode_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.metadataMatch_ = metadataMatchBuilder_ == null
            ? metadataMatch_
            : metadataMatchBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.prefixRewrite_ = prefixRewrite_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.regexRewrite_ = regexRewriteBuilder_ == null
            ? regexRewrite_
            : regexRewriteBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.pathRewritePolicy_ = pathRewritePolicyBuilder_ == null
            ? pathRewritePolicy_
            : pathRewritePolicyBuilder_.build();
      }
      if (((from_bitField0_ & 0x00004000) != 0)) {
        result.appendXForwardedHost_ = appendXForwardedHost_;
      }
      if (((from_bitField0_ & 0x00008000) != 0)) {
        result.timeout_ = timeoutBuilder_ == null
            ? timeout_
            : timeoutBuilder_.build();
      }
      if (((from_bitField0_ & 0x00010000) != 0)) {
        result.idleTimeout_ = idleTimeoutBuilder_ == null
            ? idleTimeout_
            : idleTimeoutBuilder_.build();
      }
      if (((from_bitField0_ & 0x00020000) != 0)) {
        result.earlyDataPolicy_ = earlyDataPolicyBuilder_ == null
            ? earlyDataPolicy_
            : earlyDataPolicyBuilder_.build();
      }
      if (((from_bitField0_ & 0x00040000) != 0)) {
        result.retryPolicy_ = retryPolicyBuilder_ == null
            ? retryPolicy_
            : retryPolicyBuilder_.build();
      }
      if (((from_bitField0_ & 0x00080000) != 0)) {
        result.retryPolicyTypedConfig_ = retryPolicyTypedConfigBuilder_ == null
            ? retryPolicyTypedConfig_
            : retryPolicyTypedConfigBuilder_.build();
      }
      if (((from_bitField0_ & 0x00200000) != 0)) {
        result.priority_ = priority_;
      }
      if (((from_bitField0_ & 0x00800000) != 0)) {
        result.includeVhRateLimits_ = includeVhRateLimitsBuilder_ == null
            ? includeVhRateLimits_
            : includeVhRateLimitsBuilder_.build();
      }
      if (((from_bitField0_ & 0x02000000) != 0)) {
        result.cors_ = corsBuilder_ == null
            ? cors_
            : corsBuilder_.build();
      }
      if (((from_bitField0_ & 0x04000000) != 0)) {
        result.maxGrpcTimeout_ = maxGrpcTimeoutBuilder_ == null
            ? maxGrpcTimeout_
            : maxGrpcTimeoutBuilder_.build();
      }
      if (((from_bitField0_ & 0x08000000) != 0)) {
        result.grpcTimeoutOffset_ = grpcTimeoutOffsetBuilder_ == null
            ? grpcTimeoutOffset_
            : grpcTimeoutOffsetBuilder_.build();
      }
      if (((from_bitField0_ & 0x20000000) != 0)) {
        result.internalRedirectPolicy_ = internalRedirectPolicyBuilder_ == null
            ? internalRedirectPolicy_
            : internalRedirectPolicyBuilder_.build();
      }
      if (((from_bitField0_ & 0x40000000) != 0)) {
        result.internalRedirectAction_ = internalRedirectAction_;
      }
      if (((from_bitField0_ & 0x80000000) != 0)) {
        result.maxInternalRedirects_ = maxInternalRedirectsBuilder_ == null
            ? maxInternalRedirects_
            : maxInternalRedirectsBuilder_.build();
      }
    }

    private void buildPartial1(io.envoyproxy.envoy.config.route.v3.RouteAction result) {
      int from_bitField1_ = bitField1_;
      if (((from_bitField1_ & 0x00000001) != 0)) {
        result.hedgePolicy_ = hedgePolicyBuilder_ == null
            ? hedgePolicy_
            : hedgePolicyBuilder_.build();
      }
      if (((from_bitField1_ & 0x00000002) != 0)) {
        result.maxStreamDuration_ = maxStreamDurationBuilder_ == null
            ? maxStreamDuration_
            : maxStreamDurationBuilder_.build();
      }
    }

    private void buildPartialOneofs(io.envoyproxy.envoy.config.route.v3.RouteAction result) {
      result.clusterSpecifierCase_ = clusterSpecifierCase_;
      result.clusterSpecifier_ = this.clusterSpecifier_;
      if (clusterSpecifierCase_ == 3 &&
          weightedClustersBuilder_ != null) {
        result.clusterSpecifier_ = weightedClustersBuilder_.build();
      }
      if (clusterSpecifierCase_ == 39 &&
          inlineClusterSpecifierPluginBuilder_ != null) {
        result.clusterSpecifier_ = inlineClusterSpecifierPluginBuilder_.build();
      }
      result.hostRewriteSpecifierCase_ = hostRewriteSpecifierCase_;
      result.hostRewriteSpecifier_ = this.hostRewriteSpecifier_;
      if (hostRewriteSpecifierCase_ == 7 &&
          autoHostRewriteBuilder_ != null) {
        result.hostRewriteSpecifier_ = autoHostRewriteBuilder_.build();
      }
      if (hostRewriteSpecifierCase_ == 35 &&
          hostRewritePathRegexBuilder_ != null) {
        result.hostRewriteSpecifier_ = hostRewritePathRegexBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.route.v3.RouteAction) {
        return mergeFrom((io.envoyproxy.envoy.config.route.v3.RouteAction)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.route.v3.RouteAction other) {
      if (other == io.envoyproxy.envoy.config.route.v3.RouteAction.getDefaultInstance()) return this;
      if (other.clusterNotFoundResponseCode_ != 0) {
        setClusterNotFoundResponseCodeValue(other.getClusterNotFoundResponseCodeValue());
      }
      if (other.hasMetadataMatch()) {
        mergeMetadataMatch(other.getMetadataMatch());
      }
      if (!other.getPrefixRewrite().isEmpty()) {
        prefixRewrite_ = other.prefixRewrite_;
        bitField0_ |= 0x00000080;
        onChanged();
      }
      if (other.hasRegexRewrite()) {
        mergeRegexRewrite(other.getRegexRewrite());
      }
      if (other.hasPathRewritePolicy()) {
        mergePathRewritePolicy(other.getPathRewritePolicy());
      }
      if (other.getAppendXForwardedHost() != false) {
        setAppendXForwardedHost(other.getAppendXForwardedHost());
      }
      if (other.hasTimeout()) {
        mergeTimeout(other.getTimeout());
      }
      if (other.hasIdleTimeout()) {
        mergeIdleTimeout(other.getIdleTimeout());
      }
      if (other.hasEarlyDataPolicy()) {
        mergeEarlyDataPolicy(other.getEarlyDataPolicy());
      }
      if (other.hasRetryPolicy()) {
        mergeRetryPolicy(other.getRetryPolicy());
      }
      if (other.hasRetryPolicyTypedConfig()) {
        mergeRetryPolicyTypedConfig(other.getRetryPolicyTypedConfig());
      }
      if (requestMirrorPoliciesBuilder_ == null) {
        if (!other.requestMirrorPolicies_.isEmpty()) {
          if (requestMirrorPolicies_.isEmpty()) {
            requestMirrorPolicies_ = other.requestMirrorPolicies_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureRequestMirrorPoliciesIsMutable();
            requestMirrorPolicies_.addAll(other.requestMirrorPolicies_);
          }
          onChanged();
        }
      } else {
        if (!other.requestMirrorPolicies_.isEmpty()) {
          if (requestMirrorPoliciesBuilder_.isEmpty()) {
            requestMirrorPoliciesBuilder_.dispose();
            requestMirrorPoliciesBuilder_ = null;
            requestMirrorPolicies_ = other.requestMirrorPolicies_;
            bitField0_ = (bitField0_ & ~0x00100000);
            requestMirrorPoliciesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRequestMirrorPoliciesFieldBuilder() : null;
          } else {
            requestMirrorPoliciesBuilder_.addAllMessages(other.requestMirrorPolicies_);
          }
        }
      }
      if (other.priority_ != 0) {
        setPriorityValue(other.getPriorityValue());
      }
      if (rateLimitsBuilder_ == null) {
        if (!other.rateLimits_.isEmpty()) {
          if (rateLimits_.isEmpty()) {
            rateLimits_ = other.rateLimits_;
            bitField0_ = (bitField0_ & ~0x00400000);
          } else {
            ensureRateLimitsIsMutable();
            rateLimits_.addAll(other.rateLimits_);
          }
          onChanged();
        }
      } else {
        if (!other.rateLimits_.isEmpty()) {
          if (rateLimitsBuilder_.isEmpty()) {
            rateLimitsBuilder_.dispose();
            rateLimitsBuilder_ = null;
            rateLimits_ = other.rateLimits_;
            bitField0_ = (bitField0_ & ~0x00400000);
            rateLimitsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getRateLimitsFieldBuilder() : null;
          } else {
            rateLimitsBuilder_.addAllMessages(other.rateLimits_);
          }
        }
      }
      if (other.hasIncludeVhRateLimits()) {
        mergeIncludeVhRateLimits(other.getIncludeVhRateLimits());
      }
      if (hashPolicyBuilder_ == null) {
        if (!other.hashPolicy_.isEmpty()) {
          if (hashPolicy_.isEmpty()) {
            hashPolicy_ = other.hashPolicy_;
            bitField0_ = (bitField0_ & ~0x01000000);
          } else {
            ensureHashPolicyIsMutable();
            hashPolicy_.addAll(other.hashPolicy_);
          }
          onChanged();
        }
      } else {
        if (!other.hashPolicy_.isEmpty()) {
          if (hashPolicyBuilder_.isEmpty()) {
            hashPolicyBuilder_.dispose();
            hashPolicyBuilder_ = null;
            hashPolicy_ = other.hashPolicy_;
            bitField0_ = (bitField0_ & ~0x01000000);
            hashPolicyBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getHashPolicyFieldBuilder() : null;
          } else {
            hashPolicyBuilder_.addAllMessages(other.hashPolicy_);
          }
        }
      }
      if (other.hasCors()) {
        mergeCors(other.getCors());
      }
      if (other.hasMaxGrpcTimeout()) {
        mergeMaxGrpcTimeout(other.getMaxGrpcTimeout());
      }
      if (other.hasGrpcTimeoutOffset()) {
        mergeGrpcTimeoutOffset(other.getGrpcTimeoutOffset());
      }
      if (upgradeConfigsBuilder_ == null) {
        if (!other.upgradeConfigs_.isEmpty()) {
          if (upgradeConfigs_.isEmpty()) {
            upgradeConfigs_ = other.upgradeConfigs_;
            bitField0_ = (bitField0_ & ~0x10000000);
          } else {
            ensureUpgradeConfigsIsMutable();
            upgradeConfigs_.addAll(other.upgradeConfigs_);
          }
          onChanged();
        }
      } else {
        if (!other.upgradeConfigs_.isEmpty()) {
          if (upgradeConfigsBuilder_.isEmpty()) {
            upgradeConfigsBuilder_.dispose();
            upgradeConfigsBuilder_ = null;
            upgradeConfigs_ = other.upgradeConfigs_;
            bitField0_ = (bitField0_ & ~0x10000000);
            upgradeConfigsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getUpgradeConfigsFieldBuilder() : null;
          } else {
            upgradeConfigsBuilder_.addAllMessages(other.upgradeConfigs_);
          }
        }
      }
      if (other.hasInternalRedirectPolicy()) {
        mergeInternalRedirectPolicy(other.getInternalRedirectPolicy());
      }
      if (other.internalRedirectAction_ != 0) {
        setInternalRedirectActionValue(other.getInternalRedirectActionValue());
      }
      if (other.hasMaxInternalRedirects()) {
        mergeMaxInternalRedirects(other.getMaxInternalRedirects());
      }
      if (other.hasHedgePolicy()) {
        mergeHedgePolicy(other.getHedgePolicy());
      }
      if (other.hasMaxStreamDuration()) {
        mergeMaxStreamDuration(other.getMaxStreamDuration());
      }
      switch (other.getClusterSpecifierCase()) {
        case CLUSTER: {
          clusterSpecifierCase_ = 1;
          clusterSpecifier_ = other.clusterSpecifier_;
          onChanged();
          break;
        }
        case CLUSTER_HEADER: {
          clusterSpecifierCase_ = 2;
          clusterSpecifier_ = other.clusterSpecifier_;
          onChanged();
          break;
        }
        case WEIGHTED_CLUSTERS: {
          mergeWeightedClusters(other.getWeightedClusters());
          break;
        }
        case CLUSTER_SPECIFIER_PLUGIN: {
          clusterSpecifierCase_ = 37;
          clusterSpecifier_ = other.clusterSpecifier_;
          onChanged();
          break;
        }
        case INLINE_CLUSTER_SPECIFIER_PLUGIN: {
          mergeInlineClusterSpecifierPlugin(other.getInlineClusterSpecifierPlugin());
          break;
        }
        case CLUSTERSPECIFIER_NOT_SET: {
          break;
        }
      }
      switch (other.getHostRewriteSpecifierCase()) {
        case HOST_REWRITE_LITERAL: {
          hostRewriteSpecifierCase_ = 6;
          hostRewriteSpecifier_ = other.hostRewriteSpecifier_;
          onChanged();
          break;
        }
        case AUTO_HOST_REWRITE: {
          mergeAutoHostRewrite(other.getAutoHostRewrite());
          break;
        }
        case HOST_REWRITE_HEADER: {
          hostRewriteSpecifierCase_ = 29;
          hostRewriteSpecifier_ = other.hostRewriteSpecifier_;
          onChanged();
          break;
        }
        case HOST_REWRITE_PATH_REGEX: {
          mergeHostRewritePathRegex(other.getHostRewritePathRegex());
          break;
        }
        case HOSTREWRITESPECIFIER_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              clusterSpecifierCase_ = 1;
              clusterSpecifier_ = s;
              break;
            } // case 10
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              clusterSpecifierCase_ = 2;
              clusterSpecifier_ = s;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getWeightedClustersFieldBuilder().getBuilder(),
                  extensionRegistry);
              clusterSpecifierCase_ = 3;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getMetadataMatchFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000040;
              break;
            } // case 34
            case 42: {
              prefixRewrite_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000080;
              break;
            } // case 42
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();
              hostRewriteSpecifierCase_ = 6;
              hostRewriteSpecifier_ = s;
              break;
            } // case 50
            case 58: {
              input.readMessage(
                  getAutoHostRewriteFieldBuilder().getBuilder(),
                  extensionRegistry);
              hostRewriteSpecifierCase_ = 7;
              break;
            } // case 58
            case 66: {
              input.readMessage(
                  getTimeoutFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00008000;
              break;
            } // case 66
            case 74: {
              input.readMessage(
                  getRetryPolicyFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00040000;
              break;
            } // case 74
            case 88: {
              priority_ = input.readEnum();
              bitField0_ |= 0x00200000;
              break;
            } // case 88
            case 106: {
              io.envoyproxy.envoy.config.route.v3.RateLimit m =
                  input.readMessage(
                      io.envoyproxy.envoy.config.route.v3.RateLimit.parser(),
                      extensionRegistry);
              if (rateLimitsBuilder_ == null) {
                ensureRateLimitsIsMutable();
                rateLimits_.add(m);
              } else {
                rateLimitsBuilder_.addMessage(m);
              }
              break;
            } // case 106
            case 114: {
              input.readMessage(
                  getIncludeVhRateLimitsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00800000;
              break;
            } // case 114
            case 122: {
              io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy m =
                  input.readMessage(
                      io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.parser(),
                      extensionRegistry);
              if (hashPolicyBuilder_ == null) {
                ensureHashPolicyIsMutable();
                hashPolicy_.add(m);
              } else {
                hashPolicyBuilder_.addMessage(m);
              }
              break;
            } // case 122
            case 138: {
              input.readMessage(
                  getCorsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x02000000;
              break;
            } // case 138
            case 160: {
              clusterNotFoundResponseCode_ = input.readEnum();
              bitField0_ |= 0x00000020;
              break;
            } // case 160
            case 186: {
              input.readMessage(
                  getMaxGrpcTimeoutFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x04000000;
              break;
            } // case 186
            case 194: {
              input.readMessage(
                  getIdleTimeoutFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00010000;
              break;
            } // case 194
            case 202: {
              io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig m =
                  input.readMessage(
                      io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.parser(),
                      extensionRegistry);
              if (upgradeConfigsBuilder_ == null) {
                ensureUpgradeConfigsIsMutable();
                upgradeConfigs_.add(m);
              } else {
                upgradeConfigsBuilder_.addMessage(m);
              }
              break;
            } // case 202
            case 208: {
              internalRedirectAction_ = input.readEnum();
              bitField0_ |= 0x40000000;
              break;
            } // case 208
            case 218: {
              input.readMessage(
                  getHedgePolicyFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField1_ |= 0x00000001;
              break;
            } // case 218
            case 226: {
              input.readMessage(
                  getGrpcTimeoutOffsetFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x08000000;
              break;
            } // case 226
            case 234: {
              java.lang.String s = input.readStringRequireUtf8();
              hostRewriteSpecifierCase_ = 29;
              hostRewriteSpecifier_ = s;
              break;
            } // case 234
            case 242: {
              io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy m =
                  input.readMessage(
                      io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.parser(),
                      extensionRegistry);
              if (requestMirrorPoliciesBuilder_ == null) {
                ensureRequestMirrorPoliciesIsMutable();
                requestMirrorPolicies_.add(m);
              } else {
                requestMirrorPoliciesBuilder_.addMessage(m);
              }
              break;
            } // case 242
            case 250: {
              input.readMessage(
                  getMaxInternalRedirectsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x80000000;
              break;
            } // case 250
            case 258: {
              input.readMessage(
                  getRegexRewriteFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000100;
              break;
            } // case 258
            case 266: {
              input.readMessage(
                  getRetryPolicyTypedConfigFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00080000;
              break;
            } // case 266
            case 274: {
              input.readMessage(
                  getInternalRedirectPolicyFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x20000000;
              break;
            } // case 274
            case 282: {
              input.readMessage(
                  getHostRewritePathRegexFieldBuilder().getBuilder(),
                  extensionRegistry);
              hostRewriteSpecifierCase_ = 35;
              break;
            } // case 282
            case 290: {
              input.readMessage(
                  getMaxStreamDurationFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField1_ |= 0x00000002;
              break;
            } // case 290
            case 298: {
              java.lang.String s = input.readStringRequireUtf8();
              clusterSpecifierCase_ = 37;
              clusterSpecifier_ = s;
              break;
            } // case 298
            case 304: {
              appendXForwardedHost_ = input.readBool();
              bitField0_ |= 0x00004000;
              break;
            } // case 304
            case 314: {
              input.readMessage(
                  getInlineClusterSpecifierPluginFieldBuilder().getBuilder(),
                  extensionRegistry);
              clusterSpecifierCase_ = 39;
              break;
            } // case 314
            case 322: {
              input.readMessage(
                  getEarlyDataPolicyFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00020000;
              break;
            } // case 322
            case 330: {
              input.readMessage(
                  getPathRewritePolicyFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000200;
              break;
            } // case 330
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int clusterSpecifierCase_ = 0;
    private java.lang.Object clusterSpecifier_;
    public ClusterSpecifierCase
        getClusterSpecifierCase() {
      return ClusterSpecifierCase.forNumber(
          clusterSpecifierCase_);
    }

    public Builder clearClusterSpecifier() {
      clusterSpecifierCase_ = 0;
      clusterSpecifier_ = null;
      onChanged();
      return this;
    }

    private int hostRewriteSpecifierCase_ = 0;
    private java.lang.Object hostRewriteSpecifier_;
    public HostRewriteSpecifierCase
        getHostRewriteSpecifierCase() {
      return HostRewriteSpecifierCase.forNumber(
          hostRewriteSpecifierCase_);
    }

    public Builder clearHostRewriteSpecifier() {
      hostRewriteSpecifierCase_ = 0;
      hostRewriteSpecifier_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;
    private int bitField1_;

    /**
     * <pre>
     * Indicates the upstream cluster to which the request should be routed
     * to.
     * </pre>
     *
     * <code>string cluster = 1 [(.validate.rules) = { ... }</code>
     * @return Whether the cluster field is set.
     */
    @java.lang.Override
    public boolean hasCluster() {
      return clusterSpecifierCase_ == 1;
    }
    /**
     * <pre>
     * Indicates the upstream cluster to which the request should be routed
     * to.
     * </pre>
     *
     * <code>string cluster = 1 [(.validate.rules) = { ... }</code>
     * @return The cluster.
     */
    @java.lang.Override
    public java.lang.String getCluster() {
      java.lang.Object ref = "";
      if (clusterSpecifierCase_ == 1) {
        ref = clusterSpecifier_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (clusterSpecifierCase_ == 1) {
          clusterSpecifier_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Indicates the upstream cluster to which the request should be routed
     * to.
     * </pre>
     *
     * <code>string cluster = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for cluster.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClusterBytes() {
      java.lang.Object ref = "";
      if (clusterSpecifierCase_ == 1) {
        ref = clusterSpecifier_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (clusterSpecifierCase_ == 1) {
          clusterSpecifier_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Indicates the upstream cluster to which the request should be routed
     * to.
     * </pre>
     *
     * <code>string cluster = 1 [(.validate.rules) = { ... }</code>
     * @param value The cluster to set.
     * @return This builder for chaining.
     */
    public Builder setCluster(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      clusterSpecifierCase_ = 1;
      clusterSpecifier_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates the upstream cluster to which the request should be routed
     * to.
     * </pre>
     *
     * <code>string cluster = 1 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearCluster() {
      if (clusterSpecifierCase_ == 1) {
        clusterSpecifierCase_ = 0;
        clusterSpecifier_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Indicates the upstream cluster to which the request should be routed
     * to.
     * </pre>
     *
     * <code>string cluster = 1 [(.validate.rules) = { ... }</code>
     * @param value The bytes for cluster to set.
     * @return This builder for chaining.
     */
    public Builder setClusterBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      clusterSpecifierCase_ = 1;
      clusterSpecifier_ = value;
      onChanged();
      return this;
    }

    /**
     * <pre>
     * Envoy will determine the cluster to route to by reading the value of the
     * HTTP header named by cluster_header from the request headers. If the
     * header is not found or the referenced cluster does not exist, Envoy will
     * return a 404 response.
     * .. attention::
     *   Internally, Envoy always uses the HTTP/2 ``:authority`` header to represent the HTTP/1
     *   ``Host`` header. Thus, if attempting to match on ``Host``, match on ``:authority`` instead.
     * .. note::
     *   If the header appears multiple times only the first value is used.
     * </pre>
     *
     * <code>string cluster_header = 2 [(.validate.rules) = { ... }</code>
     * @return Whether the clusterHeader field is set.
     */
    @java.lang.Override
    public boolean hasClusterHeader() {
      return clusterSpecifierCase_ == 2;
    }
    /**
     * <pre>
     * Envoy will determine the cluster to route to by reading the value of the
     * HTTP header named by cluster_header from the request headers. If the
     * header is not found or the referenced cluster does not exist, Envoy will
     * return a 404 response.
     * .. attention::
     *   Internally, Envoy always uses the HTTP/2 ``:authority`` header to represent the HTTP/1
     *   ``Host`` header. Thus, if attempting to match on ``Host``, match on ``:authority`` instead.
     * .. note::
     *   If the header appears multiple times only the first value is used.
     * </pre>
     *
     * <code>string cluster_header = 2 [(.validate.rules) = { ... }</code>
     * @return The clusterHeader.
     */
    @java.lang.Override
    public java.lang.String getClusterHeader() {
      java.lang.Object ref = "";
      if (clusterSpecifierCase_ == 2) {
        ref = clusterSpecifier_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (clusterSpecifierCase_ == 2) {
          clusterSpecifier_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Envoy will determine the cluster to route to by reading the value of the
     * HTTP header named by cluster_header from the request headers. If the
     * header is not found or the referenced cluster does not exist, Envoy will
     * return a 404 response.
     * .. attention::
     *   Internally, Envoy always uses the HTTP/2 ``:authority`` header to represent the HTTP/1
     *   ``Host`` header. Thus, if attempting to match on ``Host``, match on ``:authority`` instead.
     * .. note::
     *   If the header appears multiple times only the first value is used.
     * </pre>
     *
     * <code>string cluster_header = 2 [(.validate.rules) = { ... }</code>
     * @return The bytes for clusterHeader.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClusterHeaderBytes() {
      java.lang.Object ref = "";
      if (clusterSpecifierCase_ == 2) {
        ref = clusterSpecifier_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (clusterSpecifierCase_ == 2) {
          clusterSpecifier_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Envoy will determine the cluster to route to by reading the value of the
     * HTTP header named by cluster_header from the request headers. If the
     * header is not found or the referenced cluster does not exist, Envoy will
     * return a 404 response.
     * .. attention::
     *   Internally, Envoy always uses the HTTP/2 ``:authority`` header to represent the HTTP/1
     *   ``Host`` header. Thus, if attempting to match on ``Host``, match on ``:authority`` instead.
     * .. note::
     *   If the header appears multiple times only the first value is used.
     * </pre>
     *
     * <code>string cluster_header = 2 [(.validate.rules) = { ... }</code>
     * @param value The clusterHeader to set.
     * @return This builder for chaining.
     */
    public Builder setClusterHeader(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      clusterSpecifierCase_ = 2;
      clusterSpecifier_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Envoy will determine the cluster to route to by reading the value of the
     * HTTP header named by cluster_header from the request headers. If the
     * header is not found or the referenced cluster does not exist, Envoy will
     * return a 404 response.
     * .. attention::
     *   Internally, Envoy always uses the HTTP/2 ``:authority`` header to represent the HTTP/1
     *   ``Host`` header. Thus, if attempting to match on ``Host``, match on ``:authority`` instead.
     * .. note::
     *   If the header appears multiple times only the first value is used.
     * </pre>
     *
     * <code>string cluster_header = 2 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearClusterHeader() {
      if (clusterSpecifierCase_ == 2) {
        clusterSpecifierCase_ = 0;
        clusterSpecifier_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Envoy will determine the cluster to route to by reading the value of the
     * HTTP header named by cluster_header from the request headers. If the
     * header is not found or the referenced cluster does not exist, Envoy will
     * return a 404 response.
     * .. attention::
     *   Internally, Envoy always uses the HTTP/2 ``:authority`` header to represent the HTTP/1
     *   ``Host`` header. Thus, if attempting to match on ``Host``, match on ``:authority`` instead.
     * .. note::
     *   If the header appears multiple times only the first value is used.
     * </pre>
     *
     * <code>string cluster_header = 2 [(.validate.rules) = { ... }</code>
     * @param value The bytes for clusterHeader to set.
     * @return This builder for chaining.
     */
    public Builder setClusterHeaderBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      clusterSpecifierCase_ = 2;
      clusterSpecifier_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.WeightedCluster, io.envoyproxy.envoy.config.route.v3.WeightedCluster.Builder, io.envoyproxy.envoy.config.route.v3.WeightedClusterOrBuilder> weightedClustersBuilder_;
    /**
     * <pre>
     * Multiple upstream clusters can be specified for a given route. The
     * request is routed to one of the upstream clusters based on weights
     * assigned to each cluster. See
     * :ref:`traffic splitting &lt;config_http_conn_man_route_table_traffic_splitting_split&gt;`
     * for additional documentation.
     * </pre>
     *
     * <code>.envoy.config.route.v3.WeightedCluster weighted_clusters = 3;</code>
     * @return Whether the weightedClusters field is set.
     */
    @java.lang.Override
    public boolean hasWeightedClusters() {
      return clusterSpecifierCase_ == 3;
    }
    /**
     * <pre>
     * Multiple upstream clusters can be specified for a given route. The
     * request is routed to one of the upstream clusters based on weights
     * assigned to each cluster. See
     * :ref:`traffic splitting &lt;config_http_conn_man_route_table_traffic_splitting_split&gt;`
     * for additional documentation.
     * </pre>
     *
     * <code>.envoy.config.route.v3.WeightedCluster weighted_clusters = 3;</code>
     * @return The weightedClusters.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.WeightedCluster getWeightedClusters() {
      if (weightedClustersBuilder_ == null) {
        if (clusterSpecifierCase_ == 3) {
          return (io.envoyproxy.envoy.config.route.v3.WeightedCluster) clusterSpecifier_;
        }
        return io.envoyproxy.envoy.config.route.v3.WeightedCluster.getDefaultInstance();
      } else {
        if (clusterSpecifierCase_ == 3) {
          return weightedClustersBuilder_.getMessage();
        }
        return io.envoyproxy.envoy.config.route.v3.WeightedCluster.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Multiple upstream clusters can be specified for a given route. The
     * request is routed to one of the upstream clusters based on weights
     * assigned to each cluster. See
     * :ref:`traffic splitting &lt;config_http_conn_man_route_table_traffic_splitting_split&gt;`
     * for additional documentation.
     * </pre>
     *
     * <code>.envoy.config.route.v3.WeightedCluster weighted_clusters = 3;</code>
     */
    public Builder setWeightedClusters(io.envoyproxy.envoy.config.route.v3.WeightedCluster value) {
      if (weightedClustersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        clusterSpecifier_ = value;
        onChanged();
      } else {
        weightedClustersBuilder_.setMessage(value);
      }
      clusterSpecifierCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Multiple upstream clusters can be specified for a given route. The
     * request is routed to one of the upstream clusters based on weights
     * assigned to each cluster. See
     * :ref:`traffic splitting &lt;config_http_conn_man_route_table_traffic_splitting_split&gt;`
     * for additional documentation.
     * </pre>
     *
     * <code>.envoy.config.route.v3.WeightedCluster weighted_clusters = 3;</code>
     */
    public Builder setWeightedClusters(
        io.envoyproxy.envoy.config.route.v3.WeightedCluster.Builder builderForValue) {
      if (weightedClustersBuilder_ == null) {
        clusterSpecifier_ = builderForValue.build();
        onChanged();
      } else {
        weightedClustersBuilder_.setMessage(builderForValue.build());
      }
      clusterSpecifierCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Multiple upstream clusters can be specified for a given route. The
     * request is routed to one of the upstream clusters based on weights
     * assigned to each cluster. See
     * :ref:`traffic splitting &lt;config_http_conn_man_route_table_traffic_splitting_split&gt;`
     * for additional documentation.
     * </pre>
     *
     * <code>.envoy.config.route.v3.WeightedCluster weighted_clusters = 3;</code>
     */
    public Builder mergeWeightedClusters(io.envoyproxy.envoy.config.route.v3.WeightedCluster value) {
      if (weightedClustersBuilder_ == null) {
        if (clusterSpecifierCase_ == 3 &&
            clusterSpecifier_ != io.envoyproxy.envoy.config.route.v3.WeightedCluster.getDefaultInstance()) {
          clusterSpecifier_ = io.envoyproxy.envoy.config.route.v3.WeightedCluster.newBuilder((io.envoyproxy.envoy.config.route.v3.WeightedCluster) clusterSpecifier_)
              .mergeFrom(value).buildPartial();
        } else {
          clusterSpecifier_ = value;
        }
        onChanged();
      } else {
        if (clusterSpecifierCase_ == 3) {
          weightedClustersBuilder_.mergeFrom(value);
        } else {
          weightedClustersBuilder_.setMessage(value);
        }
      }
      clusterSpecifierCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * Multiple upstream clusters can be specified for a given route. The
     * request is routed to one of the upstream clusters based on weights
     * assigned to each cluster. See
     * :ref:`traffic splitting &lt;config_http_conn_man_route_table_traffic_splitting_split&gt;`
     * for additional documentation.
     * </pre>
     *
     * <code>.envoy.config.route.v3.WeightedCluster weighted_clusters = 3;</code>
     */
    public Builder clearWeightedClusters() {
      if (weightedClustersBuilder_ == null) {
        if (clusterSpecifierCase_ == 3) {
          clusterSpecifierCase_ = 0;
          clusterSpecifier_ = null;
          onChanged();
        }
      } else {
        if (clusterSpecifierCase_ == 3) {
          clusterSpecifierCase_ = 0;
          clusterSpecifier_ = null;
        }
        weightedClustersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Multiple upstream clusters can be specified for a given route. The
     * request is routed to one of the upstream clusters based on weights
     * assigned to each cluster. See
     * :ref:`traffic splitting &lt;config_http_conn_man_route_table_traffic_splitting_split&gt;`
     * for additional documentation.
     * </pre>
     *
     * <code>.envoy.config.route.v3.WeightedCluster weighted_clusters = 3;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.WeightedCluster.Builder getWeightedClustersBuilder() {
      return getWeightedClustersFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Multiple upstream clusters can be specified for a given route. The
     * request is routed to one of the upstream clusters based on weights
     * assigned to each cluster. See
     * :ref:`traffic splitting &lt;config_http_conn_man_route_table_traffic_splitting_split&gt;`
     * for additional documentation.
     * </pre>
     *
     * <code>.envoy.config.route.v3.WeightedCluster weighted_clusters = 3;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.WeightedClusterOrBuilder getWeightedClustersOrBuilder() {
      if ((clusterSpecifierCase_ == 3) && (weightedClustersBuilder_ != null)) {
        return weightedClustersBuilder_.getMessageOrBuilder();
      } else {
        if (clusterSpecifierCase_ == 3) {
          return (io.envoyproxy.envoy.config.route.v3.WeightedCluster) clusterSpecifier_;
        }
        return io.envoyproxy.envoy.config.route.v3.WeightedCluster.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Multiple upstream clusters can be specified for a given route. The
     * request is routed to one of the upstream clusters based on weights
     * assigned to each cluster. See
     * :ref:`traffic splitting &lt;config_http_conn_man_route_table_traffic_splitting_split&gt;`
     * for additional documentation.
     * </pre>
     *
     * <code>.envoy.config.route.v3.WeightedCluster weighted_clusters = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.WeightedCluster, io.envoyproxy.envoy.config.route.v3.WeightedCluster.Builder, io.envoyproxy.envoy.config.route.v3.WeightedClusterOrBuilder> 
        getWeightedClustersFieldBuilder() {
      if (weightedClustersBuilder_ == null) {
        if (!(clusterSpecifierCase_ == 3)) {
          clusterSpecifier_ = io.envoyproxy.envoy.config.route.v3.WeightedCluster.getDefaultInstance();
        }
        weightedClustersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.route.v3.WeightedCluster, io.envoyproxy.envoy.config.route.v3.WeightedCluster.Builder, io.envoyproxy.envoy.config.route.v3.WeightedClusterOrBuilder>(
                (io.envoyproxy.envoy.config.route.v3.WeightedCluster) clusterSpecifier_,
                getParentForChildren(),
                isClean());
        clusterSpecifier_ = null;
      }
      clusterSpecifierCase_ = 3;
      onChanged();
      return weightedClustersBuilder_;
    }

    /**
     * <pre>
     * Name of the cluster specifier plugin to use to determine the cluster for requests on this route.
     * The cluster specifier plugin name must be defined in the associated
     * :ref:`cluster specifier plugins &lt;envoy_v3_api_field_config.route.v3.RouteConfiguration.cluster_specifier_plugins&gt;`
     * in the :ref:`name &lt;envoy_v3_api_field_config.core.v3.TypedExtensionConfig.name&gt;` field.
     * </pre>
     *
     * <code>string cluster_specifier_plugin = 37;</code>
     * @return Whether the clusterSpecifierPlugin field is set.
     */
    @java.lang.Override
    public boolean hasClusterSpecifierPlugin() {
      return clusterSpecifierCase_ == 37;
    }
    /**
     * <pre>
     * Name of the cluster specifier plugin to use to determine the cluster for requests on this route.
     * The cluster specifier plugin name must be defined in the associated
     * :ref:`cluster specifier plugins &lt;envoy_v3_api_field_config.route.v3.RouteConfiguration.cluster_specifier_plugins&gt;`
     * in the :ref:`name &lt;envoy_v3_api_field_config.core.v3.TypedExtensionConfig.name&gt;` field.
     * </pre>
     *
     * <code>string cluster_specifier_plugin = 37;</code>
     * @return The clusterSpecifierPlugin.
     */
    @java.lang.Override
    public java.lang.String getClusterSpecifierPlugin() {
      java.lang.Object ref = "";
      if (clusterSpecifierCase_ == 37) {
        ref = clusterSpecifier_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (clusterSpecifierCase_ == 37) {
          clusterSpecifier_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of the cluster specifier plugin to use to determine the cluster for requests on this route.
     * The cluster specifier plugin name must be defined in the associated
     * :ref:`cluster specifier plugins &lt;envoy_v3_api_field_config.route.v3.RouteConfiguration.cluster_specifier_plugins&gt;`
     * in the :ref:`name &lt;envoy_v3_api_field_config.core.v3.TypedExtensionConfig.name&gt;` field.
     * </pre>
     *
     * <code>string cluster_specifier_plugin = 37;</code>
     * @return The bytes for clusterSpecifierPlugin.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClusterSpecifierPluginBytes() {
      java.lang.Object ref = "";
      if (clusterSpecifierCase_ == 37) {
        ref = clusterSpecifier_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (clusterSpecifierCase_ == 37) {
          clusterSpecifier_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of the cluster specifier plugin to use to determine the cluster for requests on this route.
     * The cluster specifier plugin name must be defined in the associated
     * :ref:`cluster specifier plugins &lt;envoy_v3_api_field_config.route.v3.RouteConfiguration.cluster_specifier_plugins&gt;`
     * in the :ref:`name &lt;envoy_v3_api_field_config.core.v3.TypedExtensionConfig.name&gt;` field.
     * </pre>
     *
     * <code>string cluster_specifier_plugin = 37;</code>
     * @param value The clusterSpecifierPlugin to set.
     * @return This builder for chaining.
     */
    public Builder setClusterSpecifierPlugin(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      clusterSpecifierCase_ = 37;
      clusterSpecifier_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the cluster specifier plugin to use to determine the cluster for requests on this route.
     * The cluster specifier plugin name must be defined in the associated
     * :ref:`cluster specifier plugins &lt;envoy_v3_api_field_config.route.v3.RouteConfiguration.cluster_specifier_plugins&gt;`
     * in the :ref:`name &lt;envoy_v3_api_field_config.core.v3.TypedExtensionConfig.name&gt;` field.
     * </pre>
     *
     * <code>string cluster_specifier_plugin = 37;</code>
     * @return This builder for chaining.
     */
    public Builder clearClusterSpecifierPlugin() {
      if (clusterSpecifierCase_ == 37) {
        clusterSpecifierCase_ = 0;
        clusterSpecifier_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Name of the cluster specifier plugin to use to determine the cluster for requests on this route.
     * The cluster specifier plugin name must be defined in the associated
     * :ref:`cluster specifier plugins &lt;envoy_v3_api_field_config.route.v3.RouteConfiguration.cluster_specifier_plugins&gt;`
     * in the :ref:`name &lt;envoy_v3_api_field_config.core.v3.TypedExtensionConfig.name&gt;` field.
     * </pre>
     *
     * <code>string cluster_specifier_plugin = 37;</code>
     * @param value The bytes for clusterSpecifierPlugin to set.
     * @return This builder for chaining.
     */
    public Builder setClusterSpecifierPluginBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      clusterSpecifierCase_ = 37;
      clusterSpecifier_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin, io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin.Builder, io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPluginOrBuilder> inlineClusterSpecifierPluginBuilder_;
    /**
     * <pre>
     * Custom cluster specifier plugin configuration to use to determine the cluster for requests
     * on this route.
     * </pre>
     *
     * <code>.envoy.config.route.v3.ClusterSpecifierPlugin inline_cluster_specifier_plugin = 39;</code>
     * @return Whether the inlineClusterSpecifierPlugin field is set.
     */
    @java.lang.Override
    public boolean hasInlineClusterSpecifierPlugin() {
      return clusterSpecifierCase_ == 39;
    }
    /**
     * <pre>
     * Custom cluster specifier plugin configuration to use to determine the cluster for requests
     * on this route.
     * </pre>
     *
     * <code>.envoy.config.route.v3.ClusterSpecifierPlugin inline_cluster_specifier_plugin = 39;</code>
     * @return The inlineClusterSpecifierPlugin.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin getInlineClusterSpecifierPlugin() {
      if (inlineClusterSpecifierPluginBuilder_ == null) {
        if (clusterSpecifierCase_ == 39) {
          return (io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin) clusterSpecifier_;
        }
        return io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin.getDefaultInstance();
      } else {
        if (clusterSpecifierCase_ == 39) {
          return inlineClusterSpecifierPluginBuilder_.getMessage();
        }
        return io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Custom cluster specifier plugin configuration to use to determine the cluster for requests
     * on this route.
     * </pre>
     *
     * <code>.envoy.config.route.v3.ClusterSpecifierPlugin inline_cluster_specifier_plugin = 39;</code>
     */
    public Builder setInlineClusterSpecifierPlugin(io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin value) {
      if (inlineClusterSpecifierPluginBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        clusterSpecifier_ = value;
        onChanged();
      } else {
        inlineClusterSpecifierPluginBuilder_.setMessage(value);
      }
      clusterSpecifierCase_ = 39;
      return this;
    }
    /**
     * <pre>
     * Custom cluster specifier plugin configuration to use to determine the cluster for requests
     * on this route.
     * </pre>
     *
     * <code>.envoy.config.route.v3.ClusterSpecifierPlugin inline_cluster_specifier_plugin = 39;</code>
     */
    public Builder setInlineClusterSpecifierPlugin(
        io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin.Builder builderForValue) {
      if (inlineClusterSpecifierPluginBuilder_ == null) {
        clusterSpecifier_ = builderForValue.build();
        onChanged();
      } else {
        inlineClusterSpecifierPluginBuilder_.setMessage(builderForValue.build());
      }
      clusterSpecifierCase_ = 39;
      return this;
    }
    /**
     * <pre>
     * Custom cluster specifier plugin configuration to use to determine the cluster for requests
     * on this route.
     * </pre>
     *
     * <code>.envoy.config.route.v3.ClusterSpecifierPlugin inline_cluster_specifier_plugin = 39;</code>
     */
    public Builder mergeInlineClusterSpecifierPlugin(io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin value) {
      if (inlineClusterSpecifierPluginBuilder_ == null) {
        if (clusterSpecifierCase_ == 39 &&
            clusterSpecifier_ != io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin.getDefaultInstance()) {
          clusterSpecifier_ = io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin.newBuilder((io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin) clusterSpecifier_)
              .mergeFrom(value).buildPartial();
        } else {
          clusterSpecifier_ = value;
        }
        onChanged();
      } else {
        if (clusterSpecifierCase_ == 39) {
          inlineClusterSpecifierPluginBuilder_.mergeFrom(value);
        } else {
          inlineClusterSpecifierPluginBuilder_.setMessage(value);
        }
      }
      clusterSpecifierCase_ = 39;
      return this;
    }
    /**
     * <pre>
     * Custom cluster specifier plugin configuration to use to determine the cluster for requests
     * on this route.
     * </pre>
     *
     * <code>.envoy.config.route.v3.ClusterSpecifierPlugin inline_cluster_specifier_plugin = 39;</code>
     */
    public Builder clearInlineClusterSpecifierPlugin() {
      if (inlineClusterSpecifierPluginBuilder_ == null) {
        if (clusterSpecifierCase_ == 39) {
          clusterSpecifierCase_ = 0;
          clusterSpecifier_ = null;
          onChanged();
        }
      } else {
        if (clusterSpecifierCase_ == 39) {
          clusterSpecifierCase_ = 0;
          clusterSpecifier_ = null;
        }
        inlineClusterSpecifierPluginBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Custom cluster specifier plugin configuration to use to determine the cluster for requests
     * on this route.
     * </pre>
     *
     * <code>.envoy.config.route.v3.ClusterSpecifierPlugin inline_cluster_specifier_plugin = 39;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin.Builder getInlineClusterSpecifierPluginBuilder() {
      return getInlineClusterSpecifierPluginFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Custom cluster specifier plugin configuration to use to determine the cluster for requests
     * on this route.
     * </pre>
     *
     * <code>.envoy.config.route.v3.ClusterSpecifierPlugin inline_cluster_specifier_plugin = 39;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPluginOrBuilder getInlineClusterSpecifierPluginOrBuilder() {
      if ((clusterSpecifierCase_ == 39) && (inlineClusterSpecifierPluginBuilder_ != null)) {
        return inlineClusterSpecifierPluginBuilder_.getMessageOrBuilder();
      } else {
        if (clusterSpecifierCase_ == 39) {
          return (io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin) clusterSpecifier_;
        }
        return io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Custom cluster specifier plugin configuration to use to determine the cluster for requests
     * on this route.
     * </pre>
     *
     * <code>.envoy.config.route.v3.ClusterSpecifierPlugin inline_cluster_specifier_plugin = 39;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin, io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin.Builder, io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPluginOrBuilder> 
        getInlineClusterSpecifierPluginFieldBuilder() {
      if (inlineClusterSpecifierPluginBuilder_ == null) {
        if (!(clusterSpecifierCase_ == 39)) {
          clusterSpecifier_ = io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin.getDefaultInstance();
        }
        inlineClusterSpecifierPluginBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin, io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin.Builder, io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPluginOrBuilder>(
                (io.envoyproxy.envoy.config.route.v3.ClusterSpecifierPlugin) clusterSpecifier_,
                getParentForChildren(),
                isClean());
        clusterSpecifier_ = null;
      }
      clusterSpecifierCase_ = 39;
      onChanged();
      return inlineClusterSpecifierPluginBuilder_;
    }

    private int clusterNotFoundResponseCode_ = 0;
    /**
     * <pre>
     * The HTTP status code to use when configured cluster is not found.
     * The default response code is 503 Service Unavailable.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode cluster_not_found_response_code = 20 [(.validate.rules) = { ... }</code>
     * @return The enum numeric value on the wire for clusterNotFoundResponseCode.
     */
    @java.lang.Override public int getClusterNotFoundResponseCodeValue() {
      return clusterNotFoundResponseCode_;
    }
    /**
     * <pre>
     * The HTTP status code to use when configured cluster is not found.
     * The default response code is 503 Service Unavailable.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode cluster_not_found_response_code = 20 [(.validate.rules) = { ... }</code>
     * @param value The enum numeric value on the wire for clusterNotFoundResponseCode to set.
     * @return This builder for chaining.
     */
    public Builder setClusterNotFoundResponseCodeValue(int value) {
      clusterNotFoundResponseCode_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The HTTP status code to use when configured cluster is not found.
     * The default response code is 503 Service Unavailable.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode cluster_not_found_response_code = 20 [(.validate.rules) = { ... }</code>
     * @return The clusterNotFoundResponseCode.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode getClusterNotFoundResponseCode() {
      io.envoyproxy.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode result = io.envoyproxy.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode.forNumber(clusterNotFoundResponseCode_);
      return result == null ? io.envoyproxy.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The HTTP status code to use when configured cluster is not found.
     * The default response code is 503 Service Unavailable.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode cluster_not_found_response_code = 20 [(.validate.rules) = { ... }</code>
     * @param value The clusterNotFoundResponseCode to set.
     * @return This builder for chaining.
     */
    public Builder setClusterNotFoundResponseCode(io.envoyproxy.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000020;
      clusterNotFoundResponseCode_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The HTTP status code to use when configured cluster is not found.
     * The default response code is 503 Service Unavailable.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCode cluster_not_found_response_code = 20 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearClusterNotFoundResponseCode() {
      bitField0_ = (bitField0_ & ~0x00000020);
      clusterNotFoundResponseCode_ = 0;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.config.core.v3.Metadata metadataMatch_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.Metadata, io.envoyproxy.envoy.config.core.v3.Metadata.Builder, io.envoyproxy.envoy.config.core.v3.MetadataOrBuilder> metadataMatchBuilder_;
    /**
     * <pre>
     * Optional endpoint metadata match criteria used by the subset load balancer. Only endpoints
     * in the upstream cluster with metadata matching what's set in this field will be considered
     * for load balancing. If using :ref:`weighted_clusters
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.weighted_clusters&gt;`, metadata will be merged, with values
     * provided there taking precedence. The filter name should be specified as ``envoy.lb``.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Metadata metadata_match = 4;</code>
     * @return Whether the metadataMatch field is set.
     */
    public boolean hasMetadataMatch() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Optional endpoint metadata match criteria used by the subset load balancer. Only endpoints
     * in the upstream cluster with metadata matching what's set in this field will be considered
     * for load balancing. If using :ref:`weighted_clusters
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.weighted_clusters&gt;`, metadata will be merged, with values
     * provided there taking precedence. The filter name should be specified as ``envoy.lb``.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Metadata metadata_match = 4;</code>
     * @return The metadataMatch.
     */
    public io.envoyproxy.envoy.config.core.v3.Metadata getMetadataMatch() {
      if (metadataMatchBuilder_ == null) {
        return metadataMatch_ == null ? io.envoyproxy.envoy.config.core.v3.Metadata.getDefaultInstance() : metadataMatch_;
      } else {
        return metadataMatchBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Optional endpoint metadata match criteria used by the subset load balancer. Only endpoints
     * in the upstream cluster with metadata matching what's set in this field will be considered
     * for load balancing. If using :ref:`weighted_clusters
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.weighted_clusters&gt;`, metadata will be merged, with values
     * provided there taking precedence. The filter name should be specified as ``envoy.lb``.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Metadata metadata_match = 4;</code>
     */
    public Builder setMetadataMatch(io.envoyproxy.envoy.config.core.v3.Metadata value) {
      if (metadataMatchBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadataMatch_ = value;
      } else {
        metadataMatchBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional endpoint metadata match criteria used by the subset load balancer. Only endpoints
     * in the upstream cluster with metadata matching what's set in this field will be considered
     * for load balancing. If using :ref:`weighted_clusters
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.weighted_clusters&gt;`, metadata will be merged, with values
     * provided there taking precedence. The filter name should be specified as ``envoy.lb``.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Metadata metadata_match = 4;</code>
     */
    public Builder setMetadataMatch(
        io.envoyproxy.envoy.config.core.v3.Metadata.Builder builderForValue) {
      if (metadataMatchBuilder_ == null) {
        metadataMatch_ = builderForValue.build();
      } else {
        metadataMatchBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional endpoint metadata match criteria used by the subset load balancer. Only endpoints
     * in the upstream cluster with metadata matching what's set in this field will be considered
     * for load balancing. If using :ref:`weighted_clusters
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.weighted_clusters&gt;`, metadata will be merged, with values
     * provided there taking precedence. The filter name should be specified as ``envoy.lb``.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Metadata metadata_match = 4;</code>
     */
    public Builder mergeMetadataMatch(io.envoyproxy.envoy.config.core.v3.Metadata value) {
      if (metadataMatchBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0) &&
          metadataMatch_ != null &&
          metadataMatch_ != io.envoyproxy.envoy.config.core.v3.Metadata.getDefaultInstance()) {
          getMetadataMatchBuilder().mergeFrom(value);
        } else {
          metadataMatch_ = value;
        }
      } else {
        metadataMatchBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional endpoint metadata match criteria used by the subset load balancer. Only endpoints
     * in the upstream cluster with metadata matching what's set in this field will be considered
     * for load balancing. If using :ref:`weighted_clusters
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.weighted_clusters&gt;`, metadata will be merged, with values
     * provided there taking precedence. The filter name should be specified as ``envoy.lb``.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Metadata metadata_match = 4;</code>
     */
    public Builder clearMetadataMatch() {
      bitField0_ = (bitField0_ & ~0x00000040);
      metadataMatch_ = null;
      if (metadataMatchBuilder_ != null) {
        metadataMatchBuilder_.dispose();
        metadataMatchBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional endpoint metadata match criteria used by the subset load balancer. Only endpoints
     * in the upstream cluster with metadata matching what's set in this field will be considered
     * for load balancing. If using :ref:`weighted_clusters
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.weighted_clusters&gt;`, metadata will be merged, with values
     * provided there taking precedence. The filter name should be specified as ``envoy.lb``.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Metadata metadata_match = 4;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.Metadata.Builder getMetadataMatchBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getMetadataMatchFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Optional endpoint metadata match criteria used by the subset load balancer. Only endpoints
     * in the upstream cluster with metadata matching what's set in this field will be considered
     * for load balancing. If using :ref:`weighted_clusters
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.weighted_clusters&gt;`, metadata will be merged, with values
     * provided there taking precedence. The filter name should be specified as ``envoy.lb``.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Metadata metadata_match = 4;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.MetadataOrBuilder getMetadataMatchOrBuilder() {
      if (metadataMatchBuilder_ != null) {
        return metadataMatchBuilder_.getMessageOrBuilder();
      } else {
        return metadataMatch_ == null ?
            io.envoyproxy.envoy.config.core.v3.Metadata.getDefaultInstance() : metadataMatch_;
      }
    }
    /**
     * <pre>
     * Optional endpoint metadata match criteria used by the subset load balancer. Only endpoints
     * in the upstream cluster with metadata matching what's set in this field will be considered
     * for load balancing. If using :ref:`weighted_clusters
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.weighted_clusters&gt;`, metadata will be merged, with values
     * provided there taking precedence. The filter name should be specified as ``envoy.lb``.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Metadata metadata_match = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.Metadata, io.envoyproxy.envoy.config.core.v3.Metadata.Builder, io.envoyproxy.envoy.config.core.v3.MetadataOrBuilder> 
        getMetadataMatchFieldBuilder() {
      if (metadataMatchBuilder_ == null) {
        metadataMatchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.Metadata, io.envoyproxy.envoy.config.core.v3.Metadata.Builder, io.envoyproxy.envoy.config.core.v3.MetadataOrBuilder>(
                getMetadataMatch(),
                getParentForChildren(),
                isClean());
        metadataMatch_ = null;
      }
      return metadataMatchBuilder_;
    }

    private java.lang.Object prefixRewrite_ = "";
    /**
     * <pre>
     * Indicates that during forwarding, the matched prefix (or path) should be
     * swapped with this value. This option allows application URLs to be rooted
     * at a different path from those exposed at the reverse proxy layer. The router filter will
     * place the original path before rewrite into the :ref:`x-envoy-original-path
     * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
     * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`
     * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`,
     * or :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;` may be specified.
     * .. attention::
     *   Pay careful attention to the use of trailing slashes in the
     *   :ref:`route's match &lt;envoy_v3_api_field_config.route.v3.Route.match&gt;` prefix value.
     *   Stripping a prefix from a path requires multiple Routes to handle all cases. For example,
     *   rewriting ``/prefix`` to ``/`` and ``/prefix/etc`` to ``/etc`` cannot be done in a single
     *   :ref:`Route &lt;envoy_v3_api_msg_config.route.v3.Route&gt;`, as shown by the below config entries:
     *   .. code-block:: yaml
     *     - match:
     *         prefix: "/prefix/"
     *       route:
     *         prefix_rewrite: "/"
     *     - match:
     *         prefix: "/prefix"
     *       route:
     *         prefix_rewrite: "/"
     *   Having above entries in the config, requests to ``/prefix`` will be stripped to ``/``, while
     *   requests to ``/prefix/etc`` will be stripped to ``/etc``.
     * </pre>
     *
     * <code>string prefix_rewrite = 5 [(.validate.rules) = { ... }</code>
     * @return The prefixRewrite.
     */
    public java.lang.String getPrefixRewrite() {
      java.lang.Object ref = prefixRewrite_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        prefixRewrite_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Indicates that during forwarding, the matched prefix (or path) should be
     * swapped with this value. This option allows application URLs to be rooted
     * at a different path from those exposed at the reverse proxy layer. The router filter will
     * place the original path before rewrite into the :ref:`x-envoy-original-path
     * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
     * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`
     * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`,
     * or :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;` may be specified.
     * .. attention::
     *   Pay careful attention to the use of trailing slashes in the
     *   :ref:`route's match &lt;envoy_v3_api_field_config.route.v3.Route.match&gt;` prefix value.
     *   Stripping a prefix from a path requires multiple Routes to handle all cases. For example,
     *   rewriting ``/prefix`` to ``/`` and ``/prefix/etc`` to ``/etc`` cannot be done in a single
     *   :ref:`Route &lt;envoy_v3_api_msg_config.route.v3.Route&gt;`, as shown by the below config entries:
     *   .. code-block:: yaml
     *     - match:
     *         prefix: "/prefix/"
     *       route:
     *         prefix_rewrite: "/"
     *     - match:
     *         prefix: "/prefix"
     *       route:
     *         prefix_rewrite: "/"
     *   Having above entries in the config, requests to ``/prefix`` will be stripped to ``/``, while
     *   requests to ``/prefix/etc`` will be stripped to ``/etc``.
     * </pre>
     *
     * <code>string prefix_rewrite = 5 [(.validate.rules) = { ... }</code>
     * @return The bytes for prefixRewrite.
     */
    public com.google.protobuf.ByteString
        getPrefixRewriteBytes() {
      java.lang.Object ref = prefixRewrite_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        prefixRewrite_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Indicates that during forwarding, the matched prefix (or path) should be
     * swapped with this value. This option allows application URLs to be rooted
     * at a different path from those exposed at the reverse proxy layer. The router filter will
     * place the original path before rewrite into the :ref:`x-envoy-original-path
     * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
     * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`
     * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`,
     * or :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;` may be specified.
     * .. attention::
     *   Pay careful attention to the use of trailing slashes in the
     *   :ref:`route's match &lt;envoy_v3_api_field_config.route.v3.Route.match&gt;` prefix value.
     *   Stripping a prefix from a path requires multiple Routes to handle all cases. For example,
     *   rewriting ``/prefix`` to ``/`` and ``/prefix/etc`` to ``/etc`` cannot be done in a single
     *   :ref:`Route &lt;envoy_v3_api_msg_config.route.v3.Route&gt;`, as shown by the below config entries:
     *   .. code-block:: yaml
     *     - match:
     *         prefix: "/prefix/"
     *       route:
     *         prefix_rewrite: "/"
     *     - match:
     *         prefix: "/prefix"
     *       route:
     *         prefix_rewrite: "/"
     *   Having above entries in the config, requests to ``/prefix`` will be stripped to ``/``, while
     *   requests to ``/prefix/etc`` will be stripped to ``/etc``.
     * </pre>
     *
     * <code>string prefix_rewrite = 5 [(.validate.rules) = { ... }</code>
     * @param value The prefixRewrite to set.
     * @return This builder for chaining.
     */
    public Builder setPrefixRewrite(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      prefixRewrite_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that during forwarding, the matched prefix (or path) should be
     * swapped with this value. This option allows application URLs to be rooted
     * at a different path from those exposed at the reverse proxy layer. The router filter will
     * place the original path before rewrite into the :ref:`x-envoy-original-path
     * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
     * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`
     * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`,
     * or :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;` may be specified.
     * .. attention::
     *   Pay careful attention to the use of trailing slashes in the
     *   :ref:`route's match &lt;envoy_v3_api_field_config.route.v3.Route.match&gt;` prefix value.
     *   Stripping a prefix from a path requires multiple Routes to handle all cases. For example,
     *   rewriting ``/prefix`` to ``/`` and ``/prefix/etc`` to ``/etc`` cannot be done in a single
     *   :ref:`Route &lt;envoy_v3_api_msg_config.route.v3.Route&gt;`, as shown by the below config entries:
     *   .. code-block:: yaml
     *     - match:
     *         prefix: "/prefix/"
     *       route:
     *         prefix_rewrite: "/"
     *     - match:
     *         prefix: "/prefix"
     *       route:
     *         prefix_rewrite: "/"
     *   Having above entries in the config, requests to ``/prefix`` will be stripped to ``/``, while
     *   requests to ``/prefix/etc`` will be stripped to ``/etc``.
     * </pre>
     *
     * <code>string prefix_rewrite = 5 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearPrefixRewrite() {
      prefixRewrite_ = getDefaultInstance().getPrefixRewrite();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that during forwarding, the matched prefix (or path) should be
     * swapped with this value. This option allows application URLs to be rooted
     * at a different path from those exposed at the reverse proxy layer. The router filter will
     * place the original path before rewrite into the :ref:`x-envoy-original-path
     * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
     * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`
     * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`,
     * or :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;` may be specified.
     * .. attention::
     *   Pay careful attention to the use of trailing slashes in the
     *   :ref:`route's match &lt;envoy_v3_api_field_config.route.v3.Route.match&gt;` prefix value.
     *   Stripping a prefix from a path requires multiple Routes to handle all cases. For example,
     *   rewriting ``/prefix`` to ``/`` and ``/prefix/etc`` to ``/etc`` cannot be done in a single
     *   :ref:`Route &lt;envoy_v3_api_msg_config.route.v3.Route&gt;`, as shown by the below config entries:
     *   .. code-block:: yaml
     *     - match:
     *         prefix: "/prefix/"
     *       route:
     *         prefix_rewrite: "/"
     *     - match:
     *         prefix: "/prefix"
     *       route:
     *         prefix_rewrite: "/"
     *   Having above entries in the config, requests to ``/prefix`` will be stripped to ``/``, while
     *   requests to ``/prefix/etc`` will be stripped to ``/etc``.
     * </pre>
     *
     * <code>string prefix_rewrite = 5 [(.validate.rules) = { ... }</code>
     * @param value The bytes for prefixRewrite to set.
     * @return This builder for chaining.
     */
    public Builder setPrefixRewriteBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      prefixRewrite_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute regexRewrite_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder> regexRewriteBuilder_;
    /**
     * <pre>
     * Indicates that during forwarding, portions of the path that match the
     * pattern should be rewritten, even allowing the substitution of capture
     * groups from the pattern into the new path as specified by the rewrite
     * substitution string. This is useful to allow application paths to be
     * rewritten in a way that is aware of segments with variable content like
     * identifiers. The router filter will place the original path as it was
     * before the rewrite into the :ref:`x-envoy-original-path
     * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
     * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`,
     * :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;`, or
     * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`]
     * may be specified.
     * Examples using Google's `RE2 &lt;https://github.com/google/re2&gt;`_ engine:
     * * The path pattern ``^/service/([^/]+)(/.*)$`` paired with a substitution
     *   string of ``&#92;2/instance/&#92;1`` would transform ``/service/foo/v1/api``
     *   into ``/v1/api/instance/foo``.
     * * The pattern ``one`` paired with a substitution string of ``two`` would
     *   transform ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/two/zzz``.
     * * The pattern ``^(.*?)one(.*)$`` paired with a substitution string of
     *   ``&#92;1two&#92;2`` would replace only the first occurrence of ``one``,
     *   transforming path ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/one/zzz``.
     * * The pattern ``(?i)/xxx/`` paired with a substitution string of ``/yyy/``
     *   would do a case-insensitive match and transform path ``/aaa/XxX/bbb`` to
     *   ``/aaa/yyy/bbb``.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 32;</code>
     * @return Whether the regexRewrite field is set.
     */
    public boolean hasRegexRewrite() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Indicates that during forwarding, portions of the path that match the
     * pattern should be rewritten, even allowing the substitution of capture
     * groups from the pattern into the new path as specified by the rewrite
     * substitution string. This is useful to allow application paths to be
     * rewritten in a way that is aware of segments with variable content like
     * identifiers. The router filter will place the original path as it was
     * before the rewrite into the :ref:`x-envoy-original-path
     * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
     * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`,
     * :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;`, or
     * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`]
     * may be specified.
     * Examples using Google's `RE2 &lt;https://github.com/google/re2&gt;`_ engine:
     * * The path pattern ``^/service/([^/]+)(/.*)$`` paired with a substitution
     *   string of ``&#92;2/instance/&#92;1`` would transform ``/service/foo/v1/api``
     *   into ``/v1/api/instance/foo``.
     * * The pattern ``one`` paired with a substitution string of ``two`` would
     *   transform ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/two/zzz``.
     * * The pattern ``^(.*?)one(.*)$`` paired with a substitution string of
     *   ``&#92;1two&#92;2`` would replace only the first occurrence of ``one``,
     *   transforming path ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/one/zzz``.
     * * The pattern ``(?i)/xxx/`` paired with a substitution string of ``/yyy/``
     *   would do a case-insensitive match and transform path ``/aaa/XxX/bbb`` to
     *   ``/aaa/yyy/bbb``.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 32;</code>
     * @return The regexRewrite.
     */
    public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute getRegexRewrite() {
      if (regexRewriteBuilder_ == null) {
        return regexRewrite_ == null ? io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance() : regexRewrite_;
      } else {
        return regexRewriteBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Indicates that during forwarding, portions of the path that match the
     * pattern should be rewritten, even allowing the substitution of capture
     * groups from the pattern into the new path as specified by the rewrite
     * substitution string. This is useful to allow application paths to be
     * rewritten in a way that is aware of segments with variable content like
     * identifiers. The router filter will place the original path as it was
     * before the rewrite into the :ref:`x-envoy-original-path
     * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
     * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`,
     * :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;`, or
     * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`]
     * may be specified.
     * Examples using Google's `RE2 &lt;https://github.com/google/re2&gt;`_ engine:
     * * The path pattern ``^/service/([^/]+)(/.*)$`` paired with a substitution
     *   string of ``&#92;2/instance/&#92;1`` would transform ``/service/foo/v1/api``
     *   into ``/v1/api/instance/foo``.
     * * The pattern ``one`` paired with a substitution string of ``two`` would
     *   transform ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/two/zzz``.
     * * The pattern ``^(.*?)one(.*)$`` paired with a substitution string of
     *   ``&#92;1two&#92;2`` would replace only the first occurrence of ``one``,
     *   transforming path ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/one/zzz``.
     * * The pattern ``(?i)/xxx/`` paired with a substitution string of ``/yyy/``
     *   would do a case-insensitive match and transform path ``/aaa/XxX/bbb`` to
     *   ``/aaa/yyy/bbb``.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 32;</code>
     */
    public Builder setRegexRewrite(io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute value) {
      if (regexRewriteBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        regexRewrite_ = value;
      } else {
        regexRewriteBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that during forwarding, portions of the path that match the
     * pattern should be rewritten, even allowing the substitution of capture
     * groups from the pattern into the new path as specified by the rewrite
     * substitution string. This is useful to allow application paths to be
     * rewritten in a way that is aware of segments with variable content like
     * identifiers. The router filter will place the original path as it was
     * before the rewrite into the :ref:`x-envoy-original-path
     * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
     * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`,
     * :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;`, or
     * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`]
     * may be specified.
     * Examples using Google's `RE2 &lt;https://github.com/google/re2&gt;`_ engine:
     * * The path pattern ``^/service/([^/]+)(/.*)$`` paired with a substitution
     *   string of ``&#92;2/instance/&#92;1`` would transform ``/service/foo/v1/api``
     *   into ``/v1/api/instance/foo``.
     * * The pattern ``one`` paired with a substitution string of ``two`` would
     *   transform ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/two/zzz``.
     * * The pattern ``^(.*?)one(.*)$`` paired with a substitution string of
     *   ``&#92;1two&#92;2`` would replace only the first occurrence of ``one``,
     *   transforming path ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/one/zzz``.
     * * The pattern ``(?i)/xxx/`` paired with a substitution string of ``/yyy/``
     *   would do a case-insensitive match and transform path ``/aaa/XxX/bbb`` to
     *   ``/aaa/yyy/bbb``.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 32;</code>
     */
    public Builder setRegexRewrite(
        io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder builderForValue) {
      if (regexRewriteBuilder_ == null) {
        regexRewrite_ = builderForValue.build();
      } else {
        regexRewriteBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that during forwarding, portions of the path that match the
     * pattern should be rewritten, even allowing the substitution of capture
     * groups from the pattern into the new path as specified by the rewrite
     * substitution string. This is useful to allow application paths to be
     * rewritten in a way that is aware of segments with variable content like
     * identifiers. The router filter will place the original path as it was
     * before the rewrite into the :ref:`x-envoy-original-path
     * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
     * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`,
     * :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;`, or
     * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`]
     * may be specified.
     * Examples using Google's `RE2 &lt;https://github.com/google/re2&gt;`_ engine:
     * * The path pattern ``^/service/([^/]+)(/.*)$`` paired with a substitution
     *   string of ``&#92;2/instance/&#92;1`` would transform ``/service/foo/v1/api``
     *   into ``/v1/api/instance/foo``.
     * * The pattern ``one`` paired with a substitution string of ``two`` would
     *   transform ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/two/zzz``.
     * * The pattern ``^(.*?)one(.*)$`` paired with a substitution string of
     *   ``&#92;1two&#92;2`` would replace only the first occurrence of ``one``,
     *   transforming path ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/one/zzz``.
     * * The pattern ``(?i)/xxx/`` paired with a substitution string of ``/yyy/``
     *   would do a case-insensitive match and transform path ``/aaa/XxX/bbb`` to
     *   ``/aaa/yyy/bbb``.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 32;</code>
     */
    public Builder mergeRegexRewrite(io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute value) {
      if (regexRewriteBuilder_ == null) {
        if (((bitField0_ & 0x00000100) != 0) &&
          regexRewrite_ != null &&
          regexRewrite_ != io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance()) {
          getRegexRewriteBuilder().mergeFrom(value);
        } else {
          regexRewrite_ = value;
        }
      } else {
        regexRewriteBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that during forwarding, portions of the path that match the
     * pattern should be rewritten, even allowing the substitution of capture
     * groups from the pattern into the new path as specified by the rewrite
     * substitution string. This is useful to allow application paths to be
     * rewritten in a way that is aware of segments with variable content like
     * identifiers. The router filter will place the original path as it was
     * before the rewrite into the :ref:`x-envoy-original-path
     * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
     * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`,
     * :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;`, or
     * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`]
     * may be specified.
     * Examples using Google's `RE2 &lt;https://github.com/google/re2&gt;`_ engine:
     * * The path pattern ``^/service/([^/]+)(/.*)$`` paired with a substitution
     *   string of ``&#92;2/instance/&#92;1`` would transform ``/service/foo/v1/api``
     *   into ``/v1/api/instance/foo``.
     * * The pattern ``one`` paired with a substitution string of ``two`` would
     *   transform ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/two/zzz``.
     * * The pattern ``^(.*?)one(.*)$`` paired with a substitution string of
     *   ``&#92;1two&#92;2`` would replace only the first occurrence of ``one``,
     *   transforming path ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/one/zzz``.
     * * The pattern ``(?i)/xxx/`` paired with a substitution string of ``/yyy/``
     *   would do a case-insensitive match and transform path ``/aaa/XxX/bbb`` to
     *   ``/aaa/yyy/bbb``.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 32;</code>
     */
    public Builder clearRegexRewrite() {
      bitField0_ = (bitField0_ & ~0x00000100);
      regexRewrite_ = null;
      if (regexRewriteBuilder_ != null) {
        regexRewriteBuilder_.dispose();
        regexRewriteBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that during forwarding, portions of the path that match the
     * pattern should be rewritten, even allowing the substitution of capture
     * groups from the pattern into the new path as specified by the rewrite
     * substitution string. This is useful to allow application paths to be
     * rewritten in a way that is aware of segments with variable content like
     * identifiers. The router filter will place the original path as it was
     * before the rewrite into the :ref:`x-envoy-original-path
     * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
     * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`,
     * :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;`, or
     * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`]
     * may be specified.
     * Examples using Google's `RE2 &lt;https://github.com/google/re2&gt;`_ engine:
     * * The path pattern ``^/service/([^/]+)(/.*)$`` paired with a substitution
     *   string of ``&#92;2/instance/&#92;1`` would transform ``/service/foo/v1/api``
     *   into ``/v1/api/instance/foo``.
     * * The pattern ``one`` paired with a substitution string of ``two`` would
     *   transform ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/two/zzz``.
     * * The pattern ``^(.*?)one(.*)$`` paired with a substitution string of
     *   ``&#92;1two&#92;2`` would replace only the first occurrence of ``one``,
     *   transforming path ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/one/zzz``.
     * * The pattern ``(?i)/xxx/`` paired with a substitution string of ``/yyy/``
     *   would do a case-insensitive match and transform path ``/aaa/XxX/bbb`` to
     *   ``/aaa/yyy/bbb``.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 32;</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder getRegexRewriteBuilder() {
      bitField0_ |= 0x00000100;
      onChanged();
      return getRegexRewriteFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Indicates that during forwarding, portions of the path that match the
     * pattern should be rewritten, even allowing the substitution of capture
     * groups from the pattern into the new path as specified by the rewrite
     * substitution string. This is useful to allow application paths to be
     * rewritten in a way that is aware of segments with variable content like
     * identifiers. The router filter will place the original path as it was
     * before the rewrite into the :ref:`x-envoy-original-path
     * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
     * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`,
     * :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;`, or
     * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`]
     * may be specified.
     * Examples using Google's `RE2 &lt;https://github.com/google/re2&gt;`_ engine:
     * * The path pattern ``^/service/([^/]+)(/.*)$`` paired with a substitution
     *   string of ``&#92;2/instance/&#92;1`` would transform ``/service/foo/v1/api``
     *   into ``/v1/api/instance/foo``.
     * * The pattern ``one`` paired with a substitution string of ``two`` would
     *   transform ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/two/zzz``.
     * * The pattern ``^(.*?)one(.*)$`` paired with a substitution string of
     *   ``&#92;1two&#92;2`` would replace only the first occurrence of ``one``,
     *   transforming path ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/one/zzz``.
     * * The pattern ``(?i)/xxx/`` paired with a substitution string of ``/yyy/``
     *   would do a case-insensitive match and transform path ``/aaa/XxX/bbb`` to
     *   ``/aaa/yyy/bbb``.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 32;</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder getRegexRewriteOrBuilder() {
      if (regexRewriteBuilder_ != null) {
        return regexRewriteBuilder_.getMessageOrBuilder();
      } else {
        return regexRewrite_ == null ?
            io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance() : regexRewrite_;
      }
    }
    /**
     * <pre>
     * Indicates that during forwarding, portions of the path that match the
     * pattern should be rewritten, even allowing the substitution of capture
     * groups from the pattern into the new path as specified by the rewrite
     * substitution string. This is useful to allow application paths to be
     * rewritten in a way that is aware of segments with variable content like
     * identifiers. The router filter will place the original path as it was
     * before the rewrite into the :ref:`x-envoy-original-path
     * &lt;config_http_filters_router_x-envoy-original-path&gt;` header.
     * Only one of :ref:`regex_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite&gt;`,
     * :ref:`prefix_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite&gt;`, or
     * :ref:`path_rewrite_policy &lt;envoy_v3_api_field_config.route.v3.RouteAction.path_rewrite_policy&gt;`]
     * may be specified.
     * Examples using Google's `RE2 &lt;https://github.com/google/re2&gt;`_ engine:
     * * The path pattern ``^/service/([^/]+)(/.*)$`` paired with a substitution
     *   string of ``&#92;2/instance/&#92;1`` would transform ``/service/foo/v1/api``
     *   into ``/v1/api/instance/foo``.
     * * The pattern ``one`` paired with a substitution string of ``two`` would
     *   transform ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/two/zzz``.
     * * The pattern ``^(.*?)one(.*)$`` paired with a substitution string of
     *   ``&#92;1two&#92;2`` would replace only the first occurrence of ``one``,
     *   transforming path ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/one/zzz``.
     * * The pattern ``(?i)/xxx/`` paired with a substitution string of ``/yyy/``
     *   would do a case-insensitive match and transform path ``/aaa/XxX/bbb`` to
     *   ``/aaa/yyy/bbb``.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute regex_rewrite = 32;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder> 
        getRegexRewriteFieldBuilder() {
      if (regexRewriteBuilder_ == null) {
        regexRewriteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder>(
                getRegexRewrite(),
                getParentForChildren(),
                isClean());
        regexRewrite_ = null;
      }
      return regexRewriteBuilder_;
    }

    private io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig pathRewritePolicy_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder> pathRewritePolicyBuilder_;
    /**
     * <pre>
     * [#extension-category: envoy.path.rewrite]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig path_rewrite_policy = 41;</code>
     * @return Whether the pathRewritePolicy field is set.
     */
    public boolean hasPathRewritePolicy() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * [#extension-category: envoy.path.rewrite]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig path_rewrite_policy = 41;</code>
     * @return The pathRewritePolicy.
     */
    public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig getPathRewritePolicy() {
      if (pathRewritePolicyBuilder_ == null) {
        return pathRewritePolicy_ == null ? io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance() : pathRewritePolicy_;
      } else {
        return pathRewritePolicyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * [#extension-category: envoy.path.rewrite]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig path_rewrite_policy = 41;</code>
     */
    public Builder setPathRewritePolicy(io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig value) {
      if (pathRewritePolicyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        pathRewritePolicy_ = value;
      } else {
        pathRewritePolicyBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#extension-category: envoy.path.rewrite]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig path_rewrite_policy = 41;</code>
     */
    public Builder setPathRewritePolicy(
        io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder builderForValue) {
      if (pathRewritePolicyBuilder_ == null) {
        pathRewritePolicy_ = builderForValue.build();
      } else {
        pathRewritePolicyBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#extension-category: envoy.path.rewrite]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig path_rewrite_policy = 41;</code>
     */
    public Builder mergePathRewritePolicy(io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig value) {
      if (pathRewritePolicyBuilder_ == null) {
        if (((bitField0_ & 0x00000200) != 0) &&
          pathRewritePolicy_ != null &&
          pathRewritePolicy_ != io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance()) {
          getPathRewritePolicyBuilder().mergeFrom(value);
        } else {
          pathRewritePolicy_ = value;
        }
      } else {
        pathRewritePolicyBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#extension-category: envoy.path.rewrite]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig path_rewrite_policy = 41;</code>
     */
    public Builder clearPathRewritePolicy() {
      bitField0_ = (bitField0_ & ~0x00000200);
      pathRewritePolicy_ = null;
      if (pathRewritePolicyBuilder_ != null) {
        pathRewritePolicyBuilder_.dispose();
        pathRewritePolicyBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#extension-category: envoy.path.rewrite]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig path_rewrite_policy = 41;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder getPathRewritePolicyBuilder() {
      bitField0_ |= 0x00000200;
      onChanged();
      return getPathRewritePolicyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * [#extension-category: envoy.path.rewrite]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig path_rewrite_policy = 41;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder getPathRewritePolicyOrBuilder() {
      if (pathRewritePolicyBuilder_ != null) {
        return pathRewritePolicyBuilder_.getMessageOrBuilder();
      } else {
        return pathRewritePolicy_ == null ?
            io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance() : pathRewritePolicy_;
      }
    }
    /**
     * <pre>
     * [#extension-category: envoy.path.rewrite]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig path_rewrite_policy = 41;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder> 
        getPathRewritePolicyFieldBuilder() {
      if (pathRewritePolicyBuilder_ == null) {
        pathRewritePolicyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder>(
                getPathRewritePolicy(),
                getParentForChildren(),
                isClean());
        pathRewritePolicy_ = null;
      }
      return pathRewritePolicyBuilder_;
    }

    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * this value. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * </pre>
     *
     * <code>string host_rewrite_literal = 6 [(.validate.rules) = { ... }</code>
     * @return Whether the hostRewriteLiteral field is set.
     */
    @java.lang.Override
    public boolean hasHostRewriteLiteral() {
      return hostRewriteSpecifierCase_ == 6;
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * this value. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * </pre>
     *
     * <code>string host_rewrite_literal = 6 [(.validate.rules) = { ... }</code>
     * @return The hostRewriteLiteral.
     */
    @java.lang.Override
    public java.lang.String getHostRewriteLiteral() {
      java.lang.Object ref = "";
      if (hostRewriteSpecifierCase_ == 6) {
        ref = hostRewriteSpecifier_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (hostRewriteSpecifierCase_ == 6) {
          hostRewriteSpecifier_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * this value. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * </pre>
     *
     * <code>string host_rewrite_literal = 6 [(.validate.rules) = { ... }</code>
     * @return The bytes for hostRewriteLiteral.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getHostRewriteLiteralBytes() {
      java.lang.Object ref = "";
      if (hostRewriteSpecifierCase_ == 6) {
        ref = hostRewriteSpecifier_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (hostRewriteSpecifierCase_ == 6) {
          hostRewriteSpecifier_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * this value. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * </pre>
     *
     * <code>string host_rewrite_literal = 6 [(.validate.rules) = { ... }</code>
     * @param value The hostRewriteLiteral to set.
     * @return This builder for chaining.
     */
    public Builder setHostRewriteLiteral(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      hostRewriteSpecifierCase_ = 6;
      hostRewriteSpecifier_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * this value. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * </pre>
     *
     * <code>string host_rewrite_literal = 6 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearHostRewriteLiteral() {
      if (hostRewriteSpecifierCase_ == 6) {
        hostRewriteSpecifierCase_ = 0;
        hostRewriteSpecifier_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * this value. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * </pre>
     *
     * <code>string host_rewrite_literal = 6 [(.validate.rules) = { ... }</code>
     * @param value The bytes for hostRewriteLiteral to set.
     * @return This builder for chaining.
     */
    public Builder setHostRewriteLiteralBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      hostRewriteSpecifierCase_ = 6;
      hostRewriteSpecifier_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> autoHostRewriteBuilder_;
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * the hostname of the upstream host chosen by the cluster manager. This
     * option is applicable only when the destination cluster for a route is of
     * type ``strict_dns`` or ``logical_dns``. Setting this to true with other cluster types
     * has no effect. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue auto_host_rewrite = 7;</code>
     * @return Whether the autoHostRewrite field is set.
     */
    @java.lang.Override
    public boolean hasAutoHostRewrite() {
      return hostRewriteSpecifierCase_ == 7;
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * the hostname of the upstream host chosen by the cluster manager. This
     * option is applicable only when the destination cluster for a route is of
     * type ``strict_dns`` or ``logical_dns``. Setting this to true with other cluster types
     * has no effect. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue auto_host_rewrite = 7;</code>
     * @return The autoHostRewrite.
     */
    @java.lang.Override
    public com.google.protobuf.BoolValue getAutoHostRewrite() {
      if (autoHostRewriteBuilder_ == null) {
        if (hostRewriteSpecifierCase_ == 7) {
          return (com.google.protobuf.BoolValue) hostRewriteSpecifier_;
        }
        return com.google.protobuf.BoolValue.getDefaultInstance();
      } else {
        if (hostRewriteSpecifierCase_ == 7) {
          return autoHostRewriteBuilder_.getMessage();
        }
        return com.google.protobuf.BoolValue.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * the hostname of the upstream host chosen by the cluster manager. This
     * option is applicable only when the destination cluster for a route is of
     * type ``strict_dns`` or ``logical_dns``. Setting this to true with other cluster types
     * has no effect. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue auto_host_rewrite = 7;</code>
     */
    public Builder setAutoHostRewrite(com.google.protobuf.BoolValue value) {
      if (autoHostRewriteBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        hostRewriteSpecifier_ = value;
        onChanged();
      } else {
        autoHostRewriteBuilder_.setMessage(value);
      }
      hostRewriteSpecifierCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * the hostname of the upstream host chosen by the cluster manager. This
     * option is applicable only when the destination cluster for a route is of
     * type ``strict_dns`` or ``logical_dns``. Setting this to true with other cluster types
     * has no effect. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue auto_host_rewrite = 7;</code>
     */
    public Builder setAutoHostRewrite(
        com.google.protobuf.BoolValue.Builder builderForValue) {
      if (autoHostRewriteBuilder_ == null) {
        hostRewriteSpecifier_ = builderForValue.build();
        onChanged();
      } else {
        autoHostRewriteBuilder_.setMessage(builderForValue.build());
      }
      hostRewriteSpecifierCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * the hostname of the upstream host chosen by the cluster manager. This
     * option is applicable only when the destination cluster for a route is of
     * type ``strict_dns`` or ``logical_dns``. Setting this to true with other cluster types
     * has no effect. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue auto_host_rewrite = 7;</code>
     */
    public Builder mergeAutoHostRewrite(com.google.protobuf.BoolValue value) {
      if (autoHostRewriteBuilder_ == null) {
        if (hostRewriteSpecifierCase_ == 7 &&
            hostRewriteSpecifier_ != com.google.protobuf.BoolValue.getDefaultInstance()) {
          hostRewriteSpecifier_ = com.google.protobuf.BoolValue.newBuilder((com.google.protobuf.BoolValue) hostRewriteSpecifier_)
              .mergeFrom(value).buildPartial();
        } else {
          hostRewriteSpecifier_ = value;
        }
        onChanged();
      } else {
        if (hostRewriteSpecifierCase_ == 7) {
          autoHostRewriteBuilder_.mergeFrom(value);
        } else {
          autoHostRewriteBuilder_.setMessage(value);
        }
      }
      hostRewriteSpecifierCase_ = 7;
      return this;
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * the hostname of the upstream host chosen by the cluster manager. This
     * option is applicable only when the destination cluster for a route is of
     * type ``strict_dns`` or ``logical_dns``. Setting this to true with other cluster types
     * has no effect. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue auto_host_rewrite = 7;</code>
     */
    public Builder clearAutoHostRewrite() {
      if (autoHostRewriteBuilder_ == null) {
        if (hostRewriteSpecifierCase_ == 7) {
          hostRewriteSpecifierCase_ = 0;
          hostRewriteSpecifier_ = null;
          onChanged();
        }
      } else {
        if (hostRewriteSpecifierCase_ == 7) {
          hostRewriteSpecifierCase_ = 0;
          hostRewriteSpecifier_ = null;
        }
        autoHostRewriteBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * the hostname of the upstream host chosen by the cluster manager. This
     * option is applicable only when the destination cluster for a route is of
     * type ``strict_dns`` or ``logical_dns``. Setting this to true with other cluster types
     * has no effect. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue auto_host_rewrite = 7;</code>
     */
    public com.google.protobuf.BoolValue.Builder getAutoHostRewriteBuilder() {
      return getAutoHostRewriteFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * the hostname of the upstream host chosen by the cluster manager. This
     * option is applicable only when the destination cluster for a route is of
     * type ``strict_dns`` or ``logical_dns``. Setting this to true with other cluster types
     * has no effect. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue auto_host_rewrite = 7;</code>
     */
    @java.lang.Override
    public com.google.protobuf.BoolValueOrBuilder getAutoHostRewriteOrBuilder() {
      if ((hostRewriteSpecifierCase_ == 7) && (autoHostRewriteBuilder_ != null)) {
        return autoHostRewriteBuilder_.getMessageOrBuilder();
      } else {
        if (hostRewriteSpecifierCase_ == 7) {
          return (com.google.protobuf.BoolValue) hostRewriteSpecifier_;
        }
        return com.google.protobuf.BoolValue.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * the hostname of the upstream host chosen by the cluster manager. This
     * option is applicable only when the destination cluster for a route is of
     * type ``strict_dns`` or ``logical_dns``. Setting this to true with other cluster types
     * has no effect. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * </pre>
     *
     * <code>.google.protobuf.BoolValue auto_host_rewrite = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
        getAutoHostRewriteFieldBuilder() {
      if (autoHostRewriteBuilder_ == null) {
        if (!(hostRewriteSpecifierCase_ == 7)) {
          hostRewriteSpecifier_ = com.google.protobuf.BoolValue.getDefaultInstance();
        }
        autoHostRewriteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                (com.google.protobuf.BoolValue) hostRewriteSpecifier_,
                getParentForChildren(),
                isClean());
        hostRewriteSpecifier_ = null;
      }
      hostRewriteSpecifierCase_ = 7;
      onChanged();
      return autoHostRewriteBuilder_;
    }

    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with the content of given
     * downstream or :ref:`custom &lt;config_http_conn_man_headers_custom_request_headers&gt;` header.
     * If header value is empty, host header is left intact. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * .. attention::
     *   Pay attention to the potential security implications of using this option. Provided header
     *   must come from trusted source.
     * .. note::
     *   If the header appears multiple times only the first value is used.
     * </pre>
     *
     * <code>string host_rewrite_header = 29 [(.validate.rules) = { ... }</code>
     * @return Whether the hostRewriteHeader field is set.
     */
    @java.lang.Override
    public boolean hasHostRewriteHeader() {
      return hostRewriteSpecifierCase_ == 29;
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with the content of given
     * downstream or :ref:`custom &lt;config_http_conn_man_headers_custom_request_headers&gt;` header.
     * If header value is empty, host header is left intact. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * .. attention::
     *   Pay attention to the potential security implications of using this option. Provided header
     *   must come from trusted source.
     * .. note::
     *   If the header appears multiple times only the first value is used.
     * </pre>
     *
     * <code>string host_rewrite_header = 29 [(.validate.rules) = { ... }</code>
     * @return The hostRewriteHeader.
     */
    @java.lang.Override
    public java.lang.String getHostRewriteHeader() {
      java.lang.Object ref = "";
      if (hostRewriteSpecifierCase_ == 29) {
        ref = hostRewriteSpecifier_;
      }
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (hostRewriteSpecifierCase_ == 29) {
          hostRewriteSpecifier_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with the content of given
     * downstream or :ref:`custom &lt;config_http_conn_man_headers_custom_request_headers&gt;` header.
     * If header value is empty, host header is left intact. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * .. attention::
     *   Pay attention to the potential security implications of using this option. Provided header
     *   must come from trusted source.
     * .. note::
     *   If the header appears multiple times only the first value is used.
     * </pre>
     *
     * <code>string host_rewrite_header = 29 [(.validate.rules) = { ... }</code>
     * @return The bytes for hostRewriteHeader.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getHostRewriteHeaderBytes() {
      java.lang.Object ref = "";
      if (hostRewriteSpecifierCase_ == 29) {
        ref = hostRewriteSpecifier_;
      }
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (hostRewriteSpecifierCase_ == 29) {
          hostRewriteSpecifier_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with the content of given
     * downstream or :ref:`custom &lt;config_http_conn_man_headers_custom_request_headers&gt;` header.
     * If header value is empty, host header is left intact. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * .. attention::
     *   Pay attention to the potential security implications of using this option. Provided header
     *   must come from trusted source.
     * .. note::
     *   If the header appears multiple times only the first value is used.
     * </pre>
     *
     * <code>string host_rewrite_header = 29 [(.validate.rules) = { ... }</code>
     * @param value The hostRewriteHeader to set.
     * @return This builder for chaining.
     */
    public Builder setHostRewriteHeader(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      hostRewriteSpecifierCase_ = 29;
      hostRewriteSpecifier_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with the content of given
     * downstream or :ref:`custom &lt;config_http_conn_man_headers_custom_request_headers&gt;` header.
     * If header value is empty, host header is left intact. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * .. attention::
     *   Pay attention to the potential security implications of using this option. Provided header
     *   must come from trusted source.
     * .. note::
     *   If the header appears multiple times only the first value is used.
     * </pre>
     *
     * <code>string host_rewrite_header = 29 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearHostRewriteHeader() {
      if (hostRewriteSpecifierCase_ == 29) {
        hostRewriteSpecifierCase_ = 0;
        hostRewriteSpecifier_ = null;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with the content of given
     * downstream or :ref:`custom &lt;config_http_conn_man_headers_custom_request_headers&gt;` header.
     * If header value is empty, host header is left intact. Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * .. attention::
     *   Pay attention to the potential security implications of using this option. Provided header
     *   must come from trusted source.
     * .. note::
     *   If the header appears multiple times only the first value is used.
     * </pre>
     *
     * <code>string host_rewrite_header = 29 [(.validate.rules) = { ... }</code>
     * @param value The bytes for hostRewriteHeader to set.
     * @return This builder for chaining.
     */
    public Builder setHostRewriteHeaderBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      hostRewriteSpecifierCase_ = 29;
      hostRewriteSpecifier_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder> hostRewritePathRegexBuilder_;
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * the result of the regex substitution executed on path value with query and fragment removed.
     * This is useful for transitioning variable content between path segment and subdomain.
     * Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * For example with the following config:
     *   .. code-block:: yaml
     *     host_rewrite_path_regex:
     *       pattern:
     *         google_re2: {}
     *         regex: "^/(.+)/.+$"
     *       substitution: &#92;1
     * Would rewrite the host header to ``envoyproxy.io`` given the path ``/envoyproxy.io/some/path``.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute host_rewrite_path_regex = 35;</code>
     * @return Whether the hostRewritePathRegex field is set.
     */
    @java.lang.Override
    public boolean hasHostRewritePathRegex() {
      return hostRewriteSpecifierCase_ == 35;
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * the result of the regex substitution executed on path value with query and fragment removed.
     * This is useful for transitioning variable content between path segment and subdomain.
     * Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * For example with the following config:
     *   .. code-block:: yaml
     *     host_rewrite_path_regex:
     *       pattern:
     *         google_re2: {}
     *         regex: "^/(.+)/.+$"
     *       substitution: &#92;1
     * Would rewrite the host header to ``envoyproxy.io`` given the path ``/envoyproxy.io/some/path``.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute host_rewrite_path_regex = 35;</code>
     * @return The hostRewritePathRegex.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute getHostRewritePathRegex() {
      if (hostRewritePathRegexBuilder_ == null) {
        if (hostRewriteSpecifierCase_ == 35) {
          return (io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute) hostRewriteSpecifier_;
        }
        return io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance();
      } else {
        if (hostRewriteSpecifierCase_ == 35) {
          return hostRewritePathRegexBuilder_.getMessage();
        }
        return io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * the result of the regex substitution executed on path value with query and fragment removed.
     * This is useful for transitioning variable content between path segment and subdomain.
     * Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * For example with the following config:
     *   .. code-block:: yaml
     *     host_rewrite_path_regex:
     *       pattern:
     *         google_re2: {}
     *         regex: "^/(.+)/.+$"
     *       substitution: &#92;1
     * Would rewrite the host header to ``envoyproxy.io`` given the path ``/envoyproxy.io/some/path``.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute host_rewrite_path_regex = 35;</code>
     */
    public Builder setHostRewritePathRegex(io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute value) {
      if (hostRewritePathRegexBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        hostRewriteSpecifier_ = value;
        onChanged();
      } else {
        hostRewritePathRegexBuilder_.setMessage(value);
      }
      hostRewriteSpecifierCase_ = 35;
      return this;
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * the result of the regex substitution executed on path value with query and fragment removed.
     * This is useful for transitioning variable content between path segment and subdomain.
     * Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * For example with the following config:
     *   .. code-block:: yaml
     *     host_rewrite_path_regex:
     *       pattern:
     *         google_re2: {}
     *         regex: "^/(.+)/.+$"
     *       substitution: &#92;1
     * Would rewrite the host header to ``envoyproxy.io`` given the path ``/envoyproxy.io/some/path``.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute host_rewrite_path_regex = 35;</code>
     */
    public Builder setHostRewritePathRegex(
        io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder builderForValue) {
      if (hostRewritePathRegexBuilder_ == null) {
        hostRewriteSpecifier_ = builderForValue.build();
        onChanged();
      } else {
        hostRewritePathRegexBuilder_.setMessage(builderForValue.build());
      }
      hostRewriteSpecifierCase_ = 35;
      return this;
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * the result of the regex substitution executed on path value with query and fragment removed.
     * This is useful for transitioning variable content between path segment and subdomain.
     * Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * For example with the following config:
     *   .. code-block:: yaml
     *     host_rewrite_path_regex:
     *       pattern:
     *         google_re2: {}
     *         regex: "^/(.+)/.+$"
     *       substitution: &#92;1
     * Would rewrite the host header to ``envoyproxy.io`` given the path ``/envoyproxy.io/some/path``.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute host_rewrite_path_regex = 35;</code>
     */
    public Builder mergeHostRewritePathRegex(io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute value) {
      if (hostRewritePathRegexBuilder_ == null) {
        if (hostRewriteSpecifierCase_ == 35 &&
            hostRewriteSpecifier_ != io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance()) {
          hostRewriteSpecifier_ = io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.newBuilder((io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute) hostRewriteSpecifier_)
              .mergeFrom(value).buildPartial();
        } else {
          hostRewriteSpecifier_ = value;
        }
        onChanged();
      } else {
        if (hostRewriteSpecifierCase_ == 35) {
          hostRewritePathRegexBuilder_.mergeFrom(value);
        } else {
          hostRewritePathRegexBuilder_.setMessage(value);
        }
      }
      hostRewriteSpecifierCase_ = 35;
      return this;
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * the result of the regex substitution executed on path value with query and fragment removed.
     * This is useful for transitioning variable content between path segment and subdomain.
     * Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * For example with the following config:
     *   .. code-block:: yaml
     *     host_rewrite_path_regex:
     *       pattern:
     *         google_re2: {}
     *         regex: "^/(.+)/.+$"
     *       substitution: &#92;1
     * Would rewrite the host header to ``envoyproxy.io`` given the path ``/envoyproxy.io/some/path``.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute host_rewrite_path_regex = 35;</code>
     */
    public Builder clearHostRewritePathRegex() {
      if (hostRewritePathRegexBuilder_ == null) {
        if (hostRewriteSpecifierCase_ == 35) {
          hostRewriteSpecifierCase_ = 0;
          hostRewriteSpecifier_ = null;
          onChanged();
        }
      } else {
        if (hostRewriteSpecifierCase_ == 35) {
          hostRewriteSpecifierCase_ = 0;
          hostRewriteSpecifier_ = null;
        }
        hostRewritePathRegexBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * the result of the regex substitution executed on path value with query and fragment removed.
     * This is useful for transitioning variable content between path segment and subdomain.
     * Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * For example with the following config:
     *   .. code-block:: yaml
     *     host_rewrite_path_regex:
     *       pattern:
     *         google_re2: {}
     *         regex: "^/(.+)/.+$"
     *       substitution: &#92;1
     * Would rewrite the host header to ``envoyproxy.io`` given the path ``/envoyproxy.io/some/path``.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute host_rewrite_path_regex = 35;</code>
     */
    public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder getHostRewritePathRegexBuilder() {
      return getHostRewritePathRegexFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * the result of the regex substitution executed on path value with query and fragment removed.
     * This is useful for transitioning variable content between path segment and subdomain.
     * Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * For example with the following config:
     *   .. code-block:: yaml
     *     host_rewrite_path_regex:
     *       pattern:
     *         google_re2: {}
     *         regex: "^/(.+)/.+$"
     *       substitution: &#92;1
     * Would rewrite the host header to ``envoyproxy.io`` given the path ``/envoyproxy.io/some/path``.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute host_rewrite_path_regex = 35;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder getHostRewritePathRegexOrBuilder() {
      if ((hostRewriteSpecifierCase_ == 35) && (hostRewritePathRegexBuilder_ != null)) {
        return hostRewritePathRegexBuilder_.getMessageOrBuilder();
      } else {
        if (hostRewriteSpecifierCase_ == 35) {
          return (io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute) hostRewriteSpecifier_;
        }
        return io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * Indicates that during forwarding, the host header will be swapped with
     * the result of the regex substitution executed on path value with query and fragment removed.
     * This is useful for transitioning variable content between path segment and subdomain.
     * Using this option will append the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` header if
     * :ref:`append_x_forwarded_host &lt;envoy_v3_api_field_config.route.v3.RouteAction.append_x_forwarded_host&gt;`
     * is set.
     * For example with the following config:
     *   .. code-block:: yaml
     *     host_rewrite_path_regex:
     *       pattern:
     *         google_re2: {}
     *         regex: "^/(.+)/.+$"
     *       substitution: &#92;1
     * Would rewrite the host header to ``envoyproxy.io`` given the path ``/envoyproxy.io/some/path``.
     * </pre>
     *
     * <code>.envoy.type.matcher.v3.RegexMatchAndSubstitute host_rewrite_path_regex = 35;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder> 
        getHostRewritePathRegexFieldBuilder() {
      if (hostRewritePathRegexBuilder_ == null) {
        if (!(hostRewriteSpecifierCase_ == 35)) {
          hostRewriteSpecifier_ = io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.getDefaultInstance();
        }
        hostRewritePathRegexBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute.Builder, io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstituteOrBuilder>(
                (io.envoyproxy.envoy.type.matcher.v3.RegexMatchAndSubstitute) hostRewriteSpecifier_,
                getParentForChildren(),
                isClean());
        hostRewriteSpecifier_ = null;
      }
      hostRewriteSpecifierCase_ = 35;
      onChanged();
      return hostRewritePathRegexBuilder_;
    }

    private boolean appendXForwardedHost_ ;
    /**
     * <pre>
     * If set, then a host rewrite action (one of
     * :ref:`host_rewrite_literal &lt;envoy_v3_api_field_config.route.v3.RouteAction.host_rewrite_literal&gt;`,
     * :ref:`auto_host_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.auto_host_rewrite&gt;`,
     * :ref:`host_rewrite_header &lt;envoy_v3_api_field_config.route.v3.RouteAction.host_rewrite_header&gt;`, or
     * :ref:`host_rewrite_path_regex &lt;envoy_v3_api_field_config.route.v3.RouteAction.host_rewrite_path_regex&gt;`)
     * causes the original value of the host header, if any, to be appended to the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` HTTP header.
     * </pre>
     *
     * <code>bool append_x_forwarded_host = 38;</code>
     * @return The appendXForwardedHost.
     */
    @java.lang.Override
    public boolean getAppendXForwardedHost() {
      return appendXForwardedHost_;
    }
    /**
     * <pre>
     * If set, then a host rewrite action (one of
     * :ref:`host_rewrite_literal &lt;envoy_v3_api_field_config.route.v3.RouteAction.host_rewrite_literal&gt;`,
     * :ref:`auto_host_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.auto_host_rewrite&gt;`,
     * :ref:`host_rewrite_header &lt;envoy_v3_api_field_config.route.v3.RouteAction.host_rewrite_header&gt;`, or
     * :ref:`host_rewrite_path_regex &lt;envoy_v3_api_field_config.route.v3.RouteAction.host_rewrite_path_regex&gt;`)
     * causes the original value of the host header, if any, to be appended to the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` HTTP header.
     * </pre>
     *
     * <code>bool append_x_forwarded_host = 38;</code>
     * @param value The appendXForwardedHost to set.
     * @return This builder for chaining.
     */
    public Builder setAppendXForwardedHost(boolean value) {
      
      appendXForwardedHost_ = value;
      bitField0_ |= 0x00004000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If set, then a host rewrite action (one of
     * :ref:`host_rewrite_literal &lt;envoy_v3_api_field_config.route.v3.RouteAction.host_rewrite_literal&gt;`,
     * :ref:`auto_host_rewrite &lt;envoy_v3_api_field_config.route.v3.RouteAction.auto_host_rewrite&gt;`,
     * :ref:`host_rewrite_header &lt;envoy_v3_api_field_config.route.v3.RouteAction.host_rewrite_header&gt;`, or
     * :ref:`host_rewrite_path_regex &lt;envoy_v3_api_field_config.route.v3.RouteAction.host_rewrite_path_regex&gt;`)
     * causes the original value of the host header, if any, to be appended to the
     * :ref:`config_http_conn_man_headers_x-forwarded-host` HTTP header.
     * </pre>
     *
     * <code>bool append_x_forwarded_host = 38;</code>
     * @return This builder for chaining.
     */
    public Builder clearAppendXForwardedHost() {
      bitField0_ = (bitField0_ & ~0x00004000);
      appendXForwardedHost_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.Duration timeout_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> timeoutBuilder_;
    /**
     * <pre>
     * Specifies the upstream timeout for the route. If not specified, the default is 15s. This
     * spans between the point at which the entire downstream request (i.e. end-of-stream) has been
     * processed and when the upstream response has been completely processed. A value of 0 will
     * disable the route's timeout.
     * .. note::
     *   This timeout includes all retries. See also
     *   :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
     *   :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
     *   :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 8;</code>
     * @return Whether the timeout field is set.
     */
    public boolean hasTimeout() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <pre>
     * Specifies the upstream timeout for the route. If not specified, the default is 15s. This
     * spans between the point at which the entire downstream request (i.e. end-of-stream) has been
     * processed and when the upstream response has been completely processed. A value of 0 will
     * disable the route's timeout.
     * .. note::
     *   This timeout includes all retries. See also
     *   :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
     *   :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
     *   :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 8;</code>
     * @return The timeout.
     */
    public com.google.protobuf.Duration getTimeout() {
      if (timeoutBuilder_ == null) {
        return timeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : timeout_;
      } else {
        return timeoutBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies the upstream timeout for the route. If not specified, the default is 15s. This
     * spans between the point at which the entire downstream request (i.e. end-of-stream) has been
     * processed and when the upstream response has been completely processed. A value of 0 will
     * disable the route's timeout.
     * .. note::
     *   This timeout includes all retries. See also
     *   :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
     *   :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
     *   :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 8;</code>
     */
    public Builder setTimeout(com.google.protobuf.Duration value) {
      if (timeoutBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        timeout_ = value;
      } else {
        timeoutBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00008000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the upstream timeout for the route. If not specified, the default is 15s. This
     * spans between the point at which the entire downstream request (i.e. end-of-stream) has been
     * processed and when the upstream response has been completely processed. A value of 0 will
     * disable the route's timeout.
     * .. note::
     *   This timeout includes all retries. See also
     *   :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
     *   :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
     *   :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 8;</code>
     */
    public Builder setTimeout(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (timeoutBuilder_ == null) {
        timeout_ = builderForValue.build();
      } else {
        timeoutBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00008000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the upstream timeout for the route. If not specified, the default is 15s. This
     * spans between the point at which the entire downstream request (i.e. end-of-stream) has been
     * processed and when the upstream response has been completely processed. A value of 0 will
     * disable the route's timeout.
     * .. note::
     *   This timeout includes all retries. See also
     *   :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
     *   :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
     *   :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 8;</code>
     */
    public Builder mergeTimeout(com.google.protobuf.Duration value) {
      if (timeoutBuilder_ == null) {
        if (((bitField0_ & 0x00008000) != 0) &&
          timeout_ != null &&
          timeout_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getTimeoutBuilder().mergeFrom(value);
        } else {
          timeout_ = value;
        }
      } else {
        timeoutBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00008000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the upstream timeout for the route. If not specified, the default is 15s. This
     * spans between the point at which the entire downstream request (i.e. end-of-stream) has been
     * processed and when the upstream response has been completely processed. A value of 0 will
     * disable the route's timeout.
     * .. note::
     *   This timeout includes all retries. See also
     *   :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
     *   :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
     *   :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 8;</code>
     */
    public Builder clearTimeout() {
      bitField0_ = (bitField0_ & ~0x00008000);
      timeout_ = null;
      if (timeoutBuilder_ != null) {
        timeoutBuilder_.dispose();
        timeoutBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the upstream timeout for the route. If not specified, the default is 15s. This
     * spans between the point at which the entire downstream request (i.e. end-of-stream) has been
     * processed and when the upstream response has been completely processed. A value of 0 will
     * disable the route's timeout.
     * .. note::
     *   This timeout includes all retries. See also
     *   :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
     *   :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
     *   :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 8;</code>
     */
    public com.google.protobuf.Duration.Builder getTimeoutBuilder() {
      bitField0_ |= 0x00008000;
      onChanged();
      return getTimeoutFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies the upstream timeout for the route. If not specified, the default is 15s. This
     * spans between the point at which the entire downstream request (i.e. end-of-stream) has been
     * processed and when the upstream response has been completely processed. A value of 0 will
     * disable the route's timeout.
     * .. note::
     *   This timeout includes all retries. See also
     *   :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
     *   :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
     *   :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 8;</code>
     */
    public com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder() {
      if (timeoutBuilder_ != null) {
        return timeoutBuilder_.getMessageOrBuilder();
      } else {
        return timeout_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : timeout_;
      }
    }
    /**
     * <pre>
     * Specifies the upstream timeout for the route. If not specified, the default is 15s. This
     * spans between the point at which the entire downstream request (i.e. end-of-stream) has been
     * processed and when the upstream response has been completely processed. A value of 0 will
     * disable the route's timeout.
     * .. note::
     *   This timeout includes all retries. See also
     *   :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
     *   :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
     *   :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getTimeoutFieldBuilder() {
      if (timeoutBuilder_ == null) {
        timeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getTimeout(),
                getParentForChildren(),
                isClean());
        timeout_ = null;
      }
      return timeoutBuilder_;
    }

    private com.google.protobuf.Duration idleTimeout_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> idleTimeoutBuilder_;
    /**
     * <pre>
     * Specifies the idle timeout for the route. If not specified, there is no per-route idle timeout,
     * although the connection manager wide :ref:`stream_idle_timeout
     * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.stream_idle_timeout&gt;`
     * will still apply. A value of 0 will completely disable the route's idle timeout, even if a
     * connection manager stream idle timeout is configured.
     * The idle timeout is distinct to :ref:`timeout
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, which provides an upper bound
     * on the upstream response time; :ref:`idle_timeout
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.idle_timeout&gt;` instead bounds the amount
     * of time the request's stream may be idle.
     * After header decoding, the idle timeout will apply on downstream and
     * upstream request events. Each time an encode/decode event for headers or
     * data is processed for the stream, the timer will be reset. If the timeout
     * fires, the stream is terminated with a 408 Request Timeout error code if no
     * upstream response header has been received, otherwise a stream reset
     * occurs.
     * If the :ref:`overload action &lt;config_overload_manager_overload_actions&gt;` "envoy.overload_actions.reduce_timeouts"
     * is configured, this timeout is scaled according to the value for
     * :ref:`HTTP_DOWNSTREAM_STREAM_IDLE &lt;envoy_v3_api_enum_value_config.overload.v3.ScaleTimersOverloadActionConfig.TimerType.HTTP_DOWNSTREAM_STREAM_IDLE&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 24;</code>
     * @return Whether the idleTimeout field is set.
     */
    public boolean hasIdleTimeout() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <pre>
     * Specifies the idle timeout for the route. If not specified, there is no per-route idle timeout,
     * although the connection manager wide :ref:`stream_idle_timeout
     * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.stream_idle_timeout&gt;`
     * will still apply. A value of 0 will completely disable the route's idle timeout, even if a
     * connection manager stream idle timeout is configured.
     * The idle timeout is distinct to :ref:`timeout
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, which provides an upper bound
     * on the upstream response time; :ref:`idle_timeout
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.idle_timeout&gt;` instead bounds the amount
     * of time the request's stream may be idle.
     * After header decoding, the idle timeout will apply on downstream and
     * upstream request events. Each time an encode/decode event for headers or
     * data is processed for the stream, the timer will be reset. If the timeout
     * fires, the stream is terminated with a 408 Request Timeout error code if no
     * upstream response header has been received, otherwise a stream reset
     * occurs.
     * If the :ref:`overload action &lt;config_overload_manager_overload_actions&gt;` "envoy.overload_actions.reduce_timeouts"
     * is configured, this timeout is scaled according to the value for
     * :ref:`HTTP_DOWNSTREAM_STREAM_IDLE &lt;envoy_v3_api_enum_value_config.overload.v3.ScaleTimersOverloadActionConfig.TimerType.HTTP_DOWNSTREAM_STREAM_IDLE&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 24;</code>
     * @return The idleTimeout.
     */
    public com.google.protobuf.Duration getIdleTimeout() {
      if (idleTimeoutBuilder_ == null) {
        return idleTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : idleTimeout_;
      } else {
        return idleTimeoutBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies the idle timeout for the route. If not specified, there is no per-route idle timeout,
     * although the connection manager wide :ref:`stream_idle_timeout
     * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.stream_idle_timeout&gt;`
     * will still apply. A value of 0 will completely disable the route's idle timeout, even if a
     * connection manager stream idle timeout is configured.
     * The idle timeout is distinct to :ref:`timeout
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, which provides an upper bound
     * on the upstream response time; :ref:`idle_timeout
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.idle_timeout&gt;` instead bounds the amount
     * of time the request's stream may be idle.
     * After header decoding, the idle timeout will apply on downstream and
     * upstream request events. Each time an encode/decode event for headers or
     * data is processed for the stream, the timer will be reset. If the timeout
     * fires, the stream is terminated with a 408 Request Timeout error code if no
     * upstream response header has been received, otherwise a stream reset
     * occurs.
     * If the :ref:`overload action &lt;config_overload_manager_overload_actions&gt;` "envoy.overload_actions.reduce_timeouts"
     * is configured, this timeout is scaled according to the value for
     * :ref:`HTTP_DOWNSTREAM_STREAM_IDLE &lt;envoy_v3_api_enum_value_config.overload.v3.ScaleTimersOverloadActionConfig.TimerType.HTTP_DOWNSTREAM_STREAM_IDLE&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 24;</code>
     */
    public Builder setIdleTimeout(com.google.protobuf.Duration value) {
      if (idleTimeoutBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        idleTimeout_ = value;
      } else {
        idleTimeoutBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the idle timeout for the route. If not specified, there is no per-route idle timeout,
     * although the connection manager wide :ref:`stream_idle_timeout
     * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.stream_idle_timeout&gt;`
     * will still apply. A value of 0 will completely disable the route's idle timeout, even if a
     * connection manager stream idle timeout is configured.
     * The idle timeout is distinct to :ref:`timeout
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, which provides an upper bound
     * on the upstream response time; :ref:`idle_timeout
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.idle_timeout&gt;` instead bounds the amount
     * of time the request's stream may be idle.
     * After header decoding, the idle timeout will apply on downstream and
     * upstream request events. Each time an encode/decode event for headers or
     * data is processed for the stream, the timer will be reset. If the timeout
     * fires, the stream is terminated with a 408 Request Timeout error code if no
     * upstream response header has been received, otherwise a stream reset
     * occurs.
     * If the :ref:`overload action &lt;config_overload_manager_overload_actions&gt;` "envoy.overload_actions.reduce_timeouts"
     * is configured, this timeout is scaled according to the value for
     * :ref:`HTTP_DOWNSTREAM_STREAM_IDLE &lt;envoy_v3_api_enum_value_config.overload.v3.ScaleTimersOverloadActionConfig.TimerType.HTTP_DOWNSTREAM_STREAM_IDLE&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 24;</code>
     */
    public Builder setIdleTimeout(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (idleTimeoutBuilder_ == null) {
        idleTimeout_ = builderForValue.build();
      } else {
        idleTimeoutBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the idle timeout for the route. If not specified, there is no per-route idle timeout,
     * although the connection manager wide :ref:`stream_idle_timeout
     * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.stream_idle_timeout&gt;`
     * will still apply. A value of 0 will completely disable the route's idle timeout, even if a
     * connection manager stream idle timeout is configured.
     * The idle timeout is distinct to :ref:`timeout
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, which provides an upper bound
     * on the upstream response time; :ref:`idle_timeout
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.idle_timeout&gt;` instead bounds the amount
     * of time the request's stream may be idle.
     * After header decoding, the idle timeout will apply on downstream and
     * upstream request events. Each time an encode/decode event for headers or
     * data is processed for the stream, the timer will be reset. If the timeout
     * fires, the stream is terminated with a 408 Request Timeout error code if no
     * upstream response header has been received, otherwise a stream reset
     * occurs.
     * If the :ref:`overload action &lt;config_overload_manager_overload_actions&gt;` "envoy.overload_actions.reduce_timeouts"
     * is configured, this timeout is scaled according to the value for
     * :ref:`HTTP_DOWNSTREAM_STREAM_IDLE &lt;envoy_v3_api_enum_value_config.overload.v3.ScaleTimersOverloadActionConfig.TimerType.HTTP_DOWNSTREAM_STREAM_IDLE&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 24;</code>
     */
    public Builder mergeIdleTimeout(com.google.protobuf.Duration value) {
      if (idleTimeoutBuilder_ == null) {
        if (((bitField0_ & 0x00010000) != 0) &&
          idleTimeout_ != null &&
          idleTimeout_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getIdleTimeoutBuilder().mergeFrom(value);
        } else {
          idleTimeout_ = value;
        }
      } else {
        idleTimeoutBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00010000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the idle timeout for the route. If not specified, there is no per-route idle timeout,
     * although the connection manager wide :ref:`stream_idle_timeout
     * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.stream_idle_timeout&gt;`
     * will still apply. A value of 0 will completely disable the route's idle timeout, even if a
     * connection manager stream idle timeout is configured.
     * The idle timeout is distinct to :ref:`timeout
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, which provides an upper bound
     * on the upstream response time; :ref:`idle_timeout
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.idle_timeout&gt;` instead bounds the amount
     * of time the request's stream may be idle.
     * After header decoding, the idle timeout will apply on downstream and
     * upstream request events. Each time an encode/decode event for headers or
     * data is processed for the stream, the timer will be reset. If the timeout
     * fires, the stream is terminated with a 408 Request Timeout error code if no
     * upstream response header has been received, otherwise a stream reset
     * occurs.
     * If the :ref:`overload action &lt;config_overload_manager_overload_actions&gt;` "envoy.overload_actions.reduce_timeouts"
     * is configured, this timeout is scaled according to the value for
     * :ref:`HTTP_DOWNSTREAM_STREAM_IDLE &lt;envoy_v3_api_enum_value_config.overload.v3.ScaleTimersOverloadActionConfig.TimerType.HTTP_DOWNSTREAM_STREAM_IDLE&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 24;</code>
     */
    public Builder clearIdleTimeout() {
      bitField0_ = (bitField0_ & ~0x00010000);
      idleTimeout_ = null;
      if (idleTimeoutBuilder_ != null) {
        idleTimeoutBuilder_.dispose();
        idleTimeoutBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the idle timeout for the route. If not specified, there is no per-route idle timeout,
     * although the connection manager wide :ref:`stream_idle_timeout
     * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.stream_idle_timeout&gt;`
     * will still apply. A value of 0 will completely disable the route's idle timeout, even if a
     * connection manager stream idle timeout is configured.
     * The idle timeout is distinct to :ref:`timeout
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, which provides an upper bound
     * on the upstream response time; :ref:`idle_timeout
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.idle_timeout&gt;` instead bounds the amount
     * of time the request's stream may be idle.
     * After header decoding, the idle timeout will apply on downstream and
     * upstream request events. Each time an encode/decode event for headers or
     * data is processed for the stream, the timer will be reset. If the timeout
     * fires, the stream is terminated with a 408 Request Timeout error code if no
     * upstream response header has been received, otherwise a stream reset
     * occurs.
     * If the :ref:`overload action &lt;config_overload_manager_overload_actions&gt;` "envoy.overload_actions.reduce_timeouts"
     * is configured, this timeout is scaled according to the value for
     * :ref:`HTTP_DOWNSTREAM_STREAM_IDLE &lt;envoy_v3_api_enum_value_config.overload.v3.ScaleTimersOverloadActionConfig.TimerType.HTTP_DOWNSTREAM_STREAM_IDLE&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 24;</code>
     */
    public com.google.protobuf.Duration.Builder getIdleTimeoutBuilder() {
      bitField0_ |= 0x00010000;
      onChanged();
      return getIdleTimeoutFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies the idle timeout for the route. If not specified, there is no per-route idle timeout,
     * although the connection manager wide :ref:`stream_idle_timeout
     * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.stream_idle_timeout&gt;`
     * will still apply. A value of 0 will completely disable the route's idle timeout, even if a
     * connection manager stream idle timeout is configured.
     * The idle timeout is distinct to :ref:`timeout
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, which provides an upper bound
     * on the upstream response time; :ref:`idle_timeout
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.idle_timeout&gt;` instead bounds the amount
     * of time the request's stream may be idle.
     * After header decoding, the idle timeout will apply on downstream and
     * upstream request events. Each time an encode/decode event for headers or
     * data is processed for the stream, the timer will be reset. If the timeout
     * fires, the stream is terminated with a 408 Request Timeout error code if no
     * upstream response header has been received, otherwise a stream reset
     * occurs.
     * If the :ref:`overload action &lt;config_overload_manager_overload_actions&gt;` "envoy.overload_actions.reduce_timeouts"
     * is configured, this timeout is scaled according to the value for
     * :ref:`HTTP_DOWNSTREAM_STREAM_IDLE &lt;envoy_v3_api_enum_value_config.overload.v3.ScaleTimersOverloadActionConfig.TimerType.HTTP_DOWNSTREAM_STREAM_IDLE&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 24;</code>
     */
    public com.google.protobuf.DurationOrBuilder getIdleTimeoutOrBuilder() {
      if (idleTimeoutBuilder_ != null) {
        return idleTimeoutBuilder_.getMessageOrBuilder();
      } else {
        return idleTimeout_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : idleTimeout_;
      }
    }
    /**
     * <pre>
     * Specifies the idle timeout for the route. If not specified, there is no per-route idle timeout,
     * although the connection manager wide :ref:`stream_idle_timeout
     * &lt;envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.stream_idle_timeout&gt;`
     * will still apply. A value of 0 will completely disable the route's idle timeout, even if a
     * connection manager stream idle timeout is configured.
     * The idle timeout is distinct to :ref:`timeout
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, which provides an upper bound
     * on the upstream response time; :ref:`idle_timeout
     * &lt;envoy_v3_api_field_config.route.v3.RouteAction.idle_timeout&gt;` instead bounds the amount
     * of time the request's stream may be idle.
     * After header decoding, the idle timeout will apply on downstream and
     * upstream request events. Each time an encode/decode event for headers or
     * data is processed for the stream, the timer will be reset. If the timeout
     * fires, the stream is terminated with a 408 Request Timeout error code if no
     * upstream response header has been received, otherwise a stream reset
     * occurs.
     * If the :ref:`overload action &lt;config_overload_manager_overload_actions&gt;` "envoy.overload_actions.reduce_timeouts"
     * is configured, this timeout is scaled according to the value for
     * :ref:`HTTP_DOWNSTREAM_STREAM_IDLE &lt;envoy_v3_api_enum_value_config.overload.v3.ScaleTimersOverloadActionConfig.TimerType.HTTP_DOWNSTREAM_STREAM_IDLE&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration idle_timeout = 24;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getIdleTimeoutFieldBuilder() {
      if (idleTimeoutBuilder_ == null) {
        idleTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getIdleTimeout(),
                getParentForChildren(),
                isClean());
        idleTimeout_ = null;
      }
      return idleTimeoutBuilder_;
    }

    private io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig earlyDataPolicy_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder> earlyDataPolicyBuilder_;
    /**
     * <pre>
     * Specifies how to send request over TLS early data.
     * If absent, allows `safe HTTP requests &lt;https://www.rfc-editor.org/rfc/rfc7231#section-4.2.1&gt;`_ to be sent on early data.
     * [#extension-category: envoy.route.early_data_policy]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig early_data_policy = 40;</code>
     * @return Whether the earlyDataPolicy field is set.
     */
    public boolean hasEarlyDataPolicy() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <pre>
     * Specifies how to send request over TLS early data.
     * If absent, allows `safe HTTP requests &lt;https://www.rfc-editor.org/rfc/rfc7231#section-4.2.1&gt;`_ to be sent on early data.
     * [#extension-category: envoy.route.early_data_policy]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig early_data_policy = 40;</code>
     * @return The earlyDataPolicy.
     */
    public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig getEarlyDataPolicy() {
      if (earlyDataPolicyBuilder_ == null) {
        return earlyDataPolicy_ == null ? io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance() : earlyDataPolicy_;
      } else {
        return earlyDataPolicyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies how to send request over TLS early data.
     * If absent, allows `safe HTTP requests &lt;https://www.rfc-editor.org/rfc/rfc7231#section-4.2.1&gt;`_ to be sent on early data.
     * [#extension-category: envoy.route.early_data_policy]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig early_data_policy = 40;</code>
     */
    public Builder setEarlyDataPolicy(io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig value) {
      if (earlyDataPolicyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        earlyDataPolicy_ = value;
      } else {
        earlyDataPolicyBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00020000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies how to send request over TLS early data.
     * If absent, allows `safe HTTP requests &lt;https://www.rfc-editor.org/rfc/rfc7231#section-4.2.1&gt;`_ to be sent on early data.
     * [#extension-category: envoy.route.early_data_policy]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig early_data_policy = 40;</code>
     */
    public Builder setEarlyDataPolicy(
        io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder builderForValue) {
      if (earlyDataPolicyBuilder_ == null) {
        earlyDataPolicy_ = builderForValue.build();
      } else {
        earlyDataPolicyBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00020000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies how to send request over TLS early data.
     * If absent, allows `safe HTTP requests &lt;https://www.rfc-editor.org/rfc/rfc7231#section-4.2.1&gt;`_ to be sent on early data.
     * [#extension-category: envoy.route.early_data_policy]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig early_data_policy = 40;</code>
     */
    public Builder mergeEarlyDataPolicy(io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig value) {
      if (earlyDataPolicyBuilder_ == null) {
        if (((bitField0_ & 0x00020000) != 0) &&
          earlyDataPolicy_ != null &&
          earlyDataPolicy_ != io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance()) {
          getEarlyDataPolicyBuilder().mergeFrom(value);
        } else {
          earlyDataPolicy_ = value;
        }
      } else {
        earlyDataPolicyBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00020000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies how to send request over TLS early data.
     * If absent, allows `safe HTTP requests &lt;https://www.rfc-editor.org/rfc/rfc7231#section-4.2.1&gt;`_ to be sent on early data.
     * [#extension-category: envoy.route.early_data_policy]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig early_data_policy = 40;</code>
     */
    public Builder clearEarlyDataPolicy() {
      bitField0_ = (bitField0_ & ~0x00020000);
      earlyDataPolicy_ = null;
      if (earlyDataPolicyBuilder_ != null) {
        earlyDataPolicyBuilder_.dispose();
        earlyDataPolicyBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies how to send request over TLS early data.
     * If absent, allows `safe HTTP requests &lt;https://www.rfc-editor.org/rfc/rfc7231#section-4.2.1&gt;`_ to be sent on early data.
     * [#extension-category: envoy.route.early_data_policy]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig early_data_policy = 40;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder getEarlyDataPolicyBuilder() {
      bitField0_ |= 0x00020000;
      onChanged();
      return getEarlyDataPolicyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies how to send request over TLS early data.
     * If absent, allows `safe HTTP requests &lt;https://www.rfc-editor.org/rfc/rfc7231#section-4.2.1&gt;`_ to be sent on early data.
     * [#extension-category: envoy.route.early_data_policy]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig early_data_policy = 40;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder getEarlyDataPolicyOrBuilder() {
      if (earlyDataPolicyBuilder_ != null) {
        return earlyDataPolicyBuilder_.getMessageOrBuilder();
      } else {
        return earlyDataPolicy_ == null ?
            io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.getDefaultInstance() : earlyDataPolicy_;
      }
    }
    /**
     * <pre>
     * Specifies how to send request over TLS early data.
     * If absent, allows `safe HTTP requests &lt;https://www.rfc-editor.org/rfc/rfc7231#section-4.2.1&gt;`_ to be sent on early data.
     * [#extension-category: envoy.route.early_data_policy]
     * </pre>
     *
     * <code>.envoy.config.core.v3.TypedExtensionConfig early_data_policy = 40;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder> 
        getEarlyDataPolicyFieldBuilder() {
      if (earlyDataPolicyBuilder_ == null) {
        earlyDataPolicyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig.Builder, io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder>(
                getEarlyDataPolicy(),
                getParentForChildren(),
                isClean());
        earlyDataPolicy_ = null;
      }
      return earlyDataPolicyBuilder_;
    }

    private io.envoyproxy.envoy.config.route.v3.RetryPolicy retryPolicy_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.RetryPolicy, io.envoyproxy.envoy.config.route.v3.RetryPolicy.Builder, io.envoyproxy.envoy.config.route.v3.RetryPolicyOrBuilder> retryPolicyBuilder_;
    /**
     * <pre>
     * Indicates that the route has a retry policy. Note that if this is set,
     * it'll take precedence over the virtual host level retry policy entirely
     * (e.g.: policies are not merged, most internal one becomes the enforced policy).
     * </pre>
     *
     * <code>.envoy.config.route.v3.RetryPolicy retry_policy = 9;</code>
     * @return Whether the retryPolicy field is set.
     */
    public boolean hasRetryPolicy() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <pre>
     * Indicates that the route has a retry policy. Note that if this is set,
     * it'll take precedence over the virtual host level retry policy entirely
     * (e.g.: policies are not merged, most internal one becomes the enforced policy).
     * </pre>
     *
     * <code>.envoy.config.route.v3.RetryPolicy retry_policy = 9;</code>
     * @return The retryPolicy.
     */
    public io.envoyproxy.envoy.config.route.v3.RetryPolicy getRetryPolicy() {
      if (retryPolicyBuilder_ == null) {
        return retryPolicy_ == null ? io.envoyproxy.envoy.config.route.v3.RetryPolicy.getDefaultInstance() : retryPolicy_;
      } else {
        return retryPolicyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Indicates that the route has a retry policy. Note that if this is set,
     * it'll take precedence over the virtual host level retry policy entirely
     * (e.g.: policies are not merged, most internal one becomes the enforced policy).
     * </pre>
     *
     * <code>.envoy.config.route.v3.RetryPolicy retry_policy = 9;</code>
     */
    public Builder setRetryPolicy(io.envoyproxy.envoy.config.route.v3.RetryPolicy value) {
      if (retryPolicyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        retryPolicy_ = value;
      } else {
        retryPolicyBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00040000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that the route has a retry policy. Note that if this is set,
     * it'll take precedence over the virtual host level retry policy entirely
     * (e.g.: policies are not merged, most internal one becomes the enforced policy).
     * </pre>
     *
     * <code>.envoy.config.route.v3.RetryPolicy retry_policy = 9;</code>
     */
    public Builder setRetryPolicy(
        io.envoyproxy.envoy.config.route.v3.RetryPolicy.Builder builderForValue) {
      if (retryPolicyBuilder_ == null) {
        retryPolicy_ = builderForValue.build();
      } else {
        retryPolicyBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00040000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that the route has a retry policy. Note that if this is set,
     * it'll take precedence over the virtual host level retry policy entirely
     * (e.g.: policies are not merged, most internal one becomes the enforced policy).
     * </pre>
     *
     * <code>.envoy.config.route.v3.RetryPolicy retry_policy = 9;</code>
     */
    public Builder mergeRetryPolicy(io.envoyproxy.envoy.config.route.v3.RetryPolicy value) {
      if (retryPolicyBuilder_ == null) {
        if (((bitField0_ & 0x00040000) != 0) &&
          retryPolicy_ != null &&
          retryPolicy_ != io.envoyproxy.envoy.config.route.v3.RetryPolicy.getDefaultInstance()) {
          getRetryPolicyBuilder().mergeFrom(value);
        } else {
          retryPolicy_ = value;
        }
      } else {
        retryPolicyBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00040000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that the route has a retry policy. Note that if this is set,
     * it'll take precedence over the virtual host level retry policy entirely
     * (e.g.: policies are not merged, most internal one becomes the enforced policy).
     * </pre>
     *
     * <code>.envoy.config.route.v3.RetryPolicy retry_policy = 9;</code>
     */
    public Builder clearRetryPolicy() {
      bitField0_ = (bitField0_ & ~0x00040000);
      retryPolicy_ = null;
      if (retryPolicyBuilder_ != null) {
        retryPolicyBuilder_.dispose();
        retryPolicyBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that the route has a retry policy. Note that if this is set,
     * it'll take precedence over the virtual host level retry policy entirely
     * (e.g.: policies are not merged, most internal one becomes the enforced policy).
     * </pre>
     *
     * <code>.envoy.config.route.v3.RetryPolicy retry_policy = 9;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RetryPolicy.Builder getRetryPolicyBuilder() {
      bitField0_ |= 0x00040000;
      onChanged();
      return getRetryPolicyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Indicates that the route has a retry policy. Note that if this is set,
     * it'll take precedence over the virtual host level retry policy entirely
     * (e.g.: policies are not merged, most internal one becomes the enforced policy).
     * </pre>
     *
     * <code>.envoy.config.route.v3.RetryPolicy retry_policy = 9;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RetryPolicyOrBuilder getRetryPolicyOrBuilder() {
      if (retryPolicyBuilder_ != null) {
        return retryPolicyBuilder_.getMessageOrBuilder();
      } else {
        return retryPolicy_ == null ?
            io.envoyproxy.envoy.config.route.v3.RetryPolicy.getDefaultInstance() : retryPolicy_;
      }
    }
    /**
     * <pre>
     * Indicates that the route has a retry policy. Note that if this is set,
     * it'll take precedence over the virtual host level retry policy entirely
     * (e.g.: policies are not merged, most internal one becomes the enforced policy).
     * </pre>
     *
     * <code>.envoy.config.route.v3.RetryPolicy retry_policy = 9;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.RetryPolicy, io.envoyproxy.envoy.config.route.v3.RetryPolicy.Builder, io.envoyproxy.envoy.config.route.v3.RetryPolicyOrBuilder> 
        getRetryPolicyFieldBuilder() {
      if (retryPolicyBuilder_ == null) {
        retryPolicyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.route.v3.RetryPolicy, io.envoyproxy.envoy.config.route.v3.RetryPolicy.Builder, io.envoyproxy.envoy.config.route.v3.RetryPolicyOrBuilder>(
                getRetryPolicy(),
                getParentForChildren(),
                isClean());
        retryPolicy_ = null;
      }
      return retryPolicyBuilder_;
    }

    private com.google.protobuf.Any retryPolicyTypedConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> retryPolicyTypedConfigBuilder_;
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Specifies the configuration for retry policy extension. Note that if this is set, it'll take
     * precedence over the virtual host level retry policy entirely (e.g.: policies are not merged,
     * most internal one becomes the enforced policy). :ref:`Retry policy &lt;envoy_v3_api_field_config.route.v3.VirtualHost.retry_policy&gt;`
     * should not be set if this field is used.
     * </pre>
     *
     * <code>.google.protobuf.Any retry_policy_typed_config = 33;</code>
     * @return Whether the retryPolicyTypedConfig field is set.
     */
    public boolean hasRetryPolicyTypedConfig() {
      return ((bitField0_ & 0x00080000) != 0);
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Specifies the configuration for retry policy extension. Note that if this is set, it'll take
     * precedence over the virtual host level retry policy entirely (e.g.: policies are not merged,
     * most internal one becomes the enforced policy). :ref:`Retry policy &lt;envoy_v3_api_field_config.route.v3.VirtualHost.retry_policy&gt;`
     * should not be set if this field is used.
     * </pre>
     *
     * <code>.google.protobuf.Any retry_policy_typed_config = 33;</code>
     * @return The retryPolicyTypedConfig.
     */
    public com.google.protobuf.Any getRetryPolicyTypedConfig() {
      if (retryPolicyTypedConfigBuilder_ == null) {
        return retryPolicyTypedConfig_ == null ? com.google.protobuf.Any.getDefaultInstance() : retryPolicyTypedConfig_;
      } else {
        return retryPolicyTypedConfigBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Specifies the configuration for retry policy extension. Note that if this is set, it'll take
     * precedence over the virtual host level retry policy entirely (e.g.: policies are not merged,
     * most internal one becomes the enforced policy). :ref:`Retry policy &lt;envoy_v3_api_field_config.route.v3.VirtualHost.retry_policy&gt;`
     * should not be set if this field is used.
     * </pre>
     *
     * <code>.google.protobuf.Any retry_policy_typed_config = 33;</code>
     */
    public Builder setRetryPolicyTypedConfig(com.google.protobuf.Any value) {
      if (retryPolicyTypedConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        retryPolicyTypedConfig_ = value;
      } else {
        retryPolicyTypedConfigBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00080000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Specifies the configuration for retry policy extension. Note that if this is set, it'll take
     * precedence over the virtual host level retry policy entirely (e.g.: policies are not merged,
     * most internal one becomes the enforced policy). :ref:`Retry policy &lt;envoy_v3_api_field_config.route.v3.VirtualHost.retry_policy&gt;`
     * should not be set if this field is used.
     * </pre>
     *
     * <code>.google.protobuf.Any retry_policy_typed_config = 33;</code>
     */
    public Builder setRetryPolicyTypedConfig(
        com.google.protobuf.Any.Builder builderForValue) {
      if (retryPolicyTypedConfigBuilder_ == null) {
        retryPolicyTypedConfig_ = builderForValue.build();
      } else {
        retryPolicyTypedConfigBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00080000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Specifies the configuration for retry policy extension. Note that if this is set, it'll take
     * precedence over the virtual host level retry policy entirely (e.g.: policies are not merged,
     * most internal one becomes the enforced policy). :ref:`Retry policy &lt;envoy_v3_api_field_config.route.v3.VirtualHost.retry_policy&gt;`
     * should not be set if this field is used.
     * </pre>
     *
     * <code>.google.protobuf.Any retry_policy_typed_config = 33;</code>
     */
    public Builder mergeRetryPolicyTypedConfig(com.google.protobuf.Any value) {
      if (retryPolicyTypedConfigBuilder_ == null) {
        if (((bitField0_ & 0x00080000) != 0) &&
          retryPolicyTypedConfig_ != null &&
          retryPolicyTypedConfig_ != com.google.protobuf.Any.getDefaultInstance()) {
          getRetryPolicyTypedConfigBuilder().mergeFrom(value);
        } else {
          retryPolicyTypedConfig_ = value;
        }
      } else {
        retryPolicyTypedConfigBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00080000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Specifies the configuration for retry policy extension. Note that if this is set, it'll take
     * precedence over the virtual host level retry policy entirely (e.g.: policies are not merged,
     * most internal one becomes the enforced policy). :ref:`Retry policy &lt;envoy_v3_api_field_config.route.v3.VirtualHost.retry_policy&gt;`
     * should not be set if this field is used.
     * </pre>
     *
     * <code>.google.protobuf.Any retry_policy_typed_config = 33;</code>
     */
    public Builder clearRetryPolicyTypedConfig() {
      bitField0_ = (bitField0_ & ~0x00080000);
      retryPolicyTypedConfig_ = null;
      if (retryPolicyTypedConfigBuilder_ != null) {
        retryPolicyTypedConfigBuilder_.dispose();
        retryPolicyTypedConfigBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Specifies the configuration for retry policy extension. Note that if this is set, it'll take
     * precedence over the virtual host level retry policy entirely (e.g.: policies are not merged,
     * most internal one becomes the enforced policy). :ref:`Retry policy &lt;envoy_v3_api_field_config.route.v3.VirtualHost.retry_policy&gt;`
     * should not be set if this field is used.
     * </pre>
     *
     * <code>.google.protobuf.Any retry_policy_typed_config = 33;</code>
     */
    public com.google.protobuf.Any.Builder getRetryPolicyTypedConfigBuilder() {
      bitField0_ |= 0x00080000;
      onChanged();
      return getRetryPolicyTypedConfigFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Specifies the configuration for retry policy extension. Note that if this is set, it'll take
     * precedence over the virtual host level retry policy entirely (e.g.: policies are not merged,
     * most internal one becomes the enforced policy). :ref:`Retry policy &lt;envoy_v3_api_field_config.route.v3.VirtualHost.retry_policy&gt;`
     * should not be set if this field is used.
     * </pre>
     *
     * <code>.google.protobuf.Any retry_policy_typed_config = 33;</code>
     */
    public com.google.protobuf.AnyOrBuilder getRetryPolicyTypedConfigOrBuilder() {
      if (retryPolicyTypedConfigBuilder_ != null) {
        return retryPolicyTypedConfigBuilder_.getMessageOrBuilder();
      } else {
        return retryPolicyTypedConfig_ == null ?
            com.google.protobuf.Any.getDefaultInstance() : retryPolicyTypedConfig_;
      }
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * Specifies the configuration for retry policy extension. Note that if this is set, it'll take
     * precedence over the virtual host level retry policy entirely (e.g.: policies are not merged,
     * most internal one becomes the enforced policy). :ref:`Retry policy &lt;envoy_v3_api_field_config.route.v3.VirtualHost.retry_policy&gt;`
     * should not be set if this field is used.
     * </pre>
     *
     * <code>.google.protobuf.Any retry_policy_typed_config = 33;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
        getRetryPolicyTypedConfigFieldBuilder() {
      if (retryPolicyTypedConfigBuilder_ == null) {
        retryPolicyTypedConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                getRetryPolicyTypedConfig(),
                getParentForChildren(),
                isClean());
        retryPolicyTypedConfig_ = null;
      }
      return retryPolicyTypedConfigBuilder_;
    }

    private java.util.List<io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy> requestMirrorPolicies_ =
      java.util.Collections.emptyList();
    private void ensureRequestMirrorPoliciesIsMutable() {
      if (!((bitField0_ & 0x00100000) != 0)) {
        requestMirrorPolicies_ = new java.util.ArrayList<io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy>(requestMirrorPolicies_);
        bitField0_ |= 0x00100000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy, io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicyOrBuilder> requestMirrorPoliciesBuilder_;

    /**
     * <pre>
     * Specify a set of route request mirroring policies.
     * It takes precedence over the virtual host and route config mirror policy entirely.
     * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy> getRequestMirrorPoliciesList() {
      if (requestMirrorPoliciesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(requestMirrorPolicies_);
      } else {
        return requestMirrorPoliciesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Specify a set of route request mirroring policies.
     * It takes precedence over the virtual host and route config mirror policy entirely.
     * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
     */
    public int getRequestMirrorPoliciesCount() {
      if (requestMirrorPoliciesBuilder_ == null) {
        return requestMirrorPolicies_.size();
      } else {
        return requestMirrorPoliciesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Specify a set of route request mirroring policies.
     * It takes precedence over the virtual host and route config mirror policy entirely.
     * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy getRequestMirrorPolicies(int index) {
      if (requestMirrorPoliciesBuilder_ == null) {
        return requestMirrorPolicies_.get(index);
      } else {
        return requestMirrorPoliciesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Specify a set of route request mirroring policies.
     * It takes precedence over the virtual host and route config mirror policy entirely.
     * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
     */
    public Builder setRequestMirrorPolicies(
        int index, io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy value) {
      if (requestMirrorPoliciesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRequestMirrorPoliciesIsMutable();
        requestMirrorPolicies_.set(index, value);
        onChanged();
      } else {
        requestMirrorPoliciesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Specify a set of route request mirroring policies.
     * It takes precedence over the virtual host and route config mirror policy entirely.
     * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
     */
    public Builder setRequestMirrorPolicies(
        int index, io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.Builder builderForValue) {
      if (requestMirrorPoliciesBuilder_ == null) {
        ensureRequestMirrorPoliciesIsMutable();
        requestMirrorPolicies_.set(index, builderForValue.build());
        onChanged();
      } else {
        requestMirrorPoliciesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specify a set of route request mirroring policies.
     * It takes precedence over the virtual host and route config mirror policy entirely.
     * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
     */
    public Builder addRequestMirrorPolicies(io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy value) {
      if (requestMirrorPoliciesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRequestMirrorPoliciesIsMutable();
        requestMirrorPolicies_.add(value);
        onChanged();
      } else {
        requestMirrorPoliciesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Specify a set of route request mirroring policies.
     * It takes precedence over the virtual host and route config mirror policy entirely.
     * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
     */
    public Builder addRequestMirrorPolicies(
        int index, io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy value) {
      if (requestMirrorPoliciesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRequestMirrorPoliciesIsMutable();
        requestMirrorPolicies_.add(index, value);
        onChanged();
      } else {
        requestMirrorPoliciesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Specify a set of route request mirroring policies.
     * It takes precedence over the virtual host and route config mirror policy entirely.
     * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
     */
    public Builder addRequestMirrorPolicies(
        io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.Builder builderForValue) {
      if (requestMirrorPoliciesBuilder_ == null) {
        ensureRequestMirrorPoliciesIsMutable();
        requestMirrorPolicies_.add(builderForValue.build());
        onChanged();
      } else {
        requestMirrorPoliciesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specify a set of route request mirroring policies.
     * It takes precedence over the virtual host and route config mirror policy entirely.
     * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
     */
    public Builder addRequestMirrorPolicies(
        int index, io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.Builder builderForValue) {
      if (requestMirrorPoliciesBuilder_ == null) {
        ensureRequestMirrorPoliciesIsMutable();
        requestMirrorPolicies_.add(index, builderForValue.build());
        onChanged();
      } else {
        requestMirrorPoliciesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specify a set of route request mirroring policies.
     * It takes precedence over the virtual host and route config mirror policy entirely.
     * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
     */
    public Builder addAllRequestMirrorPolicies(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy> values) {
      if (requestMirrorPoliciesBuilder_ == null) {
        ensureRequestMirrorPoliciesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, requestMirrorPolicies_);
        onChanged();
      } else {
        requestMirrorPoliciesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Specify a set of route request mirroring policies.
     * It takes precedence over the virtual host and route config mirror policy entirely.
     * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
     */
    public Builder clearRequestMirrorPolicies() {
      if (requestMirrorPoliciesBuilder_ == null) {
        requestMirrorPolicies_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
      } else {
        requestMirrorPoliciesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Specify a set of route request mirroring policies.
     * It takes precedence over the virtual host and route config mirror policy entirely.
     * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
     */
    public Builder removeRequestMirrorPolicies(int index) {
      if (requestMirrorPoliciesBuilder_ == null) {
        ensureRequestMirrorPoliciesIsMutable();
        requestMirrorPolicies_.remove(index);
        onChanged();
      } else {
        requestMirrorPoliciesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Specify a set of route request mirroring policies.
     * It takes precedence over the virtual host and route config mirror policy entirely.
     * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.Builder getRequestMirrorPoliciesBuilder(
        int index) {
      return getRequestMirrorPoliciesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Specify a set of route request mirroring policies.
     * It takes precedence over the virtual host and route config mirror policy entirely.
     * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicyOrBuilder getRequestMirrorPoliciesOrBuilder(
        int index) {
      if (requestMirrorPoliciesBuilder_ == null) {
        return requestMirrorPolicies_.get(index);  } else {
        return requestMirrorPoliciesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Specify a set of route request mirroring policies.
     * It takes precedence over the virtual host and route config mirror policy entirely.
     * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicyOrBuilder> 
         getRequestMirrorPoliciesOrBuilderList() {
      if (requestMirrorPoliciesBuilder_ != null) {
        return requestMirrorPoliciesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(requestMirrorPolicies_);
      }
    }
    /**
     * <pre>
     * Specify a set of route request mirroring policies.
     * It takes precedence over the virtual host and route config mirror policy entirely.
     * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.Builder addRequestMirrorPoliciesBuilder() {
      return getRequestMirrorPoliciesFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.getDefaultInstance());
    }
    /**
     * <pre>
     * Specify a set of route request mirroring policies.
     * It takes precedence over the virtual host and route config mirror policy entirely.
     * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.Builder addRequestMirrorPoliciesBuilder(
        int index) {
      return getRequestMirrorPoliciesFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.getDefaultInstance());
    }
    /**
     * <pre>
     * Specify a set of route request mirroring policies.
     * It takes precedence over the virtual host and route config mirror policy entirely.
     * That is, policies are not merged, the most specific non-empty one becomes the mirror policies.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.RequestMirrorPolicy request_mirror_policies = 30;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.Builder> 
         getRequestMirrorPoliciesBuilderList() {
      return getRequestMirrorPoliciesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy, io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicyOrBuilder> 
        getRequestMirrorPoliciesFieldBuilder() {
      if (requestMirrorPoliciesBuilder_ == null) {
        requestMirrorPoliciesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy, io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicy.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.RequestMirrorPolicyOrBuilder>(
                requestMirrorPolicies_,
                ((bitField0_ & 0x00100000) != 0),
                getParentForChildren(),
                isClean());
        requestMirrorPolicies_ = null;
      }
      return requestMirrorPoliciesBuilder_;
    }

    private int priority_ = 0;
    /**
     * <pre>
     * Optionally specifies the :ref:`routing priority &lt;arch_overview_http_routing_priority&gt;`.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RoutingPriority priority = 11 [(.validate.rules) = { ... }</code>
     * @return The enum numeric value on the wire for priority.
     */
    @java.lang.Override public int getPriorityValue() {
      return priority_;
    }
    /**
     * <pre>
     * Optionally specifies the :ref:`routing priority &lt;arch_overview_http_routing_priority&gt;`.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RoutingPriority priority = 11 [(.validate.rules) = { ... }</code>
     * @param value The enum numeric value on the wire for priority to set.
     * @return This builder for chaining.
     */
    public Builder setPriorityValue(int value) {
      priority_ = value;
      bitField0_ |= 0x00200000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optionally specifies the :ref:`routing priority &lt;arch_overview_http_routing_priority&gt;`.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RoutingPriority priority = 11 [(.validate.rules) = { ... }</code>
     * @return The priority.
     */
    @java.lang.Override
    public io.envoyproxy.envoy.config.core.v3.RoutingPriority getPriority() {
      io.envoyproxy.envoy.config.core.v3.RoutingPriority result = io.envoyproxy.envoy.config.core.v3.RoutingPriority.forNumber(priority_);
      return result == null ? io.envoyproxy.envoy.config.core.v3.RoutingPriority.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Optionally specifies the :ref:`routing priority &lt;arch_overview_http_routing_priority&gt;`.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RoutingPriority priority = 11 [(.validate.rules) = { ... }</code>
     * @param value The priority to set.
     * @return This builder for chaining.
     */
    public Builder setPriority(io.envoyproxy.envoy.config.core.v3.RoutingPriority value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00200000;
      priority_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optionally specifies the :ref:`routing priority &lt;arch_overview_http_routing_priority&gt;`.
     * </pre>
     *
     * <code>.envoy.config.core.v3.RoutingPriority priority = 11 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearPriority() {
      bitField0_ = (bitField0_ & ~0x00200000);
      priority_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<io.envoyproxy.envoy.config.route.v3.RateLimit> rateLimits_ =
      java.util.Collections.emptyList();
    private void ensureRateLimitsIsMutable() {
      if (!((bitField0_ & 0x00400000) != 0)) {
        rateLimits_ = new java.util.ArrayList<io.envoyproxy.envoy.config.route.v3.RateLimit>(rateLimits_);
        bitField0_ |= 0x00400000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.RateLimit, io.envoyproxy.envoy.config.route.v3.RateLimit.Builder, io.envoyproxy.envoy.config.route.v3.RateLimitOrBuilder> rateLimitsBuilder_;

    /**
     * <pre>
     * Specifies a set of rate limit configurations that could be applied to the
     * route.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.route.v3.RateLimit> getRateLimitsList() {
      if (rateLimitsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(rateLimits_);
      } else {
        return rateLimitsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Specifies a set of rate limit configurations that could be applied to the
     * route.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
     */
    public int getRateLimitsCount() {
      if (rateLimitsBuilder_ == null) {
        return rateLimits_.size();
      } else {
        return rateLimitsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Specifies a set of rate limit configurations that could be applied to the
     * route.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RateLimit getRateLimits(int index) {
      if (rateLimitsBuilder_ == null) {
        return rateLimits_.get(index);
      } else {
        return rateLimitsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Specifies a set of rate limit configurations that could be applied to the
     * route.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
     */
    public Builder setRateLimits(
        int index, io.envoyproxy.envoy.config.route.v3.RateLimit value) {
      if (rateLimitsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRateLimitsIsMutable();
        rateLimits_.set(index, value);
        onChanged();
      } else {
        rateLimitsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of rate limit configurations that could be applied to the
     * route.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
     */
    public Builder setRateLimits(
        int index, io.envoyproxy.envoy.config.route.v3.RateLimit.Builder builderForValue) {
      if (rateLimitsBuilder_ == null) {
        ensureRateLimitsIsMutable();
        rateLimits_.set(index, builderForValue.build());
        onChanged();
      } else {
        rateLimitsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of rate limit configurations that could be applied to the
     * route.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
     */
    public Builder addRateLimits(io.envoyproxy.envoy.config.route.v3.RateLimit value) {
      if (rateLimitsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRateLimitsIsMutable();
        rateLimits_.add(value);
        onChanged();
      } else {
        rateLimitsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of rate limit configurations that could be applied to the
     * route.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
     */
    public Builder addRateLimits(
        int index, io.envoyproxy.envoy.config.route.v3.RateLimit value) {
      if (rateLimitsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureRateLimitsIsMutable();
        rateLimits_.add(index, value);
        onChanged();
      } else {
        rateLimitsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of rate limit configurations that could be applied to the
     * route.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
     */
    public Builder addRateLimits(
        io.envoyproxy.envoy.config.route.v3.RateLimit.Builder builderForValue) {
      if (rateLimitsBuilder_ == null) {
        ensureRateLimitsIsMutable();
        rateLimits_.add(builderForValue.build());
        onChanged();
      } else {
        rateLimitsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of rate limit configurations that could be applied to the
     * route.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
     */
    public Builder addRateLimits(
        int index, io.envoyproxy.envoy.config.route.v3.RateLimit.Builder builderForValue) {
      if (rateLimitsBuilder_ == null) {
        ensureRateLimitsIsMutable();
        rateLimits_.add(index, builderForValue.build());
        onChanged();
      } else {
        rateLimitsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of rate limit configurations that could be applied to the
     * route.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
     */
    public Builder addAllRateLimits(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.route.v3.RateLimit> values) {
      if (rateLimitsBuilder_ == null) {
        ensureRateLimitsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rateLimits_);
        onChanged();
      } else {
        rateLimitsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of rate limit configurations that could be applied to the
     * route.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
     */
    public Builder clearRateLimits() {
      if (rateLimitsBuilder_ == null) {
        rateLimits_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
        onChanged();
      } else {
        rateLimitsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of rate limit configurations that could be applied to the
     * route.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
     */
    public Builder removeRateLimits(int index) {
      if (rateLimitsBuilder_ == null) {
        ensureRateLimitsIsMutable();
        rateLimits_.remove(index);
        onChanged();
      } else {
        rateLimitsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a set of rate limit configurations that could be applied to the
     * route.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RateLimit.Builder getRateLimitsBuilder(
        int index) {
      return getRateLimitsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Specifies a set of rate limit configurations that could be applied to the
     * route.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RateLimitOrBuilder getRateLimitsOrBuilder(
        int index) {
      if (rateLimitsBuilder_ == null) {
        return rateLimits_.get(index);  } else {
        return rateLimitsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Specifies a set of rate limit configurations that could be applied to the
     * route.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.route.v3.RateLimitOrBuilder> 
         getRateLimitsOrBuilderList() {
      if (rateLimitsBuilder_ != null) {
        return rateLimitsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(rateLimits_);
      }
    }
    /**
     * <pre>
     * Specifies a set of rate limit configurations that could be applied to the
     * route.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RateLimit.Builder addRateLimitsBuilder() {
      return getRateLimitsFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.route.v3.RateLimit.getDefaultInstance());
    }
    /**
     * <pre>
     * Specifies a set of rate limit configurations that could be applied to the
     * route.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RateLimit.Builder addRateLimitsBuilder(
        int index) {
      return getRateLimitsFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.route.v3.RateLimit.getDefaultInstance());
    }
    /**
     * <pre>
     * Specifies a set of rate limit configurations that could be applied to the
     * route.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RateLimit rate_limits = 13;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.route.v3.RateLimit.Builder> 
         getRateLimitsBuilderList() {
      return getRateLimitsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.RateLimit, io.envoyproxy.envoy.config.route.v3.RateLimit.Builder, io.envoyproxy.envoy.config.route.v3.RateLimitOrBuilder> 
        getRateLimitsFieldBuilder() {
      if (rateLimitsBuilder_ == null) {
        rateLimitsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.route.v3.RateLimit, io.envoyproxy.envoy.config.route.v3.RateLimit.Builder, io.envoyproxy.envoy.config.route.v3.RateLimitOrBuilder>(
                rateLimits_,
                ((bitField0_ & 0x00400000) != 0),
                getParentForChildren(),
                isClean());
        rateLimits_ = null;
      }
      return rateLimitsBuilder_;
    }

    private com.google.protobuf.BoolValue includeVhRateLimits_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> includeVhRateLimitsBuilder_;
    /**
     * <pre>
     * Specifies if the rate limit filter should include the virtual host rate
     * limits. By default, if the route configured rate limits, the virtual host
     * :ref:`rate_limits &lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` are not applied to the
     * request.
     * This field is deprecated. Please use :ref:`vh_rate_limits &lt;envoy_v3_api_field_extensions.filters.http.ratelimit.v3.RateLimitPerRoute.vh_rate_limits&gt;`
     * </pre>
     *
     * <code>.google.protobuf.BoolValue include_vh_rate_limits = 14 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.route.v3.RouteAction.include_vh_rate_limits is deprecated.
     *     See envoy/config/route/v3/route_components.proto;l=1260
     * @return Whether the includeVhRateLimits field is set.
     */
    @java.lang.Deprecated public boolean hasIncludeVhRateLimits() {
      return ((bitField0_ & 0x00800000) != 0);
    }
    /**
     * <pre>
     * Specifies if the rate limit filter should include the virtual host rate
     * limits. By default, if the route configured rate limits, the virtual host
     * :ref:`rate_limits &lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` are not applied to the
     * request.
     * This field is deprecated. Please use :ref:`vh_rate_limits &lt;envoy_v3_api_field_extensions.filters.http.ratelimit.v3.RateLimitPerRoute.vh_rate_limits&gt;`
     * </pre>
     *
     * <code>.google.protobuf.BoolValue include_vh_rate_limits = 14 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.route.v3.RouteAction.include_vh_rate_limits is deprecated.
     *     See envoy/config/route/v3/route_components.proto;l=1260
     * @return The includeVhRateLimits.
     */
    @java.lang.Deprecated public com.google.protobuf.BoolValue getIncludeVhRateLimits() {
      if (includeVhRateLimitsBuilder_ == null) {
        return includeVhRateLimits_ == null ? com.google.protobuf.BoolValue.getDefaultInstance() : includeVhRateLimits_;
      } else {
        return includeVhRateLimitsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies if the rate limit filter should include the virtual host rate
     * limits. By default, if the route configured rate limits, the virtual host
     * :ref:`rate_limits &lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` are not applied to the
     * request.
     * This field is deprecated. Please use :ref:`vh_rate_limits &lt;envoy_v3_api_field_extensions.filters.http.ratelimit.v3.RateLimitPerRoute.vh_rate_limits&gt;`
     * </pre>
     *
     * <code>.google.protobuf.BoolValue include_vh_rate_limits = 14 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder setIncludeVhRateLimits(com.google.protobuf.BoolValue value) {
      if (includeVhRateLimitsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        includeVhRateLimits_ = value;
      } else {
        includeVhRateLimitsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00800000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies if the rate limit filter should include the virtual host rate
     * limits. By default, if the route configured rate limits, the virtual host
     * :ref:`rate_limits &lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` are not applied to the
     * request.
     * This field is deprecated. Please use :ref:`vh_rate_limits &lt;envoy_v3_api_field_extensions.filters.http.ratelimit.v3.RateLimitPerRoute.vh_rate_limits&gt;`
     * </pre>
     *
     * <code>.google.protobuf.BoolValue include_vh_rate_limits = 14 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder setIncludeVhRateLimits(
        com.google.protobuf.BoolValue.Builder builderForValue) {
      if (includeVhRateLimitsBuilder_ == null) {
        includeVhRateLimits_ = builderForValue.build();
      } else {
        includeVhRateLimitsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00800000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies if the rate limit filter should include the virtual host rate
     * limits. By default, if the route configured rate limits, the virtual host
     * :ref:`rate_limits &lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` are not applied to the
     * request.
     * This field is deprecated. Please use :ref:`vh_rate_limits &lt;envoy_v3_api_field_extensions.filters.http.ratelimit.v3.RateLimitPerRoute.vh_rate_limits&gt;`
     * </pre>
     *
     * <code>.google.protobuf.BoolValue include_vh_rate_limits = 14 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder mergeIncludeVhRateLimits(com.google.protobuf.BoolValue value) {
      if (includeVhRateLimitsBuilder_ == null) {
        if (((bitField0_ & 0x00800000) != 0) &&
          includeVhRateLimits_ != null &&
          includeVhRateLimits_ != com.google.protobuf.BoolValue.getDefaultInstance()) {
          getIncludeVhRateLimitsBuilder().mergeFrom(value);
        } else {
          includeVhRateLimits_ = value;
        }
      } else {
        includeVhRateLimitsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00800000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies if the rate limit filter should include the virtual host rate
     * limits. By default, if the route configured rate limits, the virtual host
     * :ref:`rate_limits &lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` are not applied to the
     * request.
     * This field is deprecated. Please use :ref:`vh_rate_limits &lt;envoy_v3_api_field_extensions.filters.http.ratelimit.v3.RateLimitPerRoute.vh_rate_limits&gt;`
     * </pre>
     *
     * <code>.google.protobuf.BoolValue include_vh_rate_limits = 14 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder clearIncludeVhRateLimits() {
      bitField0_ = (bitField0_ & ~0x00800000);
      includeVhRateLimits_ = null;
      if (includeVhRateLimitsBuilder_ != null) {
        includeVhRateLimitsBuilder_.dispose();
        includeVhRateLimitsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies if the rate limit filter should include the virtual host rate
     * limits. By default, if the route configured rate limits, the virtual host
     * :ref:`rate_limits &lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` are not applied to the
     * request.
     * This field is deprecated. Please use :ref:`vh_rate_limits &lt;envoy_v3_api_field_extensions.filters.http.ratelimit.v3.RateLimitPerRoute.vh_rate_limits&gt;`
     * </pre>
     *
     * <code>.google.protobuf.BoolValue include_vh_rate_limits = 14 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.BoolValue.Builder getIncludeVhRateLimitsBuilder() {
      bitField0_ |= 0x00800000;
      onChanged();
      return getIncludeVhRateLimitsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies if the rate limit filter should include the virtual host rate
     * limits. By default, if the route configured rate limits, the virtual host
     * :ref:`rate_limits &lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` are not applied to the
     * request.
     * This field is deprecated. Please use :ref:`vh_rate_limits &lt;envoy_v3_api_field_extensions.filters.http.ratelimit.v3.RateLimitPerRoute.vh_rate_limits&gt;`
     * </pre>
     *
     * <code>.google.protobuf.BoolValue include_vh_rate_limits = 14 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.BoolValueOrBuilder getIncludeVhRateLimitsOrBuilder() {
      if (includeVhRateLimitsBuilder_ != null) {
        return includeVhRateLimitsBuilder_.getMessageOrBuilder();
      } else {
        return includeVhRateLimits_ == null ?
            com.google.protobuf.BoolValue.getDefaultInstance() : includeVhRateLimits_;
      }
    }
    /**
     * <pre>
     * Specifies if the rate limit filter should include the virtual host rate
     * limits. By default, if the route configured rate limits, the virtual host
     * :ref:`rate_limits &lt;envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits&gt;` are not applied to the
     * request.
     * This field is deprecated. Please use :ref:`vh_rate_limits &lt;envoy_v3_api_field_extensions.filters.http.ratelimit.v3.RateLimitPerRoute.vh_rate_limits&gt;`
     * </pre>
     *
     * <code>.google.protobuf.BoolValue include_vh_rate_limits = 14 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder> 
        getIncludeVhRateLimitsFieldBuilder() {
      if (includeVhRateLimitsBuilder_ == null) {
        includeVhRateLimitsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.BoolValue, com.google.protobuf.BoolValue.Builder, com.google.protobuf.BoolValueOrBuilder>(
                getIncludeVhRateLimits(),
                getParentForChildren(),
                isClean());
        includeVhRateLimits_ = null;
      }
      return includeVhRateLimitsBuilder_;
    }

    private java.util.List<io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy> hashPolicy_ =
      java.util.Collections.emptyList();
    private void ensureHashPolicyIsMutable() {
      if (!((bitField0_ & 0x01000000) != 0)) {
        hashPolicy_ = new java.util.ArrayList<io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy>(hashPolicy_);
        bitField0_ |= 0x01000000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicyOrBuilder> hashPolicyBuilder_;

    /**
     * <pre>
     * Specifies a list of hash policies to use for ring hash load balancing. Each
     * hash policy is evaluated individually and the combined result is used to
     * route the request. The method of combination is deterministic such that
     * identical lists of hash policies will produce the same hash. Since a hash
     * policy examines specific parts of a request, it can fail to produce a hash
     * (i.e. if the hashed header is not present). If (and only if) all configured
     * hash policies fail to generate a hash, no hash will be produced for
     * the route. In this case, the behavior is the same as if no hash policies
     * were specified (i.e. the ring hash load balancer will choose a random
     * backend). If a hash policy has the "terminal" attribute set to true, and
     * there is already a hash generated, the hash is returned immediately,
     * ignoring the rest of the hash policy list.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy> getHashPolicyList() {
      if (hashPolicyBuilder_ == null) {
        return java.util.Collections.unmodifiableList(hashPolicy_);
      } else {
        return hashPolicyBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Specifies a list of hash policies to use for ring hash load balancing. Each
     * hash policy is evaluated individually and the combined result is used to
     * route the request. The method of combination is deterministic such that
     * identical lists of hash policies will produce the same hash. Since a hash
     * policy examines specific parts of a request, it can fail to produce a hash
     * (i.e. if the hashed header is not present). If (and only if) all configured
     * hash policies fail to generate a hash, no hash will be produced for
     * the route. In this case, the behavior is the same as if no hash policies
     * were specified (i.e. the ring hash load balancer will choose a random
     * backend). If a hash policy has the "terminal" attribute set to true, and
     * there is already a hash generated, the hash is returned immediately,
     * ignoring the rest of the hash policy list.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
     */
    public int getHashPolicyCount() {
      if (hashPolicyBuilder_ == null) {
        return hashPolicy_.size();
      } else {
        return hashPolicyBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Specifies a list of hash policies to use for ring hash load balancing. Each
     * hash policy is evaluated individually and the combined result is used to
     * route the request. The method of combination is deterministic such that
     * identical lists of hash policies will produce the same hash. Since a hash
     * policy examines specific parts of a request, it can fail to produce a hash
     * (i.e. if the hashed header is not present). If (and only if) all configured
     * hash policies fail to generate a hash, no hash will be produced for
     * the route. In this case, the behavior is the same as if no hash policies
     * were specified (i.e. the ring hash load balancer will choose a random
     * backend). If a hash policy has the "terminal" attribute set to true, and
     * there is already a hash generated, the hash is returned immediately,
     * ignoring the rest of the hash policy list.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy getHashPolicy(int index) {
      if (hashPolicyBuilder_ == null) {
        return hashPolicy_.get(index);
      } else {
        return hashPolicyBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Specifies a list of hash policies to use for ring hash load balancing. Each
     * hash policy is evaluated individually and the combined result is used to
     * route the request. The method of combination is deterministic such that
     * identical lists of hash policies will produce the same hash. Since a hash
     * policy examines specific parts of a request, it can fail to produce a hash
     * (i.e. if the hashed header is not present). If (and only if) all configured
     * hash policies fail to generate a hash, no hash will be produced for
     * the route. In this case, the behavior is the same as if no hash policies
     * were specified (i.e. the ring hash load balancer will choose a random
     * backend). If a hash policy has the "terminal" attribute set to true, and
     * there is already a hash generated, the hash is returned immediately,
     * ignoring the rest of the hash policy list.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
     */
    public Builder setHashPolicy(
        int index, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy value) {
      if (hashPolicyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHashPolicyIsMutable();
        hashPolicy_.set(index, value);
        onChanged();
      } else {
        hashPolicyBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a list of hash policies to use for ring hash load balancing. Each
     * hash policy is evaluated individually and the combined result is used to
     * route the request. The method of combination is deterministic such that
     * identical lists of hash policies will produce the same hash. Since a hash
     * policy examines specific parts of a request, it can fail to produce a hash
     * (i.e. if the hashed header is not present). If (and only if) all configured
     * hash policies fail to generate a hash, no hash will be produced for
     * the route. In this case, the behavior is the same as if no hash policies
     * were specified (i.e. the ring hash load balancer will choose a random
     * backend). If a hash policy has the "terminal" attribute set to true, and
     * there is already a hash generated, the hash is returned immediately,
     * ignoring the rest of the hash policy list.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
     */
    public Builder setHashPolicy(
        int index, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Builder builderForValue) {
      if (hashPolicyBuilder_ == null) {
        ensureHashPolicyIsMutable();
        hashPolicy_.set(index, builderForValue.build());
        onChanged();
      } else {
        hashPolicyBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a list of hash policies to use for ring hash load balancing. Each
     * hash policy is evaluated individually and the combined result is used to
     * route the request. The method of combination is deterministic such that
     * identical lists of hash policies will produce the same hash. Since a hash
     * policy examines specific parts of a request, it can fail to produce a hash
     * (i.e. if the hashed header is not present). If (and only if) all configured
     * hash policies fail to generate a hash, no hash will be produced for
     * the route. In this case, the behavior is the same as if no hash policies
     * were specified (i.e. the ring hash load balancer will choose a random
     * backend). If a hash policy has the "terminal" attribute set to true, and
     * there is already a hash generated, the hash is returned immediately,
     * ignoring the rest of the hash policy list.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
     */
    public Builder addHashPolicy(io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy value) {
      if (hashPolicyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHashPolicyIsMutable();
        hashPolicy_.add(value);
        onChanged();
      } else {
        hashPolicyBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a list of hash policies to use for ring hash load balancing. Each
     * hash policy is evaluated individually and the combined result is used to
     * route the request. The method of combination is deterministic such that
     * identical lists of hash policies will produce the same hash. Since a hash
     * policy examines specific parts of a request, it can fail to produce a hash
     * (i.e. if the hashed header is not present). If (and only if) all configured
     * hash policies fail to generate a hash, no hash will be produced for
     * the route. In this case, the behavior is the same as if no hash policies
     * were specified (i.e. the ring hash load balancer will choose a random
     * backend). If a hash policy has the "terminal" attribute set to true, and
     * there is already a hash generated, the hash is returned immediately,
     * ignoring the rest of the hash policy list.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
     */
    public Builder addHashPolicy(
        int index, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy value) {
      if (hashPolicyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHashPolicyIsMutable();
        hashPolicy_.add(index, value);
        onChanged();
      } else {
        hashPolicyBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a list of hash policies to use for ring hash load balancing. Each
     * hash policy is evaluated individually and the combined result is used to
     * route the request. The method of combination is deterministic such that
     * identical lists of hash policies will produce the same hash. Since a hash
     * policy examines specific parts of a request, it can fail to produce a hash
     * (i.e. if the hashed header is not present). If (and only if) all configured
     * hash policies fail to generate a hash, no hash will be produced for
     * the route. In this case, the behavior is the same as if no hash policies
     * were specified (i.e. the ring hash load balancer will choose a random
     * backend). If a hash policy has the "terminal" attribute set to true, and
     * there is already a hash generated, the hash is returned immediately,
     * ignoring the rest of the hash policy list.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
     */
    public Builder addHashPolicy(
        io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Builder builderForValue) {
      if (hashPolicyBuilder_ == null) {
        ensureHashPolicyIsMutable();
        hashPolicy_.add(builderForValue.build());
        onChanged();
      } else {
        hashPolicyBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a list of hash policies to use for ring hash load balancing. Each
     * hash policy is evaluated individually and the combined result is used to
     * route the request. The method of combination is deterministic such that
     * identical lists of hash policies will produce the same hash. Since a hash
     * policy examines specific parts of a request, it can fail to produce a hash
     * (i.e. if the hashed header is not present). If (and only if) all configured
     * hash policies fail to generate a hash, no hash will be produced for
     * the route. In this case, the behavior is the same as if no hash policies
     * were specified (i.e. the ring hash load balancer will choose a random
     * backend). If a hash policy has the "terminal" attribute set to true, and
     * there is already a hash generated, the hash is returned immediately,
     * ignoring the rest of the hash policy list.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
     */
    public Builder addHashPolicy(
        int index, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Builder builderForValue) {
      if (hashPolicyBuilder_ == null) {
        ensureHashPolicyIsMutable();
        hashPolicy_.add(index, builderForValue.build());
        onChanged();
      } else {
        hashPolicyBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a list of hash policies to use for ring hash load balancing. Each
     * hash policy is evaluated individually and the combined result is used to
     * route the request. The method of combination is deterministic such that
     * identical lists of hash policies will produce the same hash. Since a hash
     * policy examines specific parts of a request, it can fail to produce a hash
     * (i.e. if the hashed header is not present). If (and only if) all configured
     * hash policies fail to generate a hash, no hash will be produced for
     * the route. In this case, the behavior is the same as if no hash policies
     * were specified (i.e. the ring hash load balancer will choose a random
     * backend). If a hash policy has the "terminal" attribute set to true, and
     * there is already a hash generated, the hash is returned immediately,
     * ignoring the rest of the hash policy list.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
     */
    public Builder addAllHashPolicy(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy> values) {
      if (hashPolicyBuilder_ == null) {
        ensureHashPolicyIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hashPolicy_);
        onChanged();
      } else {
        hashPolicyBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a list of hash policies to use for ring hash load balancing. Each
     * hash policy is evaluated individually and the combined result is used to
     * route the request. The method of combination is deterministic such that
     * identical lists of hash policies will produce the same hash. Since a hash
     * policy examines specific parts of a request, it can fail to produce a hash
     * (i.e. if the hashed header is not present). If (and only if) all configured
     * hash policies fail to generate a hash, no hash will be produced for
     * the route. In this case, the behavior is the same as if no hash policies
     * were specified (i.e. the ring hash load balancer will choose a random
     * backend). If a hash policy has the "terminal" attribute set to true, and
     * there is already a hash generated, the hash is returned immediately,
     * ignoring the rest of the hash policy list.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
     */
    public Builder clearHashPolicy() {
      if (hashPolicyBuilder_ == null) {
        hashPolicy_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x01000000);
        onChanged();
      } else {
        hashPolicyBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a list of hash policies to use for ring hash load balancing. Each
     * hash policy is evaluated individually and the combined result is used to
     * route the request. The method of combination is deterministic such that
     * identical lists of hash policies will produce the same hash. Since a hash
     * policy examines specific parts of a request, it can fail to produce a hash
     * (i.e. if the hashed header is not present). If (and only if) all configured
     * hash policies fail to generate a hash, no hash will be produced for
     * the route. In this case, the behavior is the same as if no hash policies
     * were specified (i.e. the ring hash load balancer will choose a random
     * backend). If a hash policy has the "terminal" attribute set to true, and
     * there is already a hash generated, the hash is returned immediately,
     * ignoring the rest of the hash policy list.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
     */
    public Builder removeHashPolicy(int index) {
      if (hashPolicyBuilder_ == null) {
        ensureHashPolicyIsMutable();
        hashPolicy_.remove(index);
        onChanged();
      } else {
        hashPolicyBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Specifies a list of hash policies to use for ring hash load balancing. Each
     * hash policy is evaluated individually and the combined result is used to
     * route the request. The method of combination is deterministic such that
     * identical lists of hash policies will produce the same hash. Since a hash
     * policy examines specific parts of a request, it can fail to produce a hash
     * (i.e. if the hashed header is not present). If (and only if) all configured
     * hash policies fail to generate a hash, no hash will be produced for
     * the route. In this case, the behavior is the same as if no hash policies
     * were specified (i.e. the ring hash load balancer will choose a random
     * backend). If a hash policy has the "terminal" attribute set to true, and
     * there is already a hash generated, the hash is returned immediately,
     * ignoring the rest of the hash policy list.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Builder getHashPolicyBuilder(
        int index) {
      return getHashPolicyFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Specifies a list of hash policies to use for ring hash load balancing. Each
     * hash policy is evaluated individually and the combined result is used to
     * route the request. The method of combination is deterministic such that
     * identical lists of hash policies will produce the same hash. Since a hash
     * policy examines specific parts of a request, it can fail to produce a hash
     * (i.e. if the hashed header is not present). If (and only if) all configured
     * hash policies fail to generate a hash, no hash will be produced for
     * the route. In this case, the behavior is the same as if no hash policies
     * were specified (i.e. the ring hash load balancer will choose a random
     * backend). If a hash policy has the "terminal" attribute set to true, and
     * there is already a hash generated, the hash is returned immediately,
     * ignoring the rest of the hash policy list.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicyOrBuilder getHashPolicyOrBuilder(
        int index) {
      if (hashPolicyBuilder_ == null) {
        return hashPolicy_.get(index);  } else {
        return hashPolicyBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Specifies a list of hash policies to use for ring hash load balancing. Each
     * hash policy is evaluated individually and the combined result is used to
     * route the request. The method of combination is deterministic such that
     * identical lists of hash policies will produce the same hash. Since a hash
     * policy examines specific parts of a request, it can fail to produce a hash
     * (i.e. if the hashed header is not present). If (and only if) all configured
     * hash policies fail to generate a hash, no hash will be produced for
     * the route. In this case, the behavior is the same as if no hash policies
     * were specified (i.e. the ring hash load balancer will choose a random
     * backend). If a hash policy has the "terminal" attribute set to true, and
     * there is already a hash generated, the hash is returned immediately,
     * ignoring the rest of the hash policy list.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicyOrBuilder> 
         getHashPolicyOrBuilderList() {
      if (hashPolicyBuilder_ != null) {
        return hashPolicyBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(hashPolicy_);
      }
    }
    /**
     * <pre>
     * Specifies a list of hash policies to use for ring hash load balancing. Each
     * hash policy is evaluated individually and the combined result is used to
     * route the request. The method of combination is deterministic such that
     * identical lists of hash policies will produce the same hash. Since a hash
     * policy examines specific parts of a request, it can fail to produce a hash
     * (i.e. if the hashed header is not present). If (and only if) all configured
     * hash policies fail to generate a hash, no hash will be produced for
     * the route. In this case, the behavior is the same as if no hash policies
     * were specified (i.e. the ring hash load balancer will choose a random
     * backend). If a hash policy has the "terminal" attribute set to true, and
     * there is already a hash generated, the hash is returned immediately,
     * ignoring the rest of the hash policy list.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Builder addHashPolicyBuilder() {
      return getHashPolicyFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.getDefaultInstance());
    }
    /**
     * <pre>
     * Specifies a list of hash policies to use for ring hash load balancing. Each
     * hash policy is evaluated individually and the combined result is used to
     * route the request. The method of combination is deterministic such that
     * identical lists of hash policies will produce the same hash. Since a hash
     * policy examines specific parts of a request, it can fail to produce a hash
     * (i.e. if the hashed header is not present). If (and only if) all configured
     * hash policies fail to generate a hash, no hash will be produced for
     * the route. In this case, the behavior is the same as if no hash policies
     * were specified (i.e. the ring hash load balancer will choose a random
     * backend). If a hash policy has the "terminal" attribute set to true, and
     * there is already a hash generated, the hash is returned immediately,
     * ignoring the rest of the hash policy list.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Builder addHashPolicyBuilder(
        int index) {
      return getHashPolicyFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.getDefaultInstance());
    }
    /**
     * <pre>
     * Specifies a list of hash policies to use for ring hash load balancing. Each
     * hash policy is evaluated individually and the combined result is used to
     * route the request. The method of combination is deterministic such that
     * identical lists of hash policies will produce the same hash. Since a hash
     * policy examines specific parts of a request, it can fail to produce a hash
     * (i.e. if the hashed header is not present). If (and only if) all configured
     * hash policies fail to generate a hash, no hash will be produced for
     * the route. In this case, the behavior is the same as if no hash policies
     * were specified (i.e. the ring hash load balancer will choose a random
     * backend). If a hash policy has the "terminal" attribute set to true, and
     * there is already a hash generated, the hash is returned immediately,
     * ignoring the rest of the hash policy list.
     * </pre>
     *
     * <code>repeated .envoy.config.route.v3.RouteAction.HashPolicy hash_policy = 15;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Builder> 
         getHashPolicyBuilderList() {
      return getHashPolicyFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicyOrBuilder> 
        getHashPolicyFieldBuilder() {
      if (hashPolicyBuilder_ == null) {
        hashPolicyBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicy.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.HashPolicyOrBuilder>(
                hashPolicy_,
                ((bitField0_ & 0x01000000) != 0),
                getParentForChildren(),
                isClean());
        hashPolicy_ = null;
      }
      return hashPolicyBuilder_;
    }

    private io.envoyproxy.envoy.config.route.v3.CorsPolicy cors_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.CorsPolicy, io.envoyproxy.envoy.config.route.v3.CorsPolicy.Builder, io.envoyproxy.envoy.config.route.v3.CorsPolicyOrBuilder> corsBuilder_;
    /**
     * <pre>
     * Indicates that the route has a CORS policy. This field is ignored if related cors policy is
     * found in the :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
     * :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`.
     * .. attention::
     *   This option has been deprecated. Please use
     *   :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
     *   :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`
     *   to configure the CORS HTTP filter.
     * </pre>
     *
     * <code>.envoy.config.route.v3.CorsPolicy cors = 17 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.route.v3.RouteAction.cors is deprecated.
     *     See envoy/config/route/v3/route_components.proto;l=1287
     * @return Whether the cors field is set.
     */
    @java.lang.Deprecated public boolean hasCors() {
      return ((bitField0_ & 0x02000000) != 0);
    }
    /**
     * <pre>
     * Indicates that the route has a CORS policy. This field is ignored if related cors policy is
     * found in the :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
     * :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`.
     * .. attention::
     *   This option has been deprecated. Please use
     *   :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
     *   :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`
     *   to configure the CORS HTTP filter.
     * </pre>
     *
     * <code>.envoy.config.route.v3.CorsPolicy cors = 17 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.route.v3.RouteAction.cors is deprecated.
     *     See envoy/config/route/v3/route_components.proto;l=1287
     * @return The cors.
     */
    @java.lang.Deprecated public io.envoyproxy.envoy.config.route.v3.CorsPolicy getCors() {
      if (corsBuilder_ == null) {
        return cors_ == null ? io.envoyproxy.envoy.config.route.v3.CorsPolicy.getDefaultInstance() : cors_;
      } else {
        return corsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Indicates that the route has a CORS policy. This field is ignored if related cors policy is
     * found in the :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
     * :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`.
     * .. attention::
     *   This option has been deprecated. Please use
     *   :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
     *   :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`
     *   to configure the CORS HTTP filter.
     * </pre>
     *
     * <code>.envoy.config.route.v3.CorsPolicy cors = 17 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder setCors(io.envoyproxy.envoy.config.route.v3.CorsPolicy value) {
      if (corsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        cors_ = value;
      } else {
        corsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x02000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that the route has a CORS policy. This field is ignored if related cors policy is
     * found in the :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
     * :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`.
     * .. attention::
     *   This option has been deprecated. Please use
     *   :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
     *   :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`
     *   to configure the CORS HTTP filter.
     * </pre>
     *
     * <code>.envoy.config.route.v3.CorsPolicy cors = 17 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder setCors(
        io.envoyproxy.envoy.config.route.v3.CorsPolicy.Builder builderForValue) {
      if (corsBuilder_ == null) {
        cors_ = builderForValue.build();
      } else {
        corsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x02000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that the route has a CORS policy. This field is ignored if related cors policy is
     * found in the :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
     * :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`.
     * .. attention::
     *   This option has been deprecated. Please use
     *   :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
     *   :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`
     *   to configure the CORS HTTP filter.
     * </pre>
     *
     * <code>.envoy.config.route.v3.CorsPolicy cors = 17 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder mergeCors(io.envoyproxy.envoy.config.route.v3.CorsPolicy value) {
      if (corsBuilder_ == null) {
        if (((bitField0_ & 0x02000000) != 0) &&
          cors_ != null &&
          cors_ != io.envoyproxy.envoy.config.route.v3.CorsPolicy.getDefaultInstance()) {
          getCorsBuilder().mergeFrom(value);
        } else {
          cors_ = value;
        }
      } else {
        corsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x02000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that the route has a CORS policy. This field is ignored if related cors policy is
     * found in the :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
     * :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`.
     * .. attention::
     *   This option has been deprecated. Please use
     *   :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
     *   :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`
     *   to configure the CORS HTTP filter.
     * </pre>
     *
     * <code>.envoy.config.route.v3.CorsPolicy cors = 17 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder clearCors() {
      bitField0_ = (bitField0_ & ~0x02000000);
      cors_ = null;
      if (corsBuilder_ != null) {
        corsBuilder_.dispose();
        corsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that the route has a CORS policy. This field is ignored if related cors policy is
     * found in the :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
     * :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`.
     * .. attention::
     *   This option has been deprecated. Please use
     *   :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
     *   :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`
     *   to configure the CORS HTTP filter.
     * </pre>
     *
     * <code>.envoy.config.route.v3.CorsPolicy cors = 17 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public io.envoyproxy.envoy.config.route.v3.CorsPolicy.Builder getCorsBuilder() {
      bitField0_ |= 0x02000000;
      onChanged();
      return getCorsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Indicates that the route has a CORS policy. This field is ignored if related cors policy is
     * found in the :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
     * :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`.
     * .. attention::
     *   This option has been deprecated. Please use
     *   :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
     *   :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`
     *   to configure the CORS HTTP filter.
     * </pre>
     *
     * <code>.envoy.config.route.v3.CorsPolicy cors = 17 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public io.envoyproxy.envoy.config.route.v3.CorsPolicyOrBuilder getCorsOrBuilder() {
      if (corsBuilder_ != null) {
        return corsBuilder_.getMessageOrBuilder();
      } else {
        return cors_ == null ?
            io.envoyproxy.envoy.config.route.v3.CorsPolicy.getDefaultInstance() : cors_;
      }
    }
    /**
     * <pre>
     * Indicates that the route has a CORS policy. This field is ignored if related cors policy is
     * found in the :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
     * :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`.
     * .. attention::
     *   This option has been deprecated. Please use
     *   :ref:`Route.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config&gt;` or
     *   :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config&lt;envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config&gt;`
     *   to configure the CORS HTTP filter.
     * </pre>
     *
     * <code>.envoy.config.route.v3.CorsPolicy cors = 17 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.CorsPolicy, io.envoyproxy.envoy.config.route.v3.CorsPolicy.Builder, io.envoyproxy.envoy.config.route.v3.CorsPolicyOrBuilder> 
        getCorsFieldBuilder() {
      if (corsBuilder_ == null) {
        corsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.route.v3.CorsPolicy, io.envoyproxy.envoy.config.route.v3.CorsPolicy.Builder, io.envoyproxy.envoy.config.route.v3.CorsPolicyOrBuilder>(
                getCors(),
                getParentForChildren(),
                isClean());
        cors_ = null;
      }
      return corsBuilder_;
    }

    private com.google.protobuf.Duration maxGrpcTimeout_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> maxGrpcTimeoutBuilder_;
    /**
     * <pre>
     * Deprecated by :ref:`grpc_timeout_header_max &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_max&gt;`
     * If present, and the request is a gRPC request, use the
     * `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_,
     * or its default value (infinity) instead of
     * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, but limit the applied timeout
     * to the maximum value specified here. If configured as 0, the maximum allowed timeout for
     * gRPC requests is infinity. If not configured at all, the ``grpc-timeout`` header is not used
     * and gRPC requests time out like any other requests using
     * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;` or its default.
     * This can be used to prevent unexpected upstream request timeouts due to potentially long
     * time gaps between gRPC request and response in gRPC streaming mode.
     * .. note::
     *    If a timeout is specified using :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`, it takes
     *    precedence over `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, when
     *    both are present. See also
     *    :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
     *    :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
     *    :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_grpc_timeout = 23 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.route.v3.RouteAction.max_grpc_timeout is deprecated.
     *     See envoy/config/route/v3/route_components.proto;l=1309
     * @return Whether the maxGrpcTimeout field is set.
     */
    @java.lang.Deprecated public boolean hasMaxGrpcTimeout() {
      return ((bitField0_ & 0x04000000) != 0);
    }
    /**
     * <pre>
     * Deprecated by :ref:`grpc_timeout_header_max &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_max&gt;`
     * If present, and the request is a gRPC request, use the
     * `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_,
     * or its default value (infinity) instead of
     * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, but limit the applied timeout
     * to the maximum value specified here. If configured as 0, the maximum allowed timeout for
     * gRPC requests is infinity. If not configured at all, the ``grpc-timeout`` header is not used
     * and gRPC requests time out like any other requests using
     * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;` or its default.
     * This can be used to prevent unexpected upstream request timeouts due to potentially long
     * time gaps between gRPC request and response in gRPC streaming mode.
     * .. note::
     *    If a timeout is specified using :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`, it takes
     *    precedence over `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, when
     *    both are present. See also
     *    :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
     *    :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
     *    :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_grpc_timeout = 23 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.route.v3.RouteAction.max_grpc_timeout is deprecated.
     *     See envoy/config/route/v3/route_components.proto;l=1309
     * @return The maxGrpcTimeout.
     */
    @java.lang.Deprecated public com.google.protobuf.Duration getMaxGrpcTimeout() {
      if (maxGrpcTimeoutBuilder_ == null) {
        return maxGrpcTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : maxGrpcTimeout_;
      } else {
        return maxGrpcTimeoutBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Deprecated by :ref:`grpc_timeout_header_max &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_max&gt;`
     * If present, and the request is a gRPC request, use the
     * `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_,
     * or its default value (infinity) instead of
     * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, but limit the applied timeout
     * to the maximum value specified here. If configured as 0, the maximum allowed timeout for
     * gRPC requests is infinity. If not configured at all, the ``grpc-timeout`` header is not used
     * and gRPC requests time out like any other requests using
     * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;` or its default.
     * This can be used to prevent unexpected upstream request timeouts due to potentially long
     * time gaps between gRPC request and response in gRPC streaming mode.
     * .. note::
     *    If a timeout is specified using :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`, it takes
     *    precedence over `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, when
     *    both are present. See also
     *    :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
     *    :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
     *    :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_grpc_timeout = 23 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder setMaxGrpcTimeout(com.google.protobuf.Duration value) {
      if (maxGrpcTimeoutBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxGrpcTimeout_ = value;
      } else {
        maxGrpcTimeoutBuilder_.setMessage(value);
      }
      bitField0_ |= 0x04000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Deprecated by :ref:`grpc_timeout_header_max &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_max&gt;`
     * If present, and the request is a gRPC request, use the
     * `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_,
     * or its default value (infinity) instead of
     * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, but limit the applied timeout
     * to the maximum value specified here. If configured as 0, the maximum allowed timeout for
     * gRPC requests is infinity. If not configured at all, the ``grpc-timeout`` header is not used
     * and gRPC requests time out like any other requests using
     * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;` or its default.
     * This can be used to prevent unexpected upstream request timeouts due to potentially long
     * time gaps between gRPC request and response in gRPC streaming mode.
     * .. note::
     *    If a timeout is specified using :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`, it takes
     *    precedence over `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, when
     *    both are present. See also
     *    :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
     *    :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
     *    :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_grpc_timeout = 23 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder setMaxGrpcTimeout(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (maxGrpcTimeoutBuilder_ == null) {
        maxGrpcTimeout_ = builderForValue.build();
      } else {
        maxGrpcTimeoutBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x04000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Deprecated by :ref:`grpc_timeout_header_max &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_max&gt;`
     * If present, and the request is a gRPC request, use the
     * `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_,
     * or its default value (infinity) instead of
     * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, but limit the applied timeout
     * to the maximum value specified here. If configured as 0, the maximum allowed timeout for
     * gRPC requests is infinity. If not configured at all, the ``grpc-timeout`` header is not used
     * and gRPC requests time out like any other requests using
     * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;` or its default.
     * This can be used to prevent unexpected upstream request timeouts due to potentially long
     * time gaps between gRPC request and response in gRPC streaming mode.
     * .. note::
     *    If a timeout is specified using :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`, it takes
     *    precedence over `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, when
     *    both are present. See also
     *    :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
     *    :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
     *    :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_grpc_timeout = 23 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder mergeMaxGrpcTimeout(com.google.protobuf.Duration value) {
      if (maxGrpcTimeoutBuilder_ == null) {
        if (((bitField0_ & 0x04000000) != 0) &&
          maxGrpcTimeout_ != null &&
          maxGrpcTimeout_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getMaxGrpcTimeoutBuilder().mergeFrom(value);
        } else {
          maxGrpcTimeout_ = value;
        }
      } else {
        maxGrpcTimeoutBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x04000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Deprecated by :ref:`grpc_timeout_header_max &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_max&gt;`
     * If present, and the request is a gRPC request, use the
     * `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_,
     * or its default value (infinity) instead of
     * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, but limit the applied timeout
     * to the maximum value specified here. If configured as 0, the maximum allowed timeout for
     * gRPC requests is infinity. If not configured at all, the ``grpc-timeout`` header is not used
     * and gRPC requests time out like any other requests using
     * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;` or its default.
     * This can be used to prevent unexpected upstream request timeouts due to potentially long
     * time gaps between gRPC request and response in gRPC streaming mode.
     * .. note::
     *    If a timeout is specified using :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`, it takes
     *    precedence over `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, when
     *    both are present. See also
     *    :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
     *    :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
     *    :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_grpc_timeout = 23 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder clearMaxGrpcTimeout() {
      bitField0_ = (bitField0_ & ~0x04000000);
      maxGrpcTimeout_ = null;
      if (maxGrpcTimeoutBuilder_ != null) {
        maxGrpcTimeoutBuilder_.dispose();
        maxGrpcTimeoutBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Deprecated by :ref:`grpc_timeout_header_max &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_max&gt;`
     * If present, and the request is a gRPC request, use the
     * `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_,
     * or its default value (infinity) instead of
     * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, but limit the applied timeout
     * to the maximum value specified here. If configured as 0, the maximum allowed timeout for
     * gRPC requests is infinity. If not configured at all, the ``grpc-timeout`` header is not used
     * and gRPC requests time out like any other requests using
     * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;` or its default.
     * This can be used to prevent unexpected upstream request timeouts due to potentially long
     * time gaps between gRPC request and response in gRPC streaming mode.
     * .. note::
     *    If a timeout is specified using :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`, it takes
     *    precedence over `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, when
     *    both are present. See also
     *    :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
     *    :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
     *    :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_grpc_timeout = 23 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.Duration.Builder getMaxGrpcTimeoutBuilder() {
      bitField0_ |= 0x04000000;
      onChanged();
      return getMaxGrpcTimeoutFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Deprecated by :ref:`grpc_timeout_header_max &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_max&gt;`
     * If present, and the request is a gRPC request, use the
     * `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_,
     * or its default value (infinity) instead of
     * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, but limit the applied timeout
     * to the maximum value specified here. If configured as 0, the maximum allowed timeout for
     * gRPC requests is infinity. If not configured at all, the ``grpc-timeout`` header is not used
     * and gRPC requests time out like any other requests using
     * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;` or its default.
     * This can be used to prevent unexpected upstream request timeouts due to potentially long
     * time gaps between gRPC request and response in gRPC streaming mode.
     * .. note::
     *    If a timeout is specified using :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`, it takes
     *    precedence over `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, when
     *    both are present. See also
     *    :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
     *    :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
     *    :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_grpc_timeout = 23 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.DurationOrBuilder getMaxGrpcTimeoutOrBuilder() {
      if (maxGrpcTimeoutBuilder_ != null) {
        return maxGrpcTimeoutBuilder_.getMessageOrBuilder();
      } else {
        return maxGrpcTimeout_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : maxGrpcTimeout_;
      }
    }
    /**
     * <pre>
     * Deprecated by :ref:`grpc_timeout_header_max &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_max&gt;`
     * If present, and the request is a gRPC request, use the
     * `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_,
     * or its default value (infinity) instead of
     * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;`, but limit the applied timeout
     * to the maximum value specified here. If configured as 0, the maximum allowed timeout for
     * gRPC requests is infinity. If not configured at all, the ``grpc-timeout`` header is not used
     * and gRPC requests time out like any other requests using
     * :ref:`timeout &lt;envoy_v3_api_field_config.route.v3.RouteAction.timeout&gt;` or its default.
     * This can be used to prevent unexpected upstream request timeouts due to potentially long
     * time gaps between gRPC request and response in gRPC streaming mode.
     * .. note::
     *    If a timeout is specified using :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`, it takes
     *    precedence over `grpc-timeout header &lt;https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md&gt;`_, when
     *    both are present. See also
     *    :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,
     *    :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the
     *    :ref:`retry overview &lt;arch_overview_http_routing_retry&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.Duration max_grpc_timeout = 23 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getMaxGrpcTimeoutFieldBuilder() {
      if (maxGrpcTimeoutBuilder_ == null) {
        maxGrpcTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getMaxGrpcTimeout(),
                getParentForChildren(),
                isClean());
        maxGrpcTimeout_ = null;
      }
      return maxGrpcTimeoutBuilder_;
    }

    private com.google.protobuf.Duration grpcTimeoutOffset_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> grpcTimeoutOffsetBuilder_;
    /**
     * <pre>
     * Deprecated by :ref:`grpc_timeout_header_offset &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_offset&gt;`.
     * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by subtracting
     * the provided duration from the header. This is useful in allowing Envoy to set its global
     * timeout to be less than that of the deadline imposed by the calling client, which makes it more
     * likely that Envoy will handle the timeout instead of having the call canceled by the client.
     * The offset will only be applied if the provided grpc_timeout is greater than the offset. This
     * ensures that the offset will only ever decrease the timeout and never set it to 0 (meaning
     * infinity).
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_offset = 28 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.route.v3.RouteAction.grpc_timeout_offset is deprecated.
     *     See envoy/config/route/v3/route_components.proto;l=1320
     * @return Whether the grpcTimeoutOffset field is set.
     */
    @java.lang.Deprecated public boolean hasGrpcTimeoutOffset() {
      return ((bitField0_ & 0x08000000) != 0);
    }
    /**
     * <pre>
     * Deprecated by :ref:`grpc_timeout_header_offset &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_offset&gt;`.
     * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by subtracting
     * the provided duration from the header. This is useful in allowing Envoy to set its global
     * timeout to be less than that of the deadline imposed by the calling client, which makes it more
     * likely that Envoy will handle the timeout instead of having the call canceled by the client.
     * The offset will only be applied if the provided grpc_timeout is greater than the offset. This
     * ensures that the offset will only ever decrease the timeout and never set it to 0 (meaning
     * infinity).
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_offset = 28 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.route.v3.RouteAction.grpc_timeout_offset is deprecated.
     *     See envoy/config/route/v3/route_components.proto;l=1320
     * @return The grpcTimeoutOffset.
     */
    @java.lang.Deprecated public com.google.protobuf.Duration getGrpcTimeoutOffset() {
      if (grpcTimeoutOffsetBuilder_ == null) {
        return grpcTimeoutOffset_ == null ? com.google.protobuf.Duration.getDefaultInstance() : grpcTimeoutOffset_;
      } else {
        return grpcTimeoutOffsetBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Deprecated by :ref:`grpc_timeout_header_offset &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_offset&gt;`.
     * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by subtracting
     * the provided duration from the header. This is useful in allowing Envoy to set its global
     * timeout to be less than that of the deadline imposed by the calling client, which makes it more
     * likely that Envoy will handle the timeout instead of having the call canceled by the client.
     * The offset will only be applied if the provided grpc_timeout is greater than the offset. This
     * ensures that the offset will only ever decrease the timeout and never set it to 0 (meaning
     * infinity).
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_offset = 28 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder setGrpcTimeoutOffset(com.google.protobuf.Duration value) {
      if (grpcTimeoutOffsetBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        grpcTimeoutOffset_ = value;
      } else {
        grpcTimeoutOffsetBuilder_.setMessage(value);
      }
      bitField0_ |= 0x08000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Deprecated by :ref:`grpc_timeout_header_offset &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_offset&gt;`.
     * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by subtracting
     * the provided duration from the header. This is useful in allowing Envoy to set its global
     * timeout to be less than that of the deadline imposed by the calling client, which makes it more
     * likely that Envoy will handle the timeout instead of having the call canceled by the client.
     * The offset will only be applied if the provided grpc_timeout is greater than the offset. This
     * ensures that the offset will only ever decrease the timeout and never set it to 0 (meaning
     * infinity).
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_offset = 28 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder setGrpcTimeoutOffset(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (grpcTimeoutOffsetBuilder_ == null) {
        grpcTimeoutOffset_ = builderForValue.build();
      } else {
        grpcTimeoutOffsetBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x08000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Deprecated by :ref:`grpc_timeout_header_offset &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_offset&gt;`.
     * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by subtracting
     * the provided duration from the header. This is useful in allowing Envoy to set its global
     * timeout to be less than that of the deadline imposed by the calling client, which makes it more
     * likely that Envoy will handle the timeout instead of having the call canceled by the client.
     * The offset will only be applied if the provided grpc_timeout is greater than the offset. This
     * ensures that the offset will only ever decrease the timeout and never set it to 0 (meaning
     * infinity).
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_offset = 28 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder mergeGrpcTimeoutOffset(com.google.protobuf.Duration value) {
      if (grpcTimeoutOffsetBuilder_ == null) {
        if (((bitField0_ & 0x08000000) != 0) &&
          grpcTimeoutOffset_ != null &&
          grpcTimeoutOffset_ != com.google.protobuf.Duration.getDefaultInstance()) {
          getGrpcTimeoutOffsetBuilder().mergeFrom(value);
        } else {
          grpcTimeoutOffset_ = value;
        }
      } else {
        grpcTimeoutOffsetBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x08000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Deprecated by :ref:`grpc_timeout_header_offset &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_offset&gt;`.
     * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by subtracting
     * the provided duration from the header. This is useful in allowing Envoy to set its global
     * timeout to be less than that of the deadline imposed by the calling client, which makes it more
     * likely that Envoy will handle the timeout instead of having the call canceled by the client.
     * The offset will only be applied if the provided grpc_timeout is greater than the offset. This
     * ensures that the offset will only ever decrease the timeout and never set it to 0 (meaning
     * infinity).
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_offset = 28 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder clearGrpcTimeoutOffset() {
      bitField0_ = (bitField0_ & ~0x08000000);
      grpcTimeoutOffset_ = null;
      if (grpcTimeoutOffsetBuilder_ != null) {
        grpcTimeoutOffsetBuilder_.dispose();
        grpcTimeoutOffsetBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Deprecated by :ref:`grpc_timeout_header_offset &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_offset&gt;`.
     * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by subtracting
     * the provided duration from the header. This is useful in allowing Envoy to set its global
     * timeout to be less than that of the deadline imposed by the calling client, which makes it more
     * likely that Envoy will handle the timeout instead of having the call canceled by the client.
     * The offset will only be applied if the provided grpc_timeout is greater than the offset. This
     * ensures that the offset will only ever decrease the timeout and never set it to 0 (meaning
     * infinity).
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_offset = 28 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.Duration.Builder getGrpcTimeoutOffsetBuilder() {
      bitField0_ |= 0x08000000;
      onChanged();
      return getGrpcTimeoutOffsetFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Deprecated by :ref:`grpc_timeout_header_offset &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_offset&gt;`.
     * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by subtracting
     * the provided duration from the header. This is useful in allowing Envoy to set its global
     * timeout to be less than that of the deadline imposed by the calling client, which makes it more
     * likely that Envoy will handle the timeout instead of having the call canceled by the client.
     * The offset will only be applied if the provided grpc_timeout is greater than the offset. This
     * ensures that the offset will only ever decrease the timeout and never set it to 0 (meaning
     * infinity).
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_offset = 28 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.DurationOrBuilder getGrpcTimeoutOffsetOrBuilder() {
      if (grpcTimeoutOffsetBuilder_ != null) {
        return grpcTimeoutOffsetBuilder_.getMessageOrBuilder();
      } else {
        return grpcTimeoutOffset_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : grpcTimeoutOffset_;
      }
    }
    /**
     * <pre>
     * Deprecated by :ref:`grpc_timeout_header_offset &lt;envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_offset&gt;`.
     * If present, Envoy will adjust the timeout provided by the ``grpc-timeout`` header by subtracting
     * the provided duration from the header. This is useful in allowing Envoy to set its global
     * timeout to be less than that of the deadline imposed by the calling client, which makes it more
     * likely that Envoy will handle the timeout instead of having the call canceled by the client.
     * The offset will only be applied if the provided grpc_timeout is greater than the offset. This
     * ensures that the offset will only ever decrease the timeout and never set it to 0 (meaning
     * infinity).
     * </pre>
     *
     * <code>.google.protobuf.Duration grpc_timeout_offset = 28 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getGrpcTimeoutOffsetFieldBuilder() {
      if (grpcTimeoutOffsetBuilder_ == null) {
        grpcTimeoutOffsetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getGrpcTimeoutOffset(),
                getParentForChildren(),
                isClean());
        grpcTimeoutOffset_ = null;
      }
      return grpcTimeoutOffsetBuilder_;
    }

    private java.util.List<io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig> upgradeConfigs_ =
      java.util.Collections.emptyList();
    private void ensureUpgradeConfigsIsMutable() {
      if (!((bitField0_ & 0x10000000) != 0)) {
        upgradeConfigs_ = new java.util.ArrayList<io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig>(upgradeConfigs_);
        bitField0_ |= 0x10000000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfigOrBuilder> upgradeConfigsBuilder_;

    /**
     * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig> getUpgradeConfigsList() {
      if (upgradeConfigsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(upgradeConfigs_);
      } else {
        return upgradeConfigsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
     */
    public int getUpgradeConfigsCount() {
      if (upgradeConfigsBuilder_ == null) {
        return upgradeConfigs_.size();
      } else {
        return upgradeConfigsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig getUpgradeConfigs(int index) {
      if (upgradeConfigsBuilder_ == null) {
        return upgradeConfigs_.get(index);
      } else {
        return upgradeConfigsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
     */
    public Builder setUpgradeConfigs(
        int index, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig value) {
      if (upgradeConfigsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUpgradeConfigsIsMutable();
        upgradeConfigs_.set(index, value);
        onChanged();
      } else {
        upgradeConfigsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
     */
    public Builder setUpgradeConfigs(
        int index, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.Builder builderForValue) {
      if (upgradeConfigsBuilder_ == null) {
        ensureUpgradeConfigsIsMutable();
        upgradeConfigs_.set(index, builderForValue.build());
        onChanged();
      } else {
        upgradeConfigsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
     */
    public Builder addUpgradeConfigs(io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig value) {
      if (upgradeConfigsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUpgradeConfigsIsMutable();
        upgradeConfigs_.add(value);
        onChanged();
      } else {
        upgradeConfigsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
     */
    public Builder addUpgradeConfigs(
        int index, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig value) {
      if (upgradeConfigsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUpgradeConfigsIsMutable();
        upgradeConfigs_.add(index, value);
        onChanged();
      } else {
        upgradeConfigsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
     */
    public Builder addUpgradeConfigs(
        io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.Builder builderForValue) {
      if (upgradeConfigsBuilder_ == null) {
        ensureUpgradeConfigsIsMutable();
        upgradeConfigs_.add(builderForValue.build());
        onChanged();
      } else {
        upgradeConfigsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
     */
    public Builder addUpgradeConfigs(
        int index, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.Builder builderForValue) {
      if (upgradeConfigsBuilder_ == null) {
        ensureUpgradeConfigsIsMutable();
        upgradeConfigs_.add(index, builderForValue.build());
        onChanged();
      } else {
        upgradeConfigsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
     */
    public Builder addAllUpgradeConfigs(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig> values) {
      if (upgradeConfigsBuilder_ == null) {
        ensureUpgradeConfigsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, upgradeConfigs_);
        onChanged();
      } else {
        upgradeConfigsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
     */
    public Builder clearUpgradeConfigs() {
      if (upgradeConfigsBuilder_ == null) {
        upgradeConfigs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x10000000);
        onChanged();
      } else {
        upgradeConfigsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
     */
    public Builder removeUpgradeConfigs(int index) {
      if (upgradeConfigsBuilder_ == null) {
        ensureUpgradeConfigsIsMutable();
        upgradeConfigs_.remove(index);
        onChanged();
      } else {
        upgradeConfigsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.Builder getUpgradeConfigsBuilder(
        int index) {
      return getUpgradeConfigsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfigOrBuilder getUpgradeConfigsOrBuilder(
        int index) {
      if (upgradeConfigsBuilder_ == null) {
        return upgradeConfigs_.get(index);  } else {
        return upgradeConfigsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfigOrBuilder> 
         getUpgradeConfigsOrBuilderList() {
      if (upgradeConfigsBuilder_ != null) {
        return upgradeConfigsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(upgradeConfigs_);
      }
    }
    /**
     * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.Builder addUpgradeConfigsBuilder() {
      return getUpgradeConfigsFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.getDefaultInstance());
    }
    /**
     * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.Builder addUpgradeConfigsBuilder(
        int index) {
      return getUpgradeConfigsFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.getDefaultInstance());
    }
    /**
     * <code>repeated .envoy.config.route.v3.RouteAction.UpgradeConfig upgrade_configs = 25;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.Builder> 
         getUpgradeConfigsBuilderList() {
      return getUpgradeConfigsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfigOrBuilder> 
        getUpgradeConfigsFieldBuilder() {
      if (upgradeConfigsBuilder_ == null) {
        upgradeConfigsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfig.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.UpgradeConfigOrBuilder>(
                upgradeConfigs_,
                ((bitField0_ & 0x10000000) != 0),
                getParentForChildren(),
                isClean());
        upgradeConfigs_ = null;
      }
      return upgradeConfigsBuilder_;
    }

    private io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy internalRedirectPolicy_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy, io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy.Builder, io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicyOrBuilder> internalRedirectPolicyBuilder_;
    /**
     * <pre>
     * If present, Envoy will try to follow an upstream redirect response instead of proxying the
     * response back to the downstream. An upstream redirect response is defined
     * by :ref:`redirect_response_codes
     * &lt;envoy_v3_api_field_config.route.v3.InternalRedirectPolicy.redirect_response_codes&gt;`.
     * </pre>
     *
     * <code>.envoy.config.route.v3.InternalRedirectPolicy internal_redirect_policy = 34;</code>
     * @return Whether the internalRedirectPolicy field is set.
     */
    public boolean hasInternalRedirectPolicy() {
      return ((bitField0_ & 0x20000000) != 0);
    }
    /**
     * <pre>
     * If present, Envoy will try to follow an upstream redirect response instead of proxying the
     * response back to the downstream. An upstream redirect response is defined
     * by :ref:`redirect_response_codes
     * &lt;envoy_v3_api_field_config.route.v3.InternalRedirectPolicy.redirect_response_codes&gt;`.
     * </pre>
     *
     * <code>.envoy.config.route.v3.InternalRedirectPolicy internal_redirect_policy = 34;</code>
     * @return The internalRedirectPolicy.
     */
    public io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy getInternalRedirectPolicy() {
      if (internalRedirectPolicyBuilder_ == null) {
        return internalRedirectPolicy_ == null ? io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy.getDefaultInstance() : internalRedirectPolicy_;
      } else {
        return internalRedirectPolicyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If present, Envoy will try to follow an upstream redirect response instead of proxying the
     * response back to the downstream. An upstream redirect response is defined
     * by :ref:`redirect_response_codes
     * &lt;envoy_v3_api_field_config.route.v3.InternalRedirectPolicy.redirect_response_codes&gt;`.
     * </pre>
     *
     * <code>.envoy.config.route.v3.InternalRedirectPolicy internal_redirect_policy = 34;</code>
     */
    public Builder setInternalRedirectPolicy(io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy value) {
      if (internalRedirectPolicyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        internalRedirectPolicy_ = value;
      } else {
        internalRedirectPolicyBuilder_.setMessage(value);
      }
      bitField0_ |= 0x20000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If present, Envoy will try to follow an upstream redirect response instead of proxying the
     * response back to the downstream. An upstream redirect response is defined
     * by :ref:`redirect_response_codes
     * &lt;envoy_v3_api_field_config.route.v3.InternalRedirectPolicy.redirect_response_codes&gt;`.
     * </pre>
     *
     * <code>.envoy.config.route.v3.InternalRedirectPolicy internal_redirect_policy = 34;</code>
     */
    public Builder setInternalRedirectPolicy(
        io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy.Builder builderForValue) {
      if (internalRedirectPolicyBuilder_ == null) {
        internalRedirectPolicy_ = builderForValue.build();
      } else {
        internalRedirectPolicyBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x20000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If present, Envoy will try to follow an upstream redirect response instead of proxying the
     * response back to the downstream. An upstream redirect response is defined
     * by :ref:`redirect_response_codes
     * &lt;envoy_v3_api_field_config.route.v3.InternalRedirectPolicy.redirect_response_codes&gt;`.
     * </pre>
     *
     * <code>.envoy.config.route.v3.InternalRedirectPolicy internal_redirect_policy = 34;</code>
     */
    public Builder mergeInternalRedirectPolicy(io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy value) {
      if (internalRedirectPolicyBuilder_ == null) {
        if (((bitField0_ & 0x20000000) != 0) &&
          internalRedirectPolicy_ != null &&
          internalRedirectPolicy_ != io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy.getDefaultInstance()) {
          getInternalRedirectPolicyBuilder().mergeFrom(value);
        } else {
          internalRedirectPolicy_ = value;
        }
      } else {
        internalRedirectPolicyBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x20000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If present, Envoy will try to follow an upstream redirect response instead of proxying the
     * response back to the downstream. An upstream redirect response is defined
     * by :ref:`redirect_response_codes
     * &lt;envoy_v3_api_field_config.route.v3.InternalRedirectPolicy.redirect_response_codes&gt;`.
     * </pre>
     *
     * <code>.envoy.config.route.v3.InternalRedirectPolicy internal_redirect_policy = 34;</code>
     */
    public Builder clearInternalRedirectPolicy() {
      bitField0_ = (bitField0_ & ~0x20000000);
      internalRedirectPolicy_ = null;
      if (internalRedirectPolicyBuilder_ != null) {
        internalRedirectPolicyBuilder_.dispose();
        internalRedirectPolicyBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If present, Envoy will try to follow an upstream redirect response instead of proxying the
     * response back to the downstream. An upstream redirect response is defined
     * by :ref:`redirect_response_codes
     * &lt;envoy_v3_api_field_config.route.v3.InternalRedirectPolicy.redirect_response_codes&gt;`.
     * </pre>
     *
     * <code>.envoy.config.route.v3.InternalRedirectPolicy internal_redirect_policy = 34;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy.Builder getInternalRedirectPolicyBuilder() {
      bitField0_ |= 0x20000000;
      onChanged();
      return getInternalRedirectPolicyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If present, Envoy will try to follow an upstream redirect response instead of proxying the
     * response back to the downstream. An upstream redirect response is defined
     * by :ref:`redirect_response_codes
     * &lt;envoy_v3_api_field_config.route.v3.InternalRedirectPolicy.redirect_response_codes&gt;`.
     * </pre>
     *
     * <code>.envoy.config.route.v3.InternalRedirectPolicy internal_redirect_policy = 34;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicyOrBuilder getInternalRedirectPolicyOrBuilder() {
      if (internalRedirectPolicyBuilder_ != null) {
        return internalRedirectPolicyBuilder_.getMessageOrBuilder();
      } else {
        return internalRedirectPolicy_ == null ?
            io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy.getDefaultInstance() : internalRedirectPolicy_;
      }
    }
    /**
     * <pre>
     * If present, Envoy will try to follow an upstream redirect response instead of proxying the
     * response back to the downstream. An upstream redirect response is defined
     * by :ref:`redirect_response_codes
     * &lt;envoy_v3_api_field_config.route.v3.InternalRedirectPolicy.redirect_response_codes&gt;`.
     * </pre>
     *
     * <code>.envoy.config.route.v3.InternalRedirectPolicy internal_redirect_policy = 34;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy, io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy.Builder, io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicyOrBuilder> 
        getInternalRedirectPolicyFieldBuilder() {
      if (internalRedirectPolicyBuilder_ == null) {
        internalRedirectPolicyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy, io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicy.Builder, io.envoyproxy.envoy.config.route.v3.InternalRedirectPolicyOrBuilder>(
                getInternalRedirectPolicy(),
                getParentForChildren(),
                isClean());
        internalRedirectPolicy_ = null;
      }
      return internalRedirectPolicyBuilder_;
    }

    private int internalRedirectAction_ = 0;
    /**
     * <code>.envoy.config.route.v3.RouteAction.InternalRedirectAction internal_redirect_action = 26 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.route.v3.RouteAction.internal_redirect_action is deprecated.
     *     See envoy/config/route/v3/route_components.proto;l=1331
     * @return The enum numeric value on the wire for internalRedirectAction.
     */
    @java.lang.Override @java.lang.Deprecated public int getInternalRedirectActionValue() {
      return internalRedirectAction_;
    }
    /**
     * <code>.envoy.config.route.v3.RouteAction.InternalRedirectAction internal_redirect_action = 26 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.route.v3.RouteAction.internal_redirect_action is deprecated.
     *     See envoy/config/route/v3/route_components.proto;l=1331
     * @param value The enum numeric value on the wire for internalRedirectAction to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setInternalRedirectActionValue(int value) {
      internalRedirectAction_ = value;
      bitField0_ |= 0x40000000;
      onChanged();
      return this;
    }
    /**
     * <code>.envoy.config.route.v3.RouteAction.InternalRedirectAction internal_redirect_action = 26 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.route.v3.RouteAction.internal_redirect_action is deprecated.
     *     See envoy/config/route/v3/route_components.proto;l=1331
     * @return The internalRedirectAction.
     */
    @java.lang.Override
    @java.lang.Deprecated public io.envoyproxy.envoy.config.route.v3.RouteAction.InternalRedirectAction getInternalRedirectAction() {
      io.envoyproxy.envoy.config.route.v3.RouteAction.InternalRedirectAction result = io.envoyproxy.envoy.config.route.v3.RouteAction.InternalRedirectAction.forNumber(internalRedirectAction_);
      return result == null ? io.envoyproxy.envoy.config.route.v3.RouteAction.InternalRedirectAction.UNRECOGNIZED : result;
    }
    /**
     * <code>.envoy.config.route.v3.RouteAction.InternalRedirectAction internal_redirect_action = 26 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.route.v3.RouteAction.internal_redirect_action is deprecated.
     *     See envoy/config/route/v3/route_components.proto;l=1331
     * @param value The internalRedirectAction to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setInternalRedirectAction(io.envoyproxy.envoy.config.route.v3.RouteAction.InternalRedirectAction value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x40000000;
      internalRedirectAction_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.envoy.config.route.v3.RouteAction.InternalRedirectAction internal_redirect_action = 26 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.route.v3.RouteAction.internal_redirect_action is deprecated.
     *     See envoy/config/route/v3/route_components.proto;l=1331
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearInternalRedirectAction() {
      bitField0_ = (bitField0_ & ~0x40000000);
      internalRedirectAction_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.UInt32Value maxInternalRedirects_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> maxInternalRedirectsBuilder_;
    /**
     * <pre>
     * An internal redirect is handled, iff the number of previous internal redirects that a
     * downstream request has encountered is lower than this value, and
     * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
     * is set to :ref:`HANDLE_INTERNAL_REDIRECT
     * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.HANDLE_INTERNAL_REDIRECT&gt;`
     * In the case where a downstream request is bounced among multiple routes by internal redirect,
     * the first route that hits this threshold, or has
     * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
     * set to
     * :ref:`PASS_THROUGH_INTERNAL_REDIRECT
     * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.PASS_THROUGH_INTERNAL_REDIRECT&gt;`
     * will pass the redirect back to downstream.
     * If not specified, at most one redirect will be followed.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_internal_redirects = 31 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.route.v3.RouteAction.max_internal_redirects is deprecated.
     *     See envoy/config/route/v3/route_components.proto;l=1348
     * @return Whether the maxInternalRedirects field is set.
     */
    @java.lang.Deprecated public boolean hasMaxInternalRedirects() {
      return ((bitField0_ & 0x80000000) != 0);
    }
    /**
     * <pre>
     * An internal redirect is handled, iff the number of previous internal redirects that a
     * downstream request has encountered is lower than this value, and
     * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
     * is set to :ref:`HANDLE_INTERNAL_REDIRECT
     * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.HANDLE_INTERNAL_REDIRECT&gt;`
     * In the case where a downstream request is bounced among multiple routes by internal redirect,
     * the first route that hits this threshold, or has
     * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
     * set to
     * :ref:`PASS_THROUGH_INTERNAL_REDIRECT
     * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.PASS_THROUGH_INTERNAL_REDIRECT&gt;`
     * will pass the redirect back to downstream.
     * If not specified, at most one redirect will be followed.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_internal_redirects = 31 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.route.v3.RouteAction.max_internal_redirects is deprecated.
     *     See envoy/config/route/v3/route_components.proto;l=1348
     * @return The maxInternalRedirects.
     */
    @java.lang.Deprecated public com.google.protobuf.UInt32Value getMaxInternalRedirects() {
      if (maxInternalRedirectsBuilder_ == null) {
        return maxInternalRedirects_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : maxInternalRedirects_;
      } else {
        return maxInternalRedirectsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * An internal redirect is handled, iff the number of previous internal redirects that a
     * downstream request has encountered is lower than this value, and
     * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
     * is set to :ref:`HANDLE_INTERNAL_REDIRECT
     * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.HANDLE_INTERNAL_REDIRECT&gt;`
     * In the case where a downstream request is bounced among multiple routes by internal redirect,
     * the first route that hits this threshold, or has
     * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
     * set to
     * :ref:`PASS_THROUGH_INTERNAL_REDIRECT
     * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.PASS_THROUGH_INTERNAL_REDIRECT&gt;`
     * will pass the redirect back to downstream.
     * If not specified, at most one redirect will be followed.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_internal_redirects = 31 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder setMaxInternalRedirects(com.google.protobuf.UInt32Value value) {
      if (maxInternalRedirectsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxInternalRedirects_ = value;
      } else {
        maxInternalRedirectsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x80000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An internal redirect is handled, iff the number of previous internal redirects that a
     * downstream request has encountered is lower than this value, and
     * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
     * is set to :ref:`HANDLE_INTERNAL_REDIRECT
     * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.HANDLE_INTERNAL_REDIRECT&gt;`
     * In the case where a downstream request is bounced among multiple routes by internal redirect,
     * the first route that hits this threshold, or has
     * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
     * set to
     * :ref:`PASS_THROUGH_INTERNAL_REDIRECT
     * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.PASS_THROUGH_INTERNAL_REDIRECT&gt;`
     * will pass the redirect back to downstream.
     * If not specified, at most one redirect will be followed.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_internal_redirects = 31 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder setMaxInternalRedirects(
        com.google.protobuf.UInt32Value.Builder builderForValue) {
      if (maxInternalRedirectsBuilder_ == null) {
        maxInternalRedirects_ = builderForValue.build();
      } else {
        maxInternalRedirectsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x80000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An internal redirect is handled, iff the number of previous internal redirects that a
     * downstream request has encountered is lower than this value, and
     * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
     * is set to :ref:`HANDLE_INTERNAL_REDIRECT
     * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.HANDLE_INTERNAL_REDIRECT&gt;`
     * In the case where a downstream request is bounced among multiple routes by internal redirect,
     * the first route that hits this threshold, or has
     * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
     * set to
     * :ref:`PASS_THROUGH_INTERNAL_REDIRECT
     * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.PASS_THROUGH_INTERNAL_REDIRECT&gt;`
     * will pass the redirect back to downstream.
     * If not specified, at most one redirect will be followed.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_internal_redirects = 31 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder mergeMaxInternalRedirects(com.google.protobuf.UInt32Value value) {
      if (maxInternalRedirectsBuilder_ == null) {
        if (((bitField0_ & 0x80000000) != 0) &&
          maxInternalRedirects_ != null &&
          maxInternalRedirects_ != com.google.protobuf.UInt32Value.getDefaultInstance()) {
          getMaxInternalRedirectsBuilder().mergeFrom(value);
        } else {
          maxInternalRedirects_ = value;
        }
      } else {
        maxInternalRedirectsBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x80000000;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An internal redirect is handled, iff the number of previous internal redirects that a
     * downstream request has encountered is lower than this value, and
     * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
     * is set to :ref:`HANDLE_INTERNAL_REDIRECT
     * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.HANDLE_INTERNAL_REDIRECT&gt;`
     * In the case where a downstream request is bounced among multiple routes by internal redirect,
     * the first route that hits this threshold, or has
     * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
     * set to
     * :ref:`PASS_THROUGH_INTERNAL_REDIRECT
     * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.PASS_THROUGH_INTERNAL_REDIRECT&gt;`
     * will pass the redirect back to downstream.
     * If not specified, at most one redirect will be followed.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_internal_redirects = 31 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public Builder clearMaxInternalRedirects() {
      bitField0_ = (bitField0_ & ~0x80000000);
      maxInternalRedirects_ = null;
      if (maxInternalRedirectsBuilder_ != null) {
        maxInternalRedirectsBuilder_.dispose();
        maxInternalRedirectsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * An internal redirect is handled, iff the number of previous internal redirects that a
     * downstream request has encountered is lower than this value, and
     * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
     * is set to :ref:`HANDLE_INTERNAL_REDIRECT
     * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.HANDLE_INTERNAL_REDIRECT&gt;`
     * In the case where a downstream request is bounced among multiple routes by internal redirect,
     * the first route that hits this threshold, or has
     * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
     * set to
     * :ref:`PASS_THROUGH_INTERNAL_REDIRECT
     * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.PASS_THROUGH_INTERNAL_REDIRECT&gt;`
     * will pass the redirect back to downstream.
     * If not specified, at most one redirect will be followed.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_internal_redirects = 31 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.UInt32Value.Builder getMaxInternalRedirectsBuilder() {
      bitField0_ |= 0x80000000;
      onChanged();
      return getMaxInternalRedirectsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * An internal redirect is handled, iff the number of previous internal redirects that a
     * downstream request has encountered is lower than this value, and
     * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
     * is set to :ref:`HANDLE_INTERNAL_REDIRECT
     * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.HANDLE_INTERNAL_REDIRECT&gt;`
     * In the case where a downstream request is bounced among multiple routes by internal redirect,
     * the first route that hits this threshold, or has
     * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
     * set to
     * :ref:`PASS_THROUGH_INTERNAL_REDIRECT
     * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.PASS_THROUGH_INTERNAL_REDIRECT&gt;`
     * will pass the redirect back to downstream.
     * If not specified, at most one redirect will be followed.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_internal_redirects = 31 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    @java.lang.Deprecated public com.google.protobuf.UInt32ValueOrBuilder getMaxInternalRedirectsOrBuilder() {
      if (maxInternalRedirectsBuilder_ != null) {
        return maxInternalRedirectsBuilder_.getMessageOrBuilder();
      } else {
        return maxInternalRedirects_ == null ?
            com.google.protobuf.UInt32Value.getDefaultInstance() : maxInternalRedirects_;
      }
    }
    /**
     * <pre>
     * An internal redirect is handled, iff the number of previous internal redirects that a
     * downstream request has encountered is lower than this value, and
     * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
     * is set to :ref:`HANDLE_INTERNAL_REDIRECT
     * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.HANDLE_INTERNAL_REDIRECT&gt;`
     * In the case where a downstream request is bounced among multiple routes by internal redirect,
     * the first route that hits this threshold, or has
     * :ref:`internal_redirect_action &lt;envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action&gt;`
     * set to
     * :ref:`PASS_THROUGH_INTERNAL_REDIRECT
     * &lt;envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.PASS_THROUGH_INTERNAL_REDIRECT&gt;`
     * will pass the redirect back to downstream.
     * If not specified, at most one redirect will be followed.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value max_internal_redirects = 31 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
        getMaxInternalRedirectsFieldBuilder() {
      if (maxInternalRedirectsBuilder_ == null) {
        maxInternalRedirectsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                getMaxInternalRedirects(),
                getParentForChildren(),
                isClean());
        maxInternalRedirects_ = null;
      }
      return maxInternalRedirectsBuilder_;
    }

    private io.envoyproxy.envoy.config.route.v3.HedgePolicy hedgePolicy_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.HedgePolicy, io.envoyproxy.envoy.config.route.v3.HedgePolicy.Builder, io.envoyproxy.envoy.config.route.v3.HedgePolicyOrBuilder> hedgePolicyBuilder_;
    /**
     * <pre>
     * Indicates that the route has a hedge policy. Note that if this is set,
     * it'll take precedence over the virtual host level hedge policy entirely
     * (e.g.: policies are not merged, most internal one becomes the enforced policy).
     * </pre>
     *
     * <code>.envoy.config.route.v3.HedgePolicy hedge_policy = 27;</code>
     * @return Whether the hedgePolicy field is set.
     */
    public boolean hasHedgePolicy() {
      return ((bitField1_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Indicates that the route has a hedge policy. Note that if this is set,
     * it'll take precedence over the virtual host level hedge policy entirely
     * (e.g.: policies are not merged, most internal one becomes the enforced policy).
     * </pre>
     *
     * <code>.envoy.config.route.v3.HedgePolicy hedge_policy = 27;</code>
     * @return The hedgePolicy.
     */
    public io.envoyproxy.envoy.config.route.v3.HedgePolicy getHedgePolicy() {
      if (hedgePolicyBuilder_ == null) {
        return hedgePolicy_ == null ? io.envoyproxy.envoy.config.route.v3.HedgePolicy.getDefaultInstance() : hedgePolicy_;
      } else {
        return hedgePolicyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Indicates that the route has a hedge policy. Note that if this is set,
     * it'll take precedence over the virtual host level hedge policy entirely
     * (e.g.: policies are not merged, most internal one becomes the enforced policy).
     * </pre>
     *
     * <code>.envoy.config.route.v3.HedgePolicy hedge_policy = 27;</code>
     */
    public Builder setHedgePolicy(io.envoyproxy.envoy.config.route.v3.HedgePolicy value) {
      if (hedgePolicyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        hedgePolicy_ = value;
      } else {
        hedgePolicyBuilder_.setMessage(value);
      }
      bitField1_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that the route has a hedge policy. Note that if this is set,
     * it'll take precedence over the virtual host level hedge policy entirely
     * (e.g.: policies are not merged, most internal one becomes the enforced policy).
     * </pre>
     *
     * <code>.envoy.config.route.v3.HedgePolicy hedge_policy = 27;</code>
     */
    public Builder setHedgePolicy(
        io.envoyproxy.envoy.config.route.v3.HedgePolicy.Builder builderForValue) {
      if (hedgePolicyBuilder_ == null) {
        hedgePolicy_ = builderForValue.build();
      } else {
        hedgePolicyBuilder_.setMessage(builderForValue.build());
      }
      bitField1_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that the route has a hedge policy. Note that if this is set,
     * it'll take precedence over the virtual host level hedge policy entirely
     * (e.g.: policies are not merged, most internal one becomes the enforced policy).
     * </pre>
     *
     * <code>.envoy.config.route.v3.HedgePolicy hedge_policy = 27;</code>
     */
    public Builder mergeHedgePolicy(io.envoyproxy.envoy.config.route.v3.HedgePolicy value) {
      if (hedgePolicyBuilder_ == null) {
        if (((bitField1_ & 0x00000001) != 0) &&
          hedgePolicy_ != null &&
          hedgePolicy_ != io.envoyproxy.envoy.config.route.v3.HedgePolicy.getDefaultInstance()) {
          getHedgePolicyBuilder().mergeFrom(value);
        } else {
          hedgePolicy_ = value;
        }
      } else {
        hedgePolicyBuilder_.mergeFrom(value);
      }
      bitField1_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that the route has a hedge policy. Note that if this is set,
     * it'll take precedence over the virtual host level hedge policy entirely
     * (e.g.: policies are not merged, most internal one becomes the enforced policy).
     * </pre>
     *
     * <code>.envoy.config.route.v3.HedgePolicy hedge_policy = 27;</code>
     */
    public Builder clearHedgePolicy() {
      bitField1_ = (bitField1_ & ~0x00000001);
      hedgePolicy_ = null;
      if (hedgePolicyBuilder_ != null) {
        hedgePolicyBuilder_.dispose();
        hedgePolicyBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates that the route has a hedge policy. Note that if this is set,
     * it'll take precedence over the virtual host level hedge policy entirely
     * (e.g.: policies are not merged, most internal one becomes the enforced policy).
     * </pre>
     *
     * <code>.envoy.config.route.v3.HedgePolicy hedge_policy = 27;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.HedgePolicy.Builder getHedgePolicyBuilder() {
      bitField1_ |= 0x00000001;
      onChanged();
      return getHedgePolicyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Indicates that the route has a hedge policy. Note that if this is set,
     * it'll take precedence over the virtual host level hedge policy entirely
     * (e.g.: policies are not merged, most internal one becomes the enforced policy).
     * </pre>
     *
     * <code>.envoy.config.route.v3.HedgePolicy hedge_policy = 27;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.HedgePolicyOrBuilder getHedgePolicyOrBuilder() {
      if (hedgePolicyBuilder_ != null) {
        return hedgePolicyBuilder_.getMessageOrBuilder();
      } else {
        return hedgePolicy_ == null ?
            io.envoyproxy.envoy.config.route.v3.HedgePolicy.getDefaultInstance() : hedgePolicy_;
      }
    }
    /**
     * <pre>
     * Indicates that the route has a hedge policy. Note that if this is set,
     * it'll take precedence over the virtual host level hedge policy entirely
     * (e.g.: policies are not merged, most internal one becomes the enforced policy).
     * </pre>
     *
     * <code>.envoy.config.route.v3.HedgePolicy hedge_policy = 27;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.HedgePolicy, io.envoyproxy.envoy.config.route.v3.HedgePolicy.Builder, io.envoyproxy.envoy.config.route.v3.HedgePolicyOrBuilder> 
        getHedgePolicyFieldBuilder() {
      if (hedgePolicyBuilder_ == null) {
        hedgePolicyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.route.v3.HedgePolicy, io.envoyproxy.envoy.config.route.v3.HedgePolicy.Builder, io.envoyproxy.envoy.config.route.v3.HedgePolicyOrBuilder>(
                getHedgePolicy(),
                getParentForChildren(),
                isClean());
        hedgePolicy_ = null;
      }
      return hedgePolicyBuilder_;
    }

    private io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration maxStreamDuration_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration, io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDurationOrBuilder> maxStreamDurationBuilder_;
    /**
     * <pre>
     * Specifies the maximum stream duration for this route.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.MaxStreamDuration max_stream_duration = 36;</code>
     * @return Whether the maxStreamDuration field is set.
     */
    public boolean hasMaxStreamDuration() {
      return ((bitField1_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Specifies the maximum stream duration for this route.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.MaxStreamDuration max_stream_duration = 36;</code>
     * @return The maxStreamDuration.
     */
    public io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration getMaxStreamDuration() {
      if (maxStreamDurationBuilder_ == null) {
        return maxStreamDuration_ == null ? io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration.getDefaultInstance() : maxStreamDuration_;
      } else {
        return maxStreamDurationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Specifies the maximum stream duration for this route.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.MaxStreamDuration max_stream_duration = 36;</code>
     */
    public Builder setMaxStreamDuration(io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration value) {
      if (maxStreamDurationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxStreamDuration_ = value;
      } else {
        maxStreamDurationBuilder_.setMessage(value);
      }
      bitField1_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the maximum stream duration for this route.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.MaxStreamDuration max_stream_duration = 36;</code>
     */
    public Builder setMaxStreamDuration(
        io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration.Builder builderForValue) {
      if (maxStreamDurationBuilder_ == null) {
        maxStreamDuration_ = builderForValue.build();
      } else {
        maxStreamDurationBuilder_.setMessage(builderForValue.build());
      }
      bitField1_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the maximum stream duration for this route.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.MaxStreamDuration max_stream_duration = 36;</code>
     */
    public Builder mergeMaxStreamDuration(io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration value) {
      if (maxStreamDurationBuilder_ == null) {
        if (((bitField1_ & 0x00000002) != 0) &&
          maxStreamDuration_ != null &&
          maxStreamDuration_ != io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration.getDefaultInstance()) {
          getMaxStreamDurationBuilder().mergeFrom(value);
        } else {
          maxStreamDuration_ = value;
        }
      } else {
        maxStreamDurationBuilder_.mergeFrom(value);
      }
      bitField1_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the maximum stream duration for this route.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.MaxStreamDuration max_stream_duration = 36;</code>
     */
    public Builder clearMaxStreamDuration() {
      bitField1_ = (bitField1_ & ~0x00000002);
      maxStreamDuration_ = null;
      if (maxStreamDurationBuilder_ != null) {
        maxStreamDurationBuilder_.dispose();
        maxStreamDurationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Specifies the maximum stream duration for this route.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.MaxStreamDuration max_stream_duration = 36;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration.Builder getMaxStreamDurationBuilder() {
      bitField1_ |= 0x00000002;
      onChanged();
      return getMaxStreamDurationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Specifies the maximum stream duration for this route.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.MaxStreamDuration max_stream_duration = 36;</code>
     */
    public io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDurationOrBuilder getMaxStreamDurationOrBuilder() {
      if (maxStreamDurationBuilder_ != null) {
        return maxStreamDurationBuilder_.getMessageOrBuilder();
      } else {
        return maxStreamDuration_ == null ?
            io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration.getDefaultInstance() : maxStreamDuration_;
      }
    }
    /**
     * <pre>
     * Specifies the maximum stream duration for this route.
     * </pre>
     *
     * <code>.envoy.config.route.v3.RouteAction.MaxStreamDuration max_stream_duration = 36;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration, io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDurationOrBuilder> 
        getMaxStreamDurationFieldBuilder() {
      if (maxStreamDurationBuilder_ == null) {
        maxStreamDurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration, io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDuration.Builder, io.envoyproxy.envoy.config.route.v3.RouteAction.MaxStreamDurationOrBuilder>(
                getMaxStreamDuration(),
                getParentForChildren(),
                isClean());
        maxStreamDuration_ = null;
      }
      return maxStreamDurationBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.route.v3.RouteAction)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.route.v3.RouteAction)
  private static final io.envoyproxy.envoy.config.route.v3.RouteAction DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.route.v3.RouteAction();
  }

  public static io.envoyproxy.envoy.config.route.v3.RouteAction getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RouteAction>
      PARSER = new com.google.protobuf.AbstractParser<RouteAction>() {
    @java.lang.Override
    public RouteAction parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<RouteAction> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RouteAction> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.route.v3.RouteAction getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

