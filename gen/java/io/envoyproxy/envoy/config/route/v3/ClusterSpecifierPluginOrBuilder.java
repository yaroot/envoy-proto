// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/route/v3/route_components.proto

package io.envoyproxy.envoy.config.route.v3;

public interface ClusterSpecifierPluginOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.route.v3.ClusterSpecifierPlugin)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The name of the plugin and its opaque configuration.
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig extension = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the extension field is set.
   */
  boolean hasExtension();
  /**
   * <pre>
   * The name of the plugin and its opaque configuration.
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig extension = 1 [(.validate.rules) = { ... }</code>
   * @return The extension.
   */
  io.envoyproxy.envoy.config.core.v3.TypedExtensionConfig getExtension();
  /**
   * <pre>
   * The name of the plugin and its opaque configuration.
   * </pre>
   *
   * <code>.envoy.config.core.v3.TypedExtensionConfig extension = 1 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.config.core.v3.TypedExtensionConfigOrBuilder getExtensionOrBuilder();

  /**
   * <pre>
   * If is_optional is not set or is set to false and the plugin defined by this message is not a
   * supported type, the containing resource is NACKed. If is_optional is set to true, the resource
   * would not be NACKed for this reason. In this case, routes referencing this plugin's name would
   * not be treated as an illegal configuration, but would result in a failure if the route is
   * selected.
   * </pre>
   *
   * <code>bool is_optional = 2;</code>
   * @return The isOptional.
   */
  boolean getIsOptional();
}
