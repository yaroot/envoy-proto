// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/bootstrap/v3/bootstrap.proto

package io.envoyproxy.envoy.config.bootstrap.v3;

/**
 * <pre>
 * Administration interface :ref:`operations documentation
 * &lt;operations_admin_interface&gt;`.
 * [#next-free-field: 7]
 * </pre>
 *
 * Protobuf type {@code envoy.config.bootstrap.v3.Admin}
 */
public final class Admin extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.config.bootstrap.v3.Admin)
    AdminOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Admin.newBuilder() to construct.
  private Admin(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Admin() {
    accessLog_ = java.util.Collections.emptyList();
    accessLogPath_ = "";
    profilePath_ = "";
    socketOptions_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Admin();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Admin(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            accessLogPath_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            profilePath_ = s;
            break;
          }
          case 26: {
            io.envoyproxy.envoy.config.core.v3.Address.Builder subBuilder = null;
            if (address_ != null) {
              subBuilder = address_.toBuilder();
            }
            address_ = input.readMessage(io.envoyproxy.envoy.config.core.v3.Address.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(address_);
              address_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              socketOptions_ = new java.util.ArrayList<io.envoyproxy.envoy.config.core.v3.SocketOption>();
              mutable_bitField0_ |= 0x00000002;
            }
            socketOptions_.add(
                input.readMessage(io.envoyproxy.envoy.config.core.v3.SocketOption.parser(), extensionRegistry));
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              accessLog_ = new java.util.ArrayList<io.envoyproxy.envoy.config.accesslog.v3.AccessLog>();
              mutable_bitField0_ |= 0x00000001;
            }
            accessLog_.add(
                input.readMessage(io.envoyproxy.envoy.config.accesslog.v3.AccessLog.parser(), extensionRegistry));
            break;
          }
          case 48: {

            ignoreGlobalConnLimit_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        socketOptions_ = java.util.Collections.unmodifiableList(socketOptions_);
      }
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        accessLog_ = java.util.Collections.unmodifiableList(accessLog_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.config.bootstrap.v3.BootstrapProto.internal_static_envoy_config_bootstrap_v3_Admin_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.config.bootstrap.v3.BootstrapProto.internal_static_envoy_config_bootstrap_v3_Admin_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.config.bootstrap.v3.Admin.class, io.envoyproxy.envoy.config.bootstrap.v3.Admin.Builder.class);
  }

  public static final int ACCESS_LOG_FIELD_NUMBER = 5;
  private java.util.List<io.envoyproxy.envoy.config.accesslog.v3.AccessLog> accessLog_;
  /**
   * <pre>
   * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
   * emitted by the administration server.
   * </pre>
   *
   * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.accesslog.v3.AccessLog> getAccessLogList() {
    return accessLog_;
  }
  /**
   * <pre>
   * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
   * emitted by the administration server.
   * </pre>
   *
   * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.accesslog.v3.AccessLogOrBuilder> 
      getAccessLogOrBuilderList() {
    return accessLog_;
  }
  /**
   * <pre>
   * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
   * emitted by the administration server.
   * </pre>
   *
   * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
   */
  @java.lang.Override
  public int getAccessLogCount() {
    return accessLog_.size();
  }
  /**
   * <pre>
   * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
   * emitted by the administration server.
   * </pre>
   *
   * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.accesslog.v3.AccessLog getAccessLog(int index) {
    return accessLog_.get(index);
  }
  /**
   * <pre>
   * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
   * emitted by the administration server.
   * </pre>
   *
   * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.accesslog.v3.AccessLogOrBuilder getAccessLogOrBuilder(
      int index) {
    return accessLog_.get(index);
  }

  public static final int ACCESS_LOG_PATH_FIELD_NUMBER = 1;
  private volatile java.lang.Object accessLogPath_;
  /**
   * <pre>
   * The path to write the access log for the administration server. If no
   * access log is desired specify ‘/dev/null’. This is only required if
   * :ref:`address &lt;envoy_v3_api_field_config.bootstrap.v3.Admin.address&gt;` is set.
   * Deprecated in favor of ``access_log`` which offers more options.
   * </pre>
   *
   * <code>string access_log_path = 1 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.config.bootstrap.v3.Admin.access_log_path is deprecated.
   *     See envoy/config/bootstrap/v3/bootstrap.proto;l=353
   * @return The accessLogPath.
   */
  @java.lang.Override
  @java.lang.Deprecated public java.lang.String getAccessLogPath() {
    java.lang.Object ref = accessLogPath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      accessLogPath_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The path to write the access log for the administration server. If no
   * access log is desired specify ‘/dev/null’. This is only required if
   * :ref:`address &lt;envoy_v3_api_field_config.bootstrap.v3.Admin.address&gt;` is set.
   * Deprecated in favor of ``access_log`` which offers more options.
   * </pre>
   *
   * <code>string access_log_path = 1 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
   * @deprecated envoy.config.bootstrap.v3.Admin.access_log_path is deprecated.
   *     See envoy/config/bootstrap/v3/bootstrap.proto;l=353
   * @return The bytes for accessLogPath.
   */
  @java.lang.Override
  @java.lang.Deprecated public com.google.protobuf.ByteString
      getAccessLogPathBytes() {
    java.lang.Object ref = accessLogPath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      accessLogPath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PROFILE_PATH_FIELD_NUMBER = 2;
  private volatile java.lang.Object profilePath_;
  /**
   * <pre>
   * The cpu profiler output path for the administration server. If no profile
   * path is specified, the default is ‘/var/log/envoy/envoy.prof’.
   * </pre>
   *
   * <code>string profile_path = 2;</code>
   * @return The profilePath.
   */
  @java.lang.Override
  public java.lang.String getProfilePath() {
    java.lang.Object ref = profilePath_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      profilePath_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The cpu profiler output path for the administration server. If no profile
   * path is specified, the default is ‘/var/log/envoy/envoy.prof’.
   * </pre>
   *
   * <code>string profile_path = 2;</code>
   * @return The bytes for profilePath.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getProfilePathBytes() {
    java.lang.Object ref = profilePath_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      profilePath_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ADDRESS_FIELD_NUMBER = 3;
  private io.envoyproxy.envoy.config.core.v3.Address address_;
  /**
   * <pre>
   * The TCP address that the administration server will listen on.
   * If not specified, Envoy will not start an administration server.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Address address = 3;</code>
   * @return Whether the address field is set.
   */
  @java.lang.Override
  public boolean hasAddress() {
    return address_ != null;
  }
  /**
   * <pre>
   * The TCP address that the administration server will listen on.
   * If not specified, Envoy will not start an administration server.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Address address = 3;</code>
   * @return The address.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.Address getAddress() {
    return address_ == null ? io.envoyproxy.envoy.config.core.v3.Address.getDefaultInstance() : address_;
  }
  /**
   * <pre>
   * The TCP address that the administration server will listen on.
   * If not specified, Envoy will not start an administration server.
   * </pre>
   *
   * <code>.envoy.config.core.v3.Address address = 3;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.AddressOrBuilder getAddressOrBuilder() {
    return getAddress();
  }

  public static final int SOCKET_OPTIONS_FIELD_NUMBER = 4;
  private java.util.List<io.envoyproxy.envoy.config.core.v3.SocketOption> socketOptions_;
  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.config.core.v3.SocketOption> getSocketOptionsList() {
    return socketOptions_;
  }
  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.config.core.v3.SocketOptionOrBuilder> 
      getSocketOptionsOrBuilderList() {
    return socketOptions_;
  }
  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
   */
  @java.lang.Override
  public int getSocketOptionsCount() {
    return socketOptions_.size();
  }
  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.SocketOption getSocketOptions(int index) {
    return socketOptions_.get(index);
  }
  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.config.core.v3.SocketOptionOrBuilder getSocketOptionsOrBuilder(
      int index) {
    return socketOptions_.get(index);
  }

  public static final int IGNORE_GLOBAL_CONN_LIMIT_FIELD_NUMBER = 6;
  private boolean ignoreGlobalConnLimit_;
  /**
   * <pre>
   * Indicates whether :ref:`global_downstream_max_connections &lt;config_overload_manager_limiting_connections&gt;`
   * should apply to the admin interface or not.
   * </pre>
   *
   * <code>bool ignore_global_conn_limit = 6;</code>
   * @return The ignoreGlobalConnLimit.
   */
  @java.lang.Override
  public boolean getIgnoreGlobalConnLimit() {
    return ignoreGlobalConnLimit_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(accessLogPath_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, accessLogPath_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(profilePath_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, profilePath_);
    }
    if (address_ != null) {
      output.writeMessage(3, getAddress());
    }
    for (int i = 0; i < socketOptions_.size(); i++) {
      output.writeMessage(4, socketOptions_.get(i));
    }
    for (int i = 0; i < accessLog_.size(); i++) {
      output.writeMessage(5, accessLog_.get(i));
    }
    if (ignoreGlobalConnLimit_ != false) {
      output.writeBool(6, ignoreGlobalConnLimit_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(accessLogPath_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, accessLogPath_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(profilePath_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, profilePath_);
    }
    if (address_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getAddress());
    }
    for (int i = 0; i < socketOptions_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, socketOptions_.get(i));
    }
    for (int i = 0; i < accessLog_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, accessLog_.get(i));
    }
    if (ignoreGlobalConnLimit_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, ignoreGlobalConnLimit_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.config.bootstrap.v3.Admin)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.config.bootstrap.v3.Admin other = (io.envoyproxy.envoy.config.bootstrap.v3.Admin) obj;

    if (!getAccessLogList()
        .equals(other.getAccessLogList())) return false;
    if (!getAccessLogPath()
        .equals(other.getAccessLogPath())) return false;
    if (!getProfilePath()
        .equals(other.getProfilePath())) return false;
    if (hasAddress() != other.hasAddress()) return false;
    if (hasAddress()) {
      if (!getAddress()
          .equals(other.getAddress())) return false;
    }
    if (!getSocketOptionsList()
        .equals(other.getSocketOptionsList())) return false;
    if (getIgnoreGlobalConnLimit()
        != other.getIgnoreGlobalConnLimit()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getAccessLogCount() > 0) {
      hash = (37 * hash) + ACCESS_LOG_FIELD_NUMBER;
      hash = (53 * hash) + getAccessLogList().hashCode();
    }
    hash = (37 * hash) + ACCESS_LOG_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getAccessLogPath().hashCode();
    hash = (37 * hash) + PROFILE_PATH_FIELD_NUMBER;
    hash = (53 * hash) + getProfilePath().hashCode();
    if (hasAddress()) {
      hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getAddress().hashCode();
    }
    if (getSocketOptionsCount() > 0) {
      hash = (37 * hash) + SOCKET_OPTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getSocketOptionsList().hashCode();
    }
    hash = (37 * hash) + IGNORE_GLOBAL_CONN_LIMIT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIgnoreGlobalConnLimit());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.config.bootstrap.v3.Admin parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.bootstrap.v3.Admin parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.bootstrap.v3.Admin parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.bootstrap.v3.Admin parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.bootstrap.v3.Admin parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.config.bootstrap.v3.Admin parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.bootstrap.v3.Admin parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.bootstrap.v3.Admin parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.bootstrap.v3.Admin parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.bootstrap.v3.Admin parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.config.bootstrap.v3.Admin parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.config.bootstrap.v3.Admin parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.config.bootstrap.v3.Admin prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Administration interface :ref:`operations documentation
   * &lt;operations_admin_interface&gt;`.
   * [#next-free-field: 7]
   * </pre>
   *
   * Protobuf type {@code envoy.config.bootstrap.v3.Admin}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.config.bootstrap.v3.Admin)
      io.envoyproxy.envoy.config.bootstrap.v3.AdminOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.config.bootstrap.v3.BootstrapProto.internal_static_envoy_config_bootstrap_v3_Admin_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.config.bootstrap.v3.BootstrapProto.internal_static_envoy_config_bootstrap_v3_Admin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.config.bootstrap.v3.Admin.class, io.envoyproxy.envoy.config.bootstrap.v3.Admin.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.config.bootstrap.v3.Admin.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getAccessLogFieldBuilder();
        getSocketOptionsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (accessLogBuilder_ == null) {
        accessLog_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        accessLogBuilder_.clear();
      }
      accessLogPath_ = "";

      profilePath_ = "";

      if (addressBuilder_ == null) {
        address_ = null;
      } else {
        address_ = null;
        addressBuilder_ = null;
      }
      if (socketOptionsBuilder_ == null) {
        socketOptions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        socketOptionsBuilder_.clear();
      }
      ignoreGlobalConnLimit_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.config.bootstrap.v3.BootstrapProto.internal_static_envoy_config_bootstrap_v3_Admin_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.bootstrap.v3.Admin getDefaultInstanceForType() {
      return io.envoyproxy.envoy.config.bootstrap.v3.Admin.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.bootstrap.v3.Admin build() {
      io.envoyproxy.envoy.config.bootstrap.v3.Admin result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.config.bootstrap.v3.Admin buildPartial() {
      io.envoyproxy.envoy.config.bootstrap.v3.Admin result = new io.envoyproxy.envoy.config.bootstrap.v3.Admin(this);
      int from_bitField0_ = bitField0_;
      if (accessLogBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          accessLog_ = java.util.Collections.unmodifiableList(accessLog_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.accessLog_ = accessLog_;
      } else {
        result.accessLog_ = accessLogBuilder_.build();
      }
      result.accessLogPath_ = accessLogPath_;
      result.profilePath_ = profilePath_;
      if (addressBuilder_ == null) {
        result.address_ = address_;
      } else {
        result.address_ = addressBuilder_.build();
      }
      if (socketOptionsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          socketOptions_ = java.util.Collections.unmodifiableList(socketOptions_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.socketOptions_ = socketOptions_;
      } else {
        result.socketOptions_ = socketOptionsBuilder_.build();
      }
      result.ignoreGlobalConnLimit_ = ignoreGlobalConnLimit_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.config.bootstrap.v3.Admin) {
        return mergeFrom((io.envoyproxy.envoy.config.bootstrap.v3.Admin)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.config.bootstrap.v3.Admin other) {
      if (other == io.envoyproxy.envoy.config.bootstrap.v3.Admin.getDefaultInstance()) return this;
      if (accessLogBuilder_ == null) {
        if (!other.accessLog_.isEmpty()) {
          if (accessLog_.isEmpty()) {
            accessLog_ = other.accessLog_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAccessLogIsMutable();
            accessLog_.addAll(other.accessLog_);
          }
          onChanged();
        }
      } else {
        if (!other.accessLog_.isEmpty()) {
          if (accessLogBuilder_.isEmpty()) {
            accessLogBuilder_.dispose();
            accessLogBuilder_ = null;
            accessLog_ = other.accessLog_;
            bitField0_ = (bitField0_ & ~0x00000001);
            accessLogBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAccessLogFieldBuilder() : null;
          } else {
            accessLogBuilder_.addAllMessages(other.accessLog_);
          }
        }
      }
      if (!other.getAccessLogPath().isEmpty()) {
        accessLogPath_ = other.accessLogPath_;
        onChanged();
      }
      if (!other.getProfilePath().isEmpty()) {
        profilePath_ = other.profilePath_;
        onChanged();
      }
      if (other.hasAddress()) {
        mergeAddress(other.getAddress());
      }
      if (socketOptionsBuilder_ == null) {
        if (!other.socketOptions_.isEmpty()) {
          if (socketOptions_.isEmpty()) {
            socketOptions_ = other.socketOptions_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSocketOptionsIsMutable();
            socketOptions_.addAll(other.socketOptions_);
          }
          onChanged();
        }
      } else {
        if (!other.socketOptions_.isEmpty()) {
          if (socketOptionsBuilder_.isEmpty()) {
            socketOptionsBuilder_.dispose();
            socketOptionsBuilder_ = null;
            socketOptions_ = other.socketOptions_;
            bitField0_ = (bitField0_ & ~0x00000002);
            socketOptionsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSocketOptionsFieldBuilder() : null;
          } else {
            socketOptionsBuilder_.addAllMessages(other.socketOptions_);
          }
        }
      }
      if (other.getIgnoreGlobalConnLimit() != false) {
        setIgnoreGlobalConnLimit(other.getIgnoreGlobalConnLimit());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.envoyproxy.envoy.config.bootstrap.v3.Admin parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.envoyproxy.envoy.config.bootstrap.v3.Admin) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<io.envoyproxy.envoy.config.accesslog.v3.AccessLog> accessLog_ =
      java.util.Collections.emptyList();
    private void ensureAccessLogIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        accessLog_ = new java.util.ArrayList<io.envoyproxy.envoy.config.accesslog.v3.AccessLog>(accessLog_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.accesslog.v3.AccessLog, io.envoyproxy.envoy.config.accesslog.v3.AccessLog.Builder, io.envoyproxy.envoy.config.accesslog.v3.AccessLogOrBuilder> accessLogBuilder_;

    /**
     * <pre>
     * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
     * emitted by the administration server.
     * </pre>
     *
     * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.accesslog.v3.AccessLog> getAccessLogList() {
      if (accessLogBuilder_ == null) {
        return java.util.Collections.unmodifiableList(accessLog_);
      } else {
        return accessLogBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
     * emitted by the administration server.
     * </pre>
     *
     * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
     */
    public int getAccessLogCount() {
      if (accessLogBuilder_ == null) {
        return accessLog_.size();
      } else {
        return accessLogBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
     * emitted by the administration server.
     * </pre>
     *
     * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
     */
    public io.envoyproxy.envoy.config.accesslog.v3.AccessLog getAccessLog(int index) {
      if (accessLogBuilder_ == null) {
        return accessLog_.get(index);
      } else {
        return accessLogBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
     * emitted by the administration server.
     * </pre>
     *
     * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
     */
    public Builder setAccessLog(
        int index, io.envoyproxy.envoy.config.accesslog.v3.AccessLog value) {
      if (accessLogBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAccessLogIsMutable();
        accessLog_.set(index, value);
        onChanged();
      } else {
        accessLogBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
     * emitted by the administration server.
     * </pre>
     *
     * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
     */
    public Builder setAccessLog(
        int index, io.envoyproxy.envoy.config.accesslog.v3.AccessLog.Builder builderForValue) {
      if (accessLogBuilder_ == null) {
        ensureAccessLogIsMutable();
        accessLog_.set(index, builderForValue.build());
        onChanged();
      } else {
        accessLogBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
     * emitted by the administration server.
     * </pre>
     *
     * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
     */
    public Builder addAccessLog(io.envoyproxy.envoy.config.accesslog.v3.AccessLog value) {
      if (accessLogBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAccessLogIsMutable();
        accessLog_.add(value);
        onChanged();
      } else {
        accessLogBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
     * emitted by the administration server.
     * </pre>
     *
     * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
     */
    public Builder addAccessLog(
        int index, io.envoyproxy.envoy.config.accesslog.v3.AccessLog value) {
      if (accessLogBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAccessLogIsMutable();
        accessLog_.add(index, value);
        onChanged();
      } else {
        accessLogBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
     * emitted by the administration server.
     * </pre>
     *
     * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
     */
    public Builder addAccessLog(
        io.envoyproxy.envoy.config.accesslog.v3.AccessLog.Builder builderForValue) {
      if (accessLogBuilder_ == null) {
        ensureAccessLogIsMutable();
        accessLog_.add(builderForValue.build());
        onChanged();
      } else {
        accessLogBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
     * emitted by the administration server.
     * </pre>
     *
     * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
     */
    public Builder addAccessLog(
        int index, io.envoyproxy.envoy.config.accesslog.v3.AccessLog.Builder builderForValue) {
      if (accessLogBuilder_ == null) {
        ensureAccessLogIsMutable();
        accessLog_.add(index, builderForValue.build());
        onChanged();
      } else {
        accessLogBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
     * emitted by the administration server.
     * </pre>
     *
     * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
     */
    public Builder addAllAccessLog(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.accesslog.v3.AccessLog> values) {
      if (accessLogBuilder_ == null) {
        ensureAccessLogIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, accessLog_);
        onChanged();
      } else {
        accessLogBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
     * emitted by the administration server.
     * </pre>
     *
     * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
     */
    public Builder clearAccessLog() {
      if (accessLogBuilder_ == null) {
        accessLog_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        accessLogBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
     * emitted by the administration server.
     * </pre>
     *
     * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
     */
    public Builder removeAccessLog(int index) {
      if (accessLogBuilder_ == null) {
        ensureAccessLogIsMutable();
        accessLog_.remove(index);
        onChanged();
      } else {
        accessLogBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
     * emitted by the administration server.
     * </pre>
     *
     * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
     */
    public io.envoyproxy.envoy.config.accesslog.v3.AccessLog.Builder getAccessLogBuilder(
        int index) {
      return getAccessLogFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
     * emitted by the administration server.
     * </pre>
     *
     * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
     */
    public io.envoyproxy.envoy.config.accesslog.v3.AccessLogOrBuilder getAccessLogOrBuilder(
        int index) {
      if (accessLogBuilder_ == null) {
        return accessLog_.get(index);  } else {
        return accessLogBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
     * emitted by the administration server.
     * </pre>
     *
     * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.accesslog.v3.AccessLogOrBuilder> 
         getAccessLogOrBuilderList() {
      if (accessLogBuilder_ != null) {
        return accessLogBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(accessLog_);
      }
    }
    /**
     * <pre>
     * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
     * emitted by the administration server.
     * </pre>
     *
     * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
     */
    public io.envoyproxy.envoy.config.accesslog.v3.AccessLog.Builder addAccessLogBuilder() {
      return getAccessLogFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.accesslog.v3.AccessLog.getDefaultInstance());
    }
    /**
     * <pre>
     * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
     * emitted by the administration server.
     * </pre>
     *
     * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
     */
    public io.envoyproxy.envoy.config.accesslog.v3.AccessLog.Builder addAccessLogBuilder(
        int index) {
      return getAccessLogFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.accesslog.v3.AccessLog.getDefaultInstance());
    }
    /**
     * <pre>
     * Configuration for :ref:`access logs &lt;arch_overview_access_logs&gt;`
     * emitted by the administration server.
     * </pre>
     *
     * <code>repeated .envoy.config.accesslog.v3.AccessLog access_log = 5;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.accesslog.v3.AccessLog.Builder> 
         getAccessLogBuilderList() {
      return getAccessLogFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.accesslog.v3.AccessLog, io.envoyproxy.envoy.config.accesslog.v3.AccessLog.Builder, io.envoyproxy.envoy.config.accesslog.v3.AccessLogOrBuilder> 
        getAccessLogFieldBuilder() {
      if (accessLogBuilder_ == null) {
        accessLogBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.accesslog.v3.AccessLog, io.envoyproxy.envoy.config.accesslog.v3.AccessLog.Builder, io.envoyproxy.envoy.config.accesslog.v3.AccessLogOrBuilder>(
                accessLog_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        accessLog_ = null;
      }
      return accessLogBuilder_;
    }

    private java.lang.Object accessLogPath_ = "";
    /**
     * <pre>
     * The path to write the access log for the administration server. If no
     * access log is desired specify ‘/dev/null’. This is only required if
     * :ref:`address &lt;envoy_v3_api_field_config.bootstrap.v3.Admin.address&gt;` is set.
     * Deprecated in favor of ``access_log`` which offers more options.
     * </pre>
     *
     * <code>string access_log_path = 1 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.bootstrap.v3.Admin.access_log_path is deprecated.
     *     See envoy/config/bootstrap/v3/bootstrap.proto;l=353
     * @return The accessLogPath.
     */
    @java.lang.Deprecated public java.lang.String getAccessLogPath() {
      java.lang.Object ref = accessLogPath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        accessLogPath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The path to write the access log for the administration server. If no
     * access log is desired specify ‘/dev/null’. This is only required if
     * :ref:`address &lt;envoy_v3_api_field_config.bootstrap.v3.Admin.address&gt;` is set.
     * Deprecated in favor of ``access_log`` which offers more options.
     * </pre>
     *
     * <code>string access_log_path = 1 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.bootstrap.v3.Admin.access_log_path is deprecated.
     *     See envoy/config/bootstrap/v3/bootstrap.proto;l=353
     * @return The bytes for accessLogPath.
     */
    @java.lang.Deprecated public com.google.protobuf.ByteString
        getAccessLogPathBytes() {
      java.lang.Object ref = accessLogPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        accessLogPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The path to write the access log for the administration server. If no
     * access log is desired specify ‘/dev/null’. This is only required if
     * :ref:`address &lt;envoy_v3_api_field_config.bootstrap.v3.Admin.address&gt;` is set.
     * Deprecated in favor of ``access_log`` which offers more options.
     * </pre>
     *
     * <code>string access_log_path = 1 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.bootstrap.v3.Admin.access_log_path is deprecated.
     *     See envoy/config/bootstrap/v3/bootstrap.proto;l=353
     * @param value The accessLogPath to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setAccessLogPath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      accessLogPath_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The path to write the access log for the administration server. If no
     * access log is desired specify ‘/dev/null’. This is only required if
     * :ref:`address &lt;envoy_v3_api_field_config.bootstrap.v3.Admin.address&gt;` is set.
     * Deprecated in favor of ``access_log`` which offers more options.
     * </pre>
     *
     * <code>string access_log_path = 1 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.bootstrap.v3.Admin.access_log_path is deprecated.
     *     See envoy/config/bootstrap/v3/bootstrap.proto;l=353
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearAccessLogPath() {
      
      accessLogPath_ = getDefaultInstance().getAccessLogPath();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The path to write the access log for the administration server. If no
     * access log is desired specify ‘/dev/null’. This is only required if
     * :ref:`address &lt;envoy_v3_api_field_config.bootstrap.v3.Admin.address&gt;` is set.
     * Deprecated in favor of ``access_log`` which offers more options.
     * </pre>
     *
     * <code>string access_log_path = 1 [deprecated = true, (.envoy.annotations.deprecated_at_minor_version) = "3.0"];</code>
     * @deprecated envoy.config.bootstrap.v3.Admin.access_log_path is deprecated.
     *     See envoy/config/bootstrap/v3/bootstrap.proto;l=353
     * @param value The bytes for accessLogPath to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setAccessLogPathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      accessLogPath_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object profilePath_ = "";
    /**
     * <pre>
     * The cpu profiler output path for the administration server. If no profile
     * path is specified, the default is ‘/var/log/envoy/envoy.prof’.
     * </pre>
     *
     * <code>string profile_path = 2;</code>
     * @return The profilePath.
     */
    public java.lang.String getProfilePath() {
      java.lang.Object ref = profilePath_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        profilePath_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The cpu profiler output path for the administration server. If no profile
     * path is specified, the default is ‘/var/log/envoy/envoy.prof’.
     * </pre>
     *
     * <code>string profile_path = 2;</code>
     * @return The bytes for profilePath.
     */
    public com.google.protobuf.ByteString
        getProfilePathBytes() {
      java.lang.Object ref = profilePath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        profilePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The cpu profiler output path for the administration server. If no profile
     * path is specified, the default is ‘/var/log/envoy/envoy.prof’.
     * </pre>
     *
     * <code>string profile_path = 2;</code>
     * @param value The profilePath to set.
     * @return This builder for chaining.
     */
    public Builder setProfilePath(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      profilePath_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The cpu profiler output path for the administration server. If no profile
     * path is specified, the default is ‘/var/log/envoy/envoy.prof’.
     * </pre>
     *
     * <code>string profile_path = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearProfilePath() {
      
      profilePath_ = getDefaultInstance().getProfilePath();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The cpu profiler output path for the administration server. If no profile
     * path is specified, the default is ‘/var/log/envoy/envoy.prof’.
     * </pre>
     *
     * <code>string profile_path = 2;</code>
     * @param value The bytes for profilePath to set.
     * @return This builder for chaining.
     */
    public Builder setProfilePathBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      profilePath_ = value;
      onChanged();
      return this;
    }

    private io.envoyproxy.envoy.config.core.v3.Address address_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.Address, io.envoyproxy.envoy.config.core.v3.Address.Builder, io.envoyproxy.envoy.config.core.v3.AddressOrBuilder> addressBuilder_;
    /**
     * <pre>
     * The TCP address that the administration server will listen on.
     * If not specified, Envoy will not start an administration server.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Address address = 3;</code>
     * @return Whether the address field is set.
     */
    public boolean hasAddress() {
      return addressBuilder_ != null || address_ != null;
    }
    /**
     * <pre>
     * The TCP address that the administration server will listen on.
     * If not specified, Envoy will not start an administration server.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Address address = 3;</code>
     * @return The address.
     */
    public io.envoyproxy.envoy.config.core.v3.Address getAddress() {
      if (addressBuilder_ == null) {
        return address_ == null ? io.envoyproxy.envoy.config.core.v3.Address.getDefaultInstance() : address_;
      } else {
        return addressBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The TCP address that the administration server will listen on.
     * If not specified, Envoy will not start an administration server.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Address address = 3;</code>
     */
    public Builder setAddress(io.envoyproxy.envoy.config.core.v3.Address value) {
      if (addressBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        address_ = value;
        onChanged();
      } else {
        addressBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The TCP address that the administration server will listen on.
     * If not specified, Envoy will not start an administration server.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Address address = 3;</code>
     */
    public Builder setAddress(
        io.envoyproxy.envoy.config.core.v3.Address.Builder builderForValue) {
      if (addressBuilder_ == null) {
        address_ = builderForValue.build();
        onChanged();
      } else {
        addressBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The TCP address that the administration server will listen on.
     * If not specified, Envoy will not start an administration server.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Address address = 3;</code>
     */
    public Builder mergeAddress(io.envoyproxy.envoy.config.core.v3.Address value) {
      if (addressBuilder_ == null) {
        if (address_ != null) {
          address_ =
            io.envoyproxy.envoy.config.core.v3.Address.newBuilder(address_).mergeFrom(value).buildPartial();
        } else {
          address_ = value;
        }
        onChanged();
      } else {
        addressBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The TCP address that the administration server will listen on.
     * If not specified, Envoy will not start an administration server.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Address address = 3;</code>
     */
    public Builder clearAddress() {
      if (addressBuilder_ == null) {
        address_ = null;
        onChanged();
      } else {
        address_ = null;
        addressBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The TCP address that the administration server will listen on.
     * If not specified, Envoy will not start an administration server.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Address address = 3;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.Address.Builder getAddressBuilder() {
      
      onChanged();
      return getAddressFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The TCP address that the administration server will listen on.
     * If not specified, Envoy will not start an administration server.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Address address = 3;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.AddressOrBuilder getAddressOrBuilder() {
      if (addressBuilder_ != null) {
        return addressBuilder_.getMessageOrBuilder();
      } else {
        return address_ == null ?
            io.envoyproxy.envoy.config.core.v3.Address.getDefaultInstance() : address_;
      }
    }
    /**
     * <pre>
     * The TCP address that the administration server will listen on.
     * If not specified, Envoy will not start an administration server.
     * </pre>
     *
     * <code>.envoy.config.core.v3.Address address = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.Address, io.envoyproxy.envoy.config.core.v3.Address.Builder, io.envoyproxy.envoy.config.core.v3.AddressOrBuilder> 
        getAddressFieldBuilder() {
      if (addressBuilder_ == null) {
        addressBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.Address, io.envoyproxy.envoy.config.core.v3.Address.Builder, io.envoyproxy.envoy.config.core.v3.AddressOrBuilder>(
                getAddress(),
                getParentForChildren(),
                isClean());
        address_ = null;
      }
      return addressBuilder_;
    }

    private java.util.List<io.envoyproxy.envoy.config.core.v3.SocketOption> socketOptions_ =
      java.util.Collections.emptyList();
    private void ensureSocketOptionsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        socketOptions_ = new java.util.ArrayList<io.envoyproxy.envoy.config.core.v3.SocketOption>(socketOptions_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.SocketOption, io.envoyproxy.envoy.config.core.v3.SocketOption.Builder, io.envoyproxy.envoy.config.core.v3.SocketOptionOrBuilder> socketOptionsBuilder_;

    /**
     * <pre>
     * Additional socket options that may not be present in Envoy source code or
     * precompiled binaries.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.core.v3.SocketOption> getSocketOptionsList() {
      if (socketOptionsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(socketOptions_);
      } else {
        return socketOptionsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Additional socket options that may not be present in Envoy source code or
     * precompiled binaries.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
     */
    public int getSocketOptionsCount() {
      if (socketOptionsBuilder_ == null) {
        return socketOptions_.size();
      } else {
        return socketOptionsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Additional socket options that may not be present in Envoy source code or
     * precompiled binaries.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.SocketOption getSocketOptions(int index) {
      if (socketOptionsBuilder_ == null) {
        return socketOptions_.get(index);
      } else {
        return socketOptionsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Additional socket options that may not be present in Envoy source code or
     * precompiled binaries.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
     */
    public Builder setSocketOptions(
        int index, io.envoyproxy.envoy.config.core.v3.SocketOption value) {
      if (socketOptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSocketOptionsIsMutable();
        socketOptions_.set(index, value);
        onChanged();
      } else {
        socketOptionsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Additional socket options that may not be present in Envoy source code or
     * precompiled binaries.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
     */
    public Builder setSocketOptions(
        int index, io.envoyproxy.envoy.config.core.v3.SocketOption.Builder builderForValue) {
      if (socketOptionsBuilder_ == null) {
        ensureSocketOptionsIsMutable();
        socketOptions_.set(index, builderForValue.build());
        onChanged();
      } else {
        socketOptionsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Additional socket options that may not be present in Envoy source code or
     * precompiled binaries.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
     */
    public Builder addSocketOptions(io.envoyproxy.envoy.config.core.v3.SocketOption value) {
      if (socketOptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSocketOptionsIsMutable();
        socketOptions_.add(value);
        onChanged();
      } else {
        socketOptionsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Additional socket options that may not be present in Envoy source code or
     * precompiled binaries.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
     */
    public Builder addSocketOptions(
        int index, io.envoyproxy.envoy.config.core.v3.SocketOption value) {
      if (socketOptionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSocketOptionsIsMutable();
        socketOptions_.add(index, value);
        onChanged();
      } else {
        socketOptionsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Additional socket options that may not be present in Envoy source code or
     * precompiled binaries.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
     */
    public Builder addSocketOptions(
        io.envoyproxy.envoy.config.core.v3.SocketOption.Builder builderForValue) {
      if (socketOptionsBuilder_ == null) {
        ensureSocketOptionsIsMutable();
        socketOptions_.add(builderForValue.build());
        onChanged();
      } else {
        socketOptionsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Additional socket options that may not be present in Envoy source code or
     * precompiled binaries.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
     */
    public Builder addSocketOptions(
        int index, io.envoyproxy.envoy.config.core.v3.SocketOption.Builder builderForValue) {
      if (socketOptionsBuilder_ == null) {
        ensureSocketOptionsIsMutable();
        socketOptions_.add(index, builderForValue.build());
        onChanged();
      } else {
        socketOptionsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Additional socket options that may not be present in Envoy source code or
     * precompiled binaries.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
     */
    public Builder addAllSocketOptions(
        java.lang.Iterable<? extends io.envoyproxy.envoy.config.core.v3.SocketOption> values) {
      if (socketOptionsBuilder_ == null) {
        ensureSocketOptionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, socketOptions_);
        onChanged();
      } else {
        socketOptionsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Additional socket options that may not be present in Envoy source code or
     * precompiled binaries.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
     */
    public Builder clearSocketOptions() {
      if (socketOptionsBuilder_ == null) {
        socketOptions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        socketOptionsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Additional socket options that may not be present in Envoy source code or
     * precompiled binaries.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
     */
    public Builder removeSocketOptions(int index) {
      if (socketOptionsBuilder_ == null) {
        ensureSocketOptionsIsMutable();
        socketOptions_.remove(index);
        onChanged();
      } else {
        socketOptionsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Additional socket options that may not be present in Envoy source code or
     * precompiled binaries.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.SocketOption.Builder getSocketOptionsBuilder(
        int index) {
      return getSocketOptionsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Additional socket options that may not be present in Envoy source code or
     * precompiled binaries.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.SocketOptionOrBuilder getSocketOptionsOrBuilder(
        int index) {
      if (socketOptionsBuilder_ == null) {
        return socketOptions_.get(index);  } else {
        return socketOptionsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Additional socket options that may not be present in Envoy source code or
     * precompiled binaries.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.config.core.v3.SocketOptionOrBuilder> 
         getSocketOptionsOrBuilderList() {
      if (socketOptionsBuilder_ != null) {
        return socketOptionsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(socketOptions_);
      }
    }
    /**
     * <pre>
     * Additional socket options that may not be present in Envoy source code or
     * precompiled binaries.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.SocketOption.Builder addSocketOptionsBuilder() {
      return getSocketOptionsFieldBuilder().addBuilder(
          io.envoyproxy.envoy.config.core.v3.SocketOption.getDefaultInstance());
    }
    /**
     * <pre>
     * Additional socket options that may not be present in Envoy source code or
     * precompiled binaries.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
     */
    public io.envoyproxy.envoy.config.core.v3.SocketOption.Builder addSocketOptionsBuilder(
        int index) {
      return getSocketOptionsFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.config.core.v3.SocketOption.getDefaultInstance());
    }
    /**
     * <pre>
     * Additional socket options that may not be present in Envoy source code or
     * precompiled binaries.
     * </pre>
     *
     * <code>repeated .envoy.config.core.v3.SocketOption socket_options = 4;</code>
     */
    public java.util.List<io.envoyproxy.envoy.config.core.v3.SocketOption.Builder> 
         getSocketOptionsBuilderList() {
      return getSocketOptionsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.config.core.v3.SocketOption, io.envoyproxy.envoy.config.core.v3.SocketOption.Builder, io.envoyproxy.envoy.config.core.v3.SocketOptionOrBuilder> 
        getSocketOptionsFieldBuilder() {
      if (socketOptionsBuilder_ == null) {
        socketOptionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.config.core.v3.SocketOption, io.envoyproxy.envoy.config.core.v3.SocketOption.Builder, io.envoyproxy.envoy.config.core.v3.SocketOptionOrBuilder>(
                socketOptions_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        socketOptions_ = null;
      }
      return socketOptionsBuilder_;
    }

    private boolean ignoreGlobalConnLimit_ ;
    /**
     * <pre>
     * Indicates whether :ref:`global_downstream_max_connections &lt;config_overload_manager_limiting_connections&gt;`
     * should apply to the admin interface or not.
     * </pre>
     *
     * <code>bool ignore_global_conn_limit = 6;</code>
     * @return The ignoreGlobalConnLimit.
     */
    @java.lang.Override
    public boolean getIgnoreGlobalConnLimit() {
      return ignoreGlobalConnLimit_;
    }
    /**
     * <pre>
     * Indicates whether :ref:`global_downstream_max_connections &lt;config_overload_manager_limiting_connections&gt;`
     * should apply to the admin interface or not.
     * </pre>
     *
     * <code>bool ignore_global_conn_limit = 6;</code>
     * @param value The ignoreGlobalConnLimit to set.
     * @return This builder for chaining.
     */
    public Builder setIgnoreGlobalConnLimit(boolean value) {
      
      ignoreGlobalConnLimit_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates whether :ref:`global_downstream_max_connections &lt;config_overload_manager_limiting_connections&gt;`
     * should apply to the admin interface or not.
     * </pre>
     *
     * <code>bool ignore_global_conn_limit = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearIgnoreGlobalConnLimit() {
      
      ignoreGlobalConnLimit_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.config.bootstrap.v3.Admin)
  }

  // @@protoc_insertion_point(class_scope:envoy.config.bootstrap.v3.Admin)
  private static final io.envoyproxy.envoy.config.bootstrap.v3.Admin DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.config.bootstrap.v3.Admin();
  }

  public static io.envoyproxy.envoy.config.bootstrap.v3.Admin getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Admin>
      PARSER = new com.google.protobuf.AbstractParser<Admin>() {
    @java.lang.Override
    public Admin parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Admin(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Admin> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Admin> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.config.bootstrap.v3.Admin getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

