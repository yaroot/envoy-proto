// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/bootstrap/v2/bootstrap.proto

package io.envoyproxy.envoy.config.bootstrap.v2;

public interface BootstrapOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.bootstrap.v2.Bootstrap)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Node identity to present to the management server and for instance
   * identification purposes (e.g. in generated headers).
   * </pre>
   *
   * <code>.envoy.api.v2.core.Node node = 1;</code>
   * @return Whether the node field is set.
   */
  boolean hasNode();
  /**
   * <pre>
   * Node identity to present to the management server and for instance
   * identification purposes (e.g. in generated headers).
   * </pre>
   *
   * <code>.envoy.api.v2.core.Node node = 1;</code>
   * @return The node.
   */
  io.envoyproxy.envoy.api.v2.core.Node getNode();
  /**
   * <pre>
   * Node identity to present to the management server and for instance
   * identification purposes (e.g. in generated headers).
   * </pre>
   *
   * <code>.envoy.api.v2.core.Node node = 1;</code>
   */
  io.envoyproxy.envoy.api.v2.core.NodeOrBuilder getNodeOrBuilder();

  /**
   * <pre>
   * Statically specified resources.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.Bootstrap.StaticResources static_resources = 2;</code>
   * @return Whether the staticResources field is set.
   */
  boolean hasStaticResources();
  /**
   * <pre>
   * Statically specified resources.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.Bootstrap.StaticResources static_resources = 2;</code>
   * @return The staticResources.
   */
  io.envoyproxy.envoy.config.bootstrap.v2.Bootstrap.StaticResources getStaticResources();
  /**
   * <pre>
   * Statically specified resources.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.Bootstrap.StaticResources static_resources = 2;</code>
   */
  io.envoyproxy.envoy.config.bootstrap.v2.Bootstrap.StaticResourcesOrBuilder getStaticResourcesOrBuilder();

  /**
   * <pre>
   * xDS configuration sources.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.Bootstrap.DynamicResources dynamic_resources = 3;</code>
   * @return Whether the dynamicResources field is set.
   */
  boolean hasDynamicResources();
  /**
   * <pre>
   * xDS configuration sources.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.Bootstrap.DynamicResources dynamic_resources = 3;</code>
   * @return The dynamicResources.
   */
  io.envoyproxy.envoy.config.bootstrap.v2.Bootstrap.DynamicResources getDynamicResources();
  /**
   * <pre>
   * xDS configuration sources.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.Bootstrap.DynamicResources dynamic_resources = 3;</code>
   */
  io.envoyproxy.envoy.config.bootstrap.v2.Bootstrap.DynamicResourcesOrBuilder getDynamicResourcesOrBuilder();

  /**
   * <pre>
   * Configuration for the cluster manager which owns all upstream clusters
   * within the server.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.ClusterManager cluster_manager = 4;</code>
   * @return Whether the clusterManager field is set.
   */
  boolean hasClusterManager();
  /**
   * <pre>
   * Configuration for the cluster manager which owns all upstream clusters
   * within the server.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.ClusterManager cluster_manager = 4;</code>
   * @return The clusterManager.
   */
  io.envoyproxy.envoy.config.bootstrap.v2.ClusterManager getClusterManager();
  /**
   * <pre>
   * Configuration for the cluster manager which owns all upstream clusters
   * within the server.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.ClusterManager cluster_manager = 4;</code>
   */
  io.envoyproxy.envoy.config.bootstrap.v2.ClusterManagerOrBuilder getClusterManagerOrBuilder();

  /**
   * <pre>
   * Health discovery service config option.
   * (:ref:`core.ApiConfigSource &lt;envoy_api_msg_core.ApiConfigSource&gt;`)
   * </pre>
   *
   * <code>.envoy.api.v2.core.ApiConfigSource hds_config = 14;</code>
   * @return Whether the hdsConfig field is set.
   */
  boolean hasHdsConfig();
  /**
   * <pre>
   * Health discovery service config option.
   * (:ref:`core.ApiConfigSource &lt;envoy_api_msg_core.ApiConfigSource&gt;`)
   * </pre>
   *
   * <code>.envoy.api.v2.core.ApiConfigSource hds_config = 14;</code>
   * @return The hdsConfig.
   */
  io.envoyproxy.envoy.api.v2.core.ApiConfigSource getHdsConfig();
  /**
   * <pre>
   * Health discovery service config option.
   * (:ref:`core.ApiConfigSource &lt;envoy_api_msg_core.ApiConfigSource&gt;`)
   * </pre>
   *
   * <code>.envoy.api.v2.core.ApiConfigSource hds_config = 14;</code>
   */
  io.envoyproxy.envoy.api.v2.core.ApiConfigSourceOrBuilder getHdsConfigOrBuilder();

  /**
   * <pre>
   * Optional file system path to search for startup flag files.
   * </pre>
   *
   * <code>string flags_path = 5;</code>
   * @return The flagsPath.
   */
  java.lang.String getFlagsPath();
  /**
   * <pre>
   * Optional file system path to search for startup flag files.
   * </pre>
   *
   * <code>string flags_path = 5;</code>
   * @return The bytes for flagsPath.
   */
  com.google.protobuf.ByteString
      getFlagsPathBytes();

  /**
   * <pre>
   * Optional set of stats sinks.
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v2.StatsSink stats_sinks = 6;</code>
   */
  java.util.List<io.envoyproxy.envoy.config.metrics.v2.StatsSink> 
      getStatsSinksList();
  /**
   * <pre>
   * Optional set of stats sinks.
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v2.StatsSink stats_sinks = 6;</code>
   */
  io.envoyproxy.envoy.config.metrics.v2.StatsSink getStatsSinks(int index);
  /**
   * <pre>
   * Optional set of stats sinks.
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v2.StatsSink stats_sinks = 6;</code>
   */
  int getStatsSinksCount();
  /**
   * <pre>
   * Optional set of stats sinks.
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v2.StatsSink stats_sinks = 6;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.config.metrics.v2.StatsSinkOrBuilder> 
      getStatsSinksOrBuilderList();
  /**
   * <pre>
   * Optional set of stats sinks.
   * </pre>
   *
   * <code>repeated .envoy.config.metrics.v2.StatsSink stats_sinks = 6;</code>
   */
  io.envoyproxy.envoy.config.metrics.v2.StatsSinkOrBuilder getStatsSinksOrBuilder(
      int index);

  /**
   * <pre>
   * Configuration for internal processing of stats.
   * </pre>
   *
   * <code>.envoy.config.metrics.v2.StatsConfig stats_config = 13;</code>
   * @return Whether the statsConfig field is set.
   */
  boolean hasStatsConfig();
  /**
   * <pre>
   * Configuration for internal processing of stats.
   * </pre>
   *
   * <code>.envoy.config.metrics.v2.StatsConfig stats_config = 13;</code>
   * @return The statsConfig.
   */
  io.envoyproxy.envoy.config.metrics.v2.StatsConfig getStatsConfig();
  /**
   * <pre>
   * Configuration for internal processing of stats.
   * </pre>
   *
   * <code>.envoy.config.metrics.v2.StatsConfig stats_config = 13;</code>
   */
  io.envoyproxy.envoy.config.metrics.v2.StatsConfigOrBuilder getStatsConfigOrBuilder();

  /**
   * <pre>
   * Optional duration between flushes to configured stats sinks. For
   * performance reasons Envoy latches counters and only flushes counters and
   * gauges at a periodic interval. If not specified the default is 5000ms (5
   * seconds).
   * Duration must be at least 1ms and at most 5 min.
   * </pre>
   *
   * <code>.google.protobuf.Duration stats_flush_interval = 7 [(.validate.rules) = { ... }</code>
   * @return Whether the statsFlushInterval field is set.
   */
  boolean hasStatsFlushInterval();
  /**
   * <pre>
   * Optional duration between flushes to configured stats sinks. For
   * performance reasons Envoy latches counters and only flushes counters and
   * gauges at a periodic interval. If not specified the default is 5000ms (5
   * seconds).
   * Duration must be at least 1ms and at most 5 min.
   * </pre>
   *
   * <code>.google.protobuf.Duration stats_flush_interval = 7 [(.validate.rules) = { ... }</code>
   * @return The statsFlushInterval.
   */
  com.google.protobuf.Duration getStatsFlushInterval();
  /**
   * <pre>
   * Optional duration between flushes to configured stats sinks. For
   * performance reasons Envoy latches counters and only flushes counters and
   * gauges at a periodic interval. If not specified the default is 5000ms (5
   * seconds).
   * Duration must be at least 1ms and at most 5 min.
   * </pre>
   *
   * <code>.google.protobuf.Duration stats_flush_interval = 7 [(.validate.rules) = { ... }</code>
   */
  com.google.protobuf.DurationOrBuilder getStatsFlushIntervalOrBuilder();

  /**
   * <pre>
   * Optional watchdog configuration.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.Watchdog watchdog = 8;</code>
   * @return Whether the watchdog field is set.
   */
  boolean hasWatchdog();
  /**
   * <pre>
   * Optional watchdog configuration.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.Watchdog watchdog = 8;</code>
   * @return The watchdog.
   */
  io.envoyproxy.envoy.config.bootstrap.v2.Watchdog getWatchdog();
  /**
   * <pre>
   * Optional watchdog configuration.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.Watchdog watchdog = 8;</code>
   */
  io.envoyproxy.envoy.config.bootstrap.v2.WatchdogOrBuilder getWatchdogOrBuilder();

  /**
   * <pre>
   * Configuration for an external tracing provider.
   * .. attention::
   *  This field has been deprecated in favor of :ref:`HttpConnectionManager.Tracing.provider
   *  &lt;envoy_api_field_config.filter.network.http_connection_manager.v2.HttpConnectionManager.Tracing.provider&gt;`.
   * </pre>
   *
   * <code>.envoy.config.trace.v2.Tracing tracing = 9;</code>
   * @return Whether the tracing field is set.
   */
  boolean hasTracing();
  /**
   * <pre>
   * Configuration for an external tracing provider.
   * .. attention::
   *  This field has been deprecated in favor of :ref:`HttpConnectionManager.Tracing.provider
   *  &lt;envoy_api_field_config.filter.network.http_connection_manager.v2.HttpConnectionManager.Tracing.provider&gt;`.
   * </pre>
   *
   * <code>.envoy.config.trace.v2.Tracing tracing = 9;</code>
   * @return The tracing.
   */
  io.envoyproxy.envoy.config.trace.v2.Tracing getTracing();
  /**
   * <pre>
   * Configuration for an external tracing provider.
   * .. attention::
   *  This field has been deprecated in favor of :ref:`HttpConnectionManager.Tracing.provider
   *  &lt;envoy_api_field_config.filter.network.http_connection_manager.v2.HttpConnectionManager.Tracing.provider&gt;`.
   * </pre>
   *
   * <code>.envoy.config.trace.v2.Tracing tracing = 9;</code>
   */
  io.envoyproxy.envoy.config.trace.v2.TracingOrBuilder getTracingOrBuilder();

  /**
   * <pre>
   * Configuration for the runtime configuration provider (deprecated). If not
   * specified, a “null” provider will be used which will result in all defaults
   * being used.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.Runtime runtime = 11 [deprecated = true, (.envoy.annotations.disallowed_by_default) = true];</code>
   * @deprecated envoy.config.bootstrap.v2.Bootstrap.runtime is deprecated.
   *     See envoy/config/bootstrap/v2/bootstrap.proto;l=130
   * @return Whether the runtime field is set.
   */
  @java.lang.Deprecated boolean hasRuntime();
  /**
   * <pre>
   * Configuration for the runtime configuration provider (deprecated). If not
   * specified, a “null” provider will be used which will result in all defaults
   * being used.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.Runtime runtime = 11 [deprecated = true, (.envoy.annotations.disallowed_by_default) = true];</code>
   * @deprecated envoy.config.bootstrap.v2.Bootstrap.runtime is deprecated.
   *     See envoy/config/bootstrap/v2/bootstrap.proto;l=130
   * @return The runtime.
   */
  @java.lang.Deprecated io.envoyproxy.envoy.config.bootstrap.v2.Runtime getRuntime();
  /**
   * <pre>
   * Configuration for the runtime configuration provider (deprecated). If not
   * specified, a “null” provider will be used which will result in all defaults
   * being used.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.Runtime runtime = 11 [deprecated = true, (.envoy.annotations.disallowed_by_default) = true];</code>
   */
  @java.lang.Deprecated io.envoyproxy.envoy.config.bootstrap.v2.RuntimeOrBuilder getRuntimeOrBuilder();

  /**
   * <pre>
   * Configuration for the runtime configuration provider. If not
   * specified, a “null” provider will be used which will result in all defaults
   * being used.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.LayeredRuntime layered_runtime = 17;</code>
   * @return Whether the layeredRuntime field is set.
   */
  boolean hasLayeredRuntime();
  /**
   * <pre>
   * Configuration for the runtime configuration provider. If not
   * specified, a “null” provider will be used which will result in all defaults
   * being used.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.LayeredRuntime layered_runtime = 17;</code>
   * @return The layeredRuntime.
   */
  io.envoyproxy.envoy.config.bootstrap.v2.LayeredRuntime getLayeredRuntime();
  /**
   * <pre>
   * Configuration for the runtime configuration provider. If not
   * specified, a “null” provider will be used which will result in all defaults
   * being used.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.LayeredRuntime layered_runtime = 17;</code>
   */
  io.envoyproxy.envoy.config.bootstrap.v2.LayeredRuntimeOrBuilder getLayeredRuntimeOrBuilder();

  /**
   * <pre>
   * Configuration for the local administration HTTP server.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.Admin admin = 12;</code>
   * @return Whether the admin field is set.
   */
  boolean hasAdmin();
  /**
   * <pre>
   * Configuration for the local administration HTTP server.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.Admin admin = 12;</code>
   * @return The admin.
   */
  io.envoyproxy.envoy.config.bootstrap.v2.Admin getAdmin();
  /**
   * <pre>
   * Configuration for the local administration HTTP server.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.Admin admin = 12;</code>
   */
  io.envoyproxy.envoy.config.bootstrap.v2.AdminOrBuilder getAdminOrBuilder();

  /**
   * <pre>
   * Optional overload manager configuration.
   * </pre>
   *
   * <code>.envoy.config.overload.v2alpha.OverloadManager overload_manager = 15;</code>
   * @return Whether the overloadManager field is set.
   */
  boolean hasOverloadManager();
  /**
   * <pre>
   * Optional overload manager configuration.
   * </pre>
   *
   * <code>.envoy.config.overload.v2alpha.OverloadManager overload_manager = 15;</code>
   * @return The overloadManager.
   */
  io.envoyproxy.envoy.config.overload.v2alpha.OverloadManager getOverloadManager();
  /**
   * <pre>
   * Optional overload manager configuration.
   * </pre>
   *
   * <code>.envoy.config.overload.v2alpha.OverloadManager overload_manager = 15;</code>
   */
  io.envoyproxy.envoy.config.overload.v2alpha.OverloadManagerOrBuilder getOverloadManagerOrBuilder();

  /**
   * <pre>
   * Enable :ref:`stats for event dispatcher &lt;operations_performance&gt;`, defaults to false.
   * Note that this records a value for each iteration of the event loop on every thread. This
   * should normally be minimal overhead, but when using
   * :ref:`statsd &lt;envoy_api_msg_config.metrics.v2.StatsdSink&gt;`, it will send each observed value
   * over the wire individually because the statsd protocol doesn't have any way to represent a
   * histogram summary. Be aware that this can be a very large volume of data.
   * </pre>
   *
   * <code>bool enable_dispatcher_stats = 16;</code>
   * @return The enableDispatcherStats.
   */
  boolean getEnableDispatcherStats();

  /**
   * <pre>
   * Optional string which will be used in lieu of x-envoy in prefixing headers.
   * For example, if this string is present and set to X-Foo, then x-envoy-retry-on will be
   * transformed into x-foo-retry-on etc.
   * Note this applies to the headers Envoy will generate, the headers Envoy will sanitize, and the
   * headers Envoy will trust for core code and core extensions only. Be VERY careful making
   * changes to this string, especially in multi-layer Envoy deployments or deployments using
   * extensions which are not upstream.
   * </pre>
   *
   * <code>string header_prefix = 18;</code>
   * @return The headerPrefix.
   */
  java.lang.String getHeaderPrefix();
  /**
   * <pre>
   * Optional string which will be used in lieu of x-envoy in prefixing headers.
   * For example, if this string is present and set to X-Foo, then x-envoy-retry-on will be
   * transformed into x-foo-retry-on etc.
   * Note this applies to the headers Envoy will generate, the headers Envoy will sanitize, and the
   * headers Envoy will trust for core code and core extensions only. Be VERY careful making
   * changes to this string, especially in multi-layer Envoy deployments or deployments using
   * extensions which are not upstream.
   * </pre>
   *
   * <code>string header_prefix = 18;</code>
   * @return The bytes for headerPrefix.
   */
  com.google.protobuf.ByteString
      getHeaderPrefixBytes();

  /**
   * <pre>
   * Optional proxy version which will be used to set the value of :ref:`server.version statistic
   * &lt;server_statistics&gt;` if specified. Envoy will not process this value, it will be sent as is to
   * :ref:`stats sinks &lt;envoy_api_msg_config.metrics.v2.StatsSink&gt;`.
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value stats_server_version_override = 19;</code>
   * @return Whether the statsServerVersionOverride field is set.
   */
  boolean hasStatsServerVersionOverride();
  /**
   * <pre>
   * Optional proxy version which will be used to set the value of :ref:`server.version statistic
   * &lt;server_statistics&gt;` if specified. Envoy will not process this value, it will be sent as is to
   * :ref:`stats sinks &lt;envoy_api_msg_config.metrics.v2.StatsSink&gt;`.
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value stats_server_version_override = 19;</code>
   * @return The statsServerVersionOverride.
   */
  com.google.protobuf.UInt64Value getStatsServerVersionOverride();
  /**
   * <pre>
   * Optional proxy version which will be used to set the value of :ref:`server.version statistic
   * &lt;server_statistics&gt;` if specified. Envoy will not process this value, it will be sent as is to
   * :ref:`stats sinks &lt;envoy_api_msg_config.metrics.v2.StatsSink&gt;`.
   * </pre>
   *
   * <code>.google.protobuf.UInt64Value stats_server_version_override = 19;</code>
   */
  com.google.protobuf.UInt64ValueOrBuilder getStatsServerVersionOverrideOrBuilder();

  /**
   * <pre>
   * Always use TCP queries instead of UDP queries for DNS lookups.
   * This may be overridden on a per-cluster basis in cds_config,
   * when :ref:`dns_resolvers &lt;envoy_api_field_Cluster.dns_resolvers&gt;` and
   * :ref:`use_tcp_for_dns_lookups &lt;envoy_api_field_Cluster.use_tcp_for_dns_lookups&gt;` are
   * specified.
   * Setting this value causes failure if the
   * ``envoy.restart_features.use_apple_api_for_dns_lookups`` runtime value is true during
   * server startup. Apple' API only uses UDP for DNS resolution.
   * </pre>
   *
   * <code>bool use_tcp_for_dns_lookups = 20;</code>
   * @return The useTcpForDnsLookups.
   */
  boolean getUseTcpForDnsLookups();
}
