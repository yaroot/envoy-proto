// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/bootstrap/v2/bootstrap.proto

package io.envoyproxy.envoy.config.bootstrap.v2;

public interface ClusterManagerOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.config.bootstrap.v2.ClusterManager)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Name of the local cluster (i.e., the cluster that owns the Envoy running
   * this configuration). In order to enable :ref:`zone aware routing
   * &lt;arch_overview_load_balancing_zone_aware_routing&gt;` this option must be set.
   * If *local_cluster_name* is defined then :ref:`clusters
   * &lt;envoy_api_msg_Cluster&gt;` must be defined in the :ref:`Bootstrap
   * static cluster resources
   * &lt;envoy_api_field_config.bootstrap.v2.Bootstrap.StaticResources.clusters&gt;`. This is unrelated to
   * the :option:`--service-cluster` option which does not `affect zone aware
   * routing &lt;https://github.com/envoyproxy/envoy/issues/774&gt;`_.
   * </pre>
   *
   * <code>string local_cluster_name = 1;</code>
   * @return The localClusterName.
   */
  java.lang.String getLocalClusterName();
  /**
   * <pre>
   * Name of the local cluster (i.e., the cluster that owns the Envoy running
   * this configuration). In order to enable :ref:`zone aware routing
   * &lt;arch_overview_load_balancing_zone_aware_routing&gt;` this option must be set.
   * If *local_cluster_name* is defined then :ref:`clusters
   * &lt;envoy_api_msg_Cluster&gt;` must be defined in the :ref:`Bootstrap
   * static cluster resources
   * &lt;envoy_api_field_config.bootstrap.v2.Bootstrap.StaticResources.clusters&gt;`. This is unrelated to
   * the :option:`--service-cluster` option which does not `affect zone aware
   * routing &lt;https://github.com/envoyproxy/envoy/issues/774&gt;`_.
   * </pre>
   *
   * <code>string local_cluster_name = 1;</code>
   * @return The bytes for localClusterName.
   */
  com.google.protobuf.ByteString
      getLocalClusterNameBytes();

  /**
   * <pre>
   * Optional global configuration for outlier detection.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.ClusterManager.OutlierDetection outlier_detection = 2;</code>
   * @return Whether the outlierDetection field is set.
   */
  boolean hasOutlierDetection();
  /**
   * <pre>
   * Optional global configuration for outlier detection.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.ClusterManager.OutlierDetection outlier_detection = 2;</code>
   * @return The outlierDetection.
   */
  io.envoyproxy.envoy.config.bootstrap.v2.ClusterManager.OutlierDetection getOutlierDetection();
  /**
   * <pre>
   * Optional global configuration for outlier detection.
   * </pre>
   *
   * <code>.envoy.config.bootstrap.v2.ClusterManager.OutlierDetection outlier_detection = 2;</code>
   */
  io.envoyproxy.envoy.config.bootstrap.v2.ClusterManager.OutlierDetectionOrBuilder getOutlierDetectionOrBuilder();

  /**
   * <pre>
   * Optional configuration used to bind newly established upstream connections.
   * This may be overridden on a per-cluster basis by upstream_bind_config in the cds_config.
   * </pre>
   *
   * <code>.envoy.api.v2.core.BindConfig upstream_bind_config = 3;</code>
   * @return Whether the upstreamBindConfig field is set.
   */
  boolean hasUpstreamBindConfig();
  /**
   * <pre>
   * Optional configuration used to bind newly established upstream connections.
   * This may be overridden on a per-cluster basis by upstream_bind_config in the cds_config.
   * </pre>
   *
   * <code>.envoy.api.v2.core.BindConfig upstream_bind_config = 3;</code>
   * @return The upstreamBindConfig.
   */
  io.envoyproxy.envoy.api.v2.core.BindConfig getUpstreamBindConfig();
  /**
   * <pre>
   * Optional configuration used to bind newly established upstream connections.
   * This may be overridden on a per-cluster basis by upstream_bind_config in the cds_config.
   * </pre>
   *
   * <code>.envoy.api.v2.core.BindConfig upstream_bind_config = 3;</code>
   */
  io.envoyproxy.envoy.api.v2.core.BindConfigOrBuilder getUpstreamBindConfigOrBuilder();

  /**
   * <pre>
   * A management server endpoint to stream load stats to via
   * *StreamLoadStats*. This must have :ref:`api_type
   * &lt;envoy_api_field_core.ApiConfigSource.api_type&gt;` :ref:`GRPC
   * &lt;envoy_api_enum_value_core.ApiConfigSource.ApiType.GRPC&gt;`.
   * </pre>
   *
   * <code>.envoy.api.v2.core.ApiConfigSource load_stats_config = 4;</code>
   * @return Whether the loadStatsConfig field is set.
   */
  boolean hasLoadStatsConfig();
  /**
   * <pre>
   * A management server endpoint to stream load stats to via
   * *StreamLoadStats*. This must have :ref:`api_type
   * &lt;envoy_api_field_core.ApiConfigSource.api_type&gt;` :ref:`GRPC
   * &lt;envoy_api_enum_value_core.ApiConfigSource.ApiType.GRPC&gt;`.
   * </pre>
   *
   * <code>.envoy.api.v2.core.ApiConfigSource load_stats_config = 4;</code>
   * @return The loadStatsConfig.
   */
  io.envoyproxy.envoy.api.v2.core.ApiConfigSource getLoadStatsConfig();
  /**
   * <pre>
   * A management server endpoint to stream load stats to via
   * *StreamLoadStats*. This must have :ref:`api_type
   * &lt;envoy_api_field_core.ApiConfigSource.api_type&gt;` :ref:`GRPC
   * &lt;envoy_api_enum_value_core.ApiConfigSource.ApiType.GRPC&gt;`.
   * </pre>
   *
   * <code>.envoy.api.v2.core.ApiConfigSource load_stats_config = 4;</code>
   */
  io.envoyproxy.envoy.api.v2.core.ApiConfigSourceOrBuilder getLoadStatsConfigOrBuilder();
}
