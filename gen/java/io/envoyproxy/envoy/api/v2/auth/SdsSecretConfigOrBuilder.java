// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/api/v2/auth/secret.proto

package io.envoyproxy.envoy.api.v2.auth;

public interface SdsSecretConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.api.v2.auth.SdsSecretConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Name (FQDN, UUID, SPKI, SHA256, etc.) by which the secret can be uniquely referred to.
   * When both name and config are specified, then secret can be fetched and/or reloaded via
   * SDS. When only name is specified, then secret will be loaded from static resources.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Name (FQDN, UUID, SPKI, SHA256, etc.) by which the secret can be uniquely referred to.
   * When both name and config are specified, then secret can be fetched and/or reloaded via
   * SDS. When only name is specified, then secret will be loaded from static resources.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>.envoy.api.v2.core.ConfigSource sds_config = 2;</code>
   * @return Whether the sdsConfig field is set.
   */
  boolean hasSdsConfig();
  /**
   * <code>.envoy.api.v2.core.ConfigSource sds_config = 2;</code>
   * @return The sdsConfig.
   */
  io.envoyproxy.envoy.api.v2.core.ConfigSource getSdsConfig();
  /**
   * <code>.envoy.api.v2.core.ConfigSource sds_config = 2;</code>
   */
  io.envoyproxy.envoy.api.v2.core.ConfigSourceOrBuilder getSdsConfigOrBuilder();
}
