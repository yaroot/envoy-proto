// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/api/v2/auth/common.proto

package io.envoyproxy.envoy.api.v2.auth;

/**
 * <pre>
 * [#next-free-field: 7]
 * </pre>
 *
 * Protobuf type {@code envoy.api.v2.auth.TlsCertificate}
 */
public final class TlsCertificate extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.api.v2.auth.TlsCertificate)
    TlsCertificateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TlsCertificate.newBuilder() to construct.
  private TlsCertificate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TlsCertificate() {
    signedCertificateTimestamp_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TlsCertificate();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.api.v2.auth.CommonProto.internal_static_envoy_api_v2_auth_TlsCertificate_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.api.v2.auth.CommonProto.internal_static_envoy_api_v2_auth_TlsCertificate_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.api.v2.auth.TlsCertificate.class, io.envoyproxy.envoy.api.v2.auth.TlsCertificate.Builder.class);
  }

  public static final int CERTIFICATE_CHAIN_FIELD_NUMBER = 1;
  private io.envoyproxy.envoy.api.v2.core.DataSource certificateChain_;
  /**
   * <pre>
   * The TLS certificate chain.
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource certificate_chain = 1;</code>
   * @return Whether the certificateChain field is set.
   */
  @java.lang.Override
  public boolean hasCertificateChain() {
    return certificateChain_ != null;
  }
  /**
   * <pre>
   * The TLS certificate chain.
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource certificate_chain = 1;</code>
   * @return The certificateChain.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.DataSource getCertificateChain() {
    return certificateChain_ == null ? io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance() : certificateChain_;
  }
  /**
   * <pre>
   * The TLS certificate chain.
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource certificate_chain = 1;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder getCertificateChainOrBuilder() {
    return certificateChain_ == null ? io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance() : certificateChain_;
  }

  public static final int PRIVATE_KEY_FIELD_NUMBER = 2;
  private io.envoyproxy.envoy.api.v2.core.DataSource privateKey_;
  /**
   * <pre>
   * The TLS private key.
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource private_key = 2 [(.udpa.annotations.sensitive) = true];</code>
   * @return Whether the privateKey field is set.
   */
  @java.lang.Override
  public boolean hasPrivateKey() {
    return privateKey_ != null;
  }
  /**
   * <pre>
   * The TLS private key.
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource private_key = 2 [(.udpa.annotations.sensitive) = true];</code>
   * @return The privateKey.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.DataSource getPrivateKey() {
    return privateKey_ == null ? io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance() : privateKey_;
  }
  /**
   * <pre>
   * The TLS private key.
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource private_key = 2 [(.udpa.annotations.sensitive) = true];</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder getPrivateKeyOrBuilder() {
    return privateKey_ == null ? io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance() : privateKey_;
  }

  public static final int PRIVATE_KEY_PROVIDER_FIELD_NUMBER = 6;
  private io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider privateKeyProvider_;
  /**
   * <pre>
   * BoringSSL private key method provider. This is an alternative to :ref:`private_key
   * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` field. This can't be
   * marked as ``oneof`` due to API compatibility reasons. Setting both :ref:`private_key
   * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` and
   * :ref:`private_key_provider
   * &lt;envoy_api_field_auth.TlsCertificate.private_key_provider&gt;` fields will result in an
   * error.
   * </pre>
   *
   * <code>.envoy.api.v2.auth.PrivateKeyProvider private_key_provider = 6;</code>
   * @return Whether the privateKeyProvider field is set.
   */
  @java.lang.Override
  public boolean hasPrivateKeyProvider() {
    return privateKeyProvider_ != null;
  }
  /**
   * <pre>
   * BoringSSL private key method provider. This is an alternative to :ref:`private_key
   * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` field. This can't be
   * marked as ``oneof`` due to API compatibility reasons. Setting both :ref:`private_key
   * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` and
   * :ref:`private_key_provider
   * &lt;envoy_api_field_auth.TlsCertificate.private_key_provider&gt;` fields will result in an
   * error.
   * </pre>
   *
   * <code>.envoy.api.v2.auth.PrivateKeyProvider private_key_provider = 6;</code>
   * @return The privateKeyProvider.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider getPrivateKeyProvider() {
    return privateKeyProvider_ == null ? io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider.getDefaultInstance() : privateKeyProvider_;
  }
  /**
   * <pre>
   * BoringSSL private key method provider. This is an alternative to :ref:`private_key
   * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` field. This can't be
   * marked as ``oneof`` due to API compatibility reasons. Setting both :ref:`private_key
   * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` and
   * :ref:`private_key_provider
   * &lt;envoy_api_field_auth.TlsCertificate.private_key_provider&gt;` fields will result in an
   * error.
   * </pre>
   *
   * <code>.envoy.api.v2.auth.PrivateKeyProvider private_key_provider = 6;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.auth.PrivateKeyProviderOrBuilder getPrivateKeyProviderOrBuilder() {
    return privateKeyProvider_ == null ? io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider.getDefaultInstance() : privateKeyProvider_;
  }

  public static final int PASSWORD_FIELD_NUMBER = 3;
  private io.envoyproxy.envoy.api.v2.core.DataSource password_;
  /**
   * <pre>
   * The password to decrypt the TLS private key. If this field is not set, it is assumed that the
   * TLS private key is not password encrypted.
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource password = 3 [(.udpa.annotations.sensitive) = true];</code>
   * @return Whether the password field is set.
   */
  @java.lang.Override
  public boolean hasPassword() {
    return password_ != null;
  }
  /**
   * <pre>
   * The password to decrypt the TLS private key. If this field is not set, it is assumed that the
   * TLS private key is not password encrypted.
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource password = 3 [(.udpa.annotations.sensitive) = true];</code>
   * @return The password.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.DataSource getPassword() {
    return password_ == null ? io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance() : password_;
  }
  /**
   * <pre>
   * The password to decrypt the TLS private key. If this field is not set, it is assumed that the
   * TLS private key is not password encrypted.
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource password = 3 [(.udpa.annotations.sensitive) = true];</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder getPasswordOrBuilder() {
    return password_ == null ? io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance() : password_;
  }

  public static final int OCSP_STAPLE_FIELD_NUMBER = 4;
  private io.envoyproxy.envoy.api.v2.core.DataSource ocspStaple_;
  /**
   * <pre>
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource ocsp_staple = 4;</code>
   * @return Whether the ocspStaple field is set.
   */
  @java.lang.Override
  public boolean hasOcspStaple() {
    return ocspStaple_ != null;
  }
  /**
   * <pre>
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource ocsp_staple = 4;</code>
   * @return The ocspStaple.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.DataSource getOcspStaple() {
    return ocspStaple_ == null ? io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance() : ocspStaple_;
  }
  /**
   * <pre>
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource ocsp_staple = 4;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder getOcspStapleOrBuilder() {
    return ocspStaple_ == null ? io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance() : ocspStaple_;
  }

  public static final int SIGNED_CERTIFICATE_TIMESTAMP_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private java.util.List<io.envoyproxy.envoy.api.v2.core.DataSource> signedCertificateTimestamp_;
  /**
   * <pre>
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.api.v2.core.DataSource> getSignedCertificateTimestampList() {
    return signedCertificateTimestamp_;
  }
  /**
   * <pre>
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder> 
      getSignedCertificateTimestampOrBuilderList() {
    return signedCertificateTimestamp_;
  }
  /**
   * <pre>
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
   */
  @java.lang.Override
  public int getSignedCertificateTimestampCount() {
    return signedCertificateTimestamp_.size();
  }
  /**
   * <pre>
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.DataSource getSignedCertificateTimestamp(int index) {
    return signedCertificateTimestamp_.get(index);
  }
  /**
   * <pre>
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder getSignedCertificateTimestampOrBuilder(
      int index) {
    return signedCertificateTimestamp_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (certificateChain_ != null) {
      output.writeMessage(1, getCertificateChain());
    }
    if (privateKey_ != null) {
      output.writeMessage(2, getPrivateKey());
    }
    if (password_ != null) {
      output.writeMessage(3, getPassword());
    }
    if (ocspStaple_ != null) {
      output.writeMessage(4, getOcspStaple());
    }
    for (int i = 0; i < signedCertificateTimestamp_.size(); i++) {
      output.writeMessage(5, signedCertificateTimestamp_.get(i));
    }
    if (privateKeyProvider_ != null) {
      output.writeMessage(6, getPrivateKeyProvider());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (certificateChain_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getCertificateChain());
    }
    if (privateKey_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getPrivateKey());
    }
    if (password_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getPassword());
    }
    if (ocspStaple_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getOcspStaple());
    }
    for (int i = 0; i < signedCertificateTimestamp_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, signedCertificateTimestamp_.get(i));
    }
    if (privateKeyProvider_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getPrivateKeyProvider());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.api.v2.auth.TlsCertificate)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.api.v2.auth.TlsCertificate other = (io.envoyproxy.envoy.api.v2.auth.TlsCertificate) obj;

    if (hasCertificateChain() != other.hasCertificateChain()) return false;
    if (hasCertificateChain()) {
      if (!getCertificateChain()
          .equals(other.getCertificateChain())) return false;
    }
    if (hasPrivateKey() != other.hasPrivateKey()) return false;
    if (hasPrivateKey()) {
      if (!getPrivateKey()
          .equals(other.getPrivateKey())) return false;
    }
    if (hasPrivateKeyProvider() != other.hasPrivateKeyProvider()) return false;
    if (hasPrivateKeyProvider()) {
      if (!getPrivateKeyProvider()
          .equals(other.getPrivateKeyProvider())) return false;
    }
    if (hasPassword() != other.hasPassword()) return false;
    if (hasPassword()) {
      if (!getPassword()
          .equals(other.getPassword())) return false;
    }
    if (hasOcspStaple() != other.hasOcspStaple()) return false;
    if (hasOcspStaple()) {
      if (!getOcspStaple()
          .equals(other.getOcspStaple())) return false;
    }
    if (!getSignedCertificateTimestampList()
        .equals(other.getSignedCertificateTimestampList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasCertificateChain()) {
      hash = (37 * hash) + CERTIFICATE_CHAIN_FIELD_NUMBER;
      hash = (53 * hash) + getCertificateChain().hashCode();
    }
    if (hasPrivateKey()) {
      hash = (37 * hash) + PRIVATE_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getPrivateKey().hashCode();
    }
    if (hasPrivateKeyProvider()) {
      hash = (37 * hash) + PRIVATE_KEY_PROVIDER_FIELD_NUMBER;
      hash = (53 * hash) + getPrivateKeyProvider().hashCode();
    }
    if (hasPassword()) {
      hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getPassword().hashCode();
    }
    if (hasOcspStaple()) {
      hash = (37 * hash) + OCSP_STAPLE_FIELD_NUMBER;
      hash = (53 * hash) + getOcspStaple().hashCode();
    }
    if (getSignedCertificateTimestampCount() > 0) {
      hash = (37 * hash) + SIGNED_CERTIFICATE_TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + getSignedCertificateTimestampList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.api.v2.auth.TlsCertificate parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.api.v2.auth.TlsCertificate parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.api.v2.auth.TlsCertificate parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.api.v2.auth.TlsCertificate parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.api.v2.auth.TlsCertificate parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.api.v2.auth.TlsCertificate parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.api.v2.auth.TlsCertificate parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.api.v2.auth.TlsCertificate parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.api.v2.auth.TlsCertificate parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.api.v2.auth.TlsCertificate parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.api.v2.auth.TlsCertificate parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.api.v2.auth.TlsCertificate parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.api.v2.auth.TlsCertificate prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * [#next-free-field: 7]
   * </pre>
   *
   * Protobuf type {@code envoy.api.v2.auth.TlsCertificate}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.api.v2.auth.TlsCertificate)
      io.envoyproxy.envoy.api.v2.auth.TlsCertificateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.api.v2.auth.CommonProto.internal_static_envoy_api_v2_auth_TlsCertificate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.api.v2.auth.CommonProto.internal_static_envoy_api_v2_auth_TlsCertificate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.api.v2.auth.TlsCertificate.class, io.envoyproxy.envoy.api.v2.auth.TlsCertificate.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.api.v2.auth.TlsCertificate.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      certificateChain_ = null;
      if (certificateChainBuilder_ != null) {
        certificateChainBuilder_.dispose();
        certificateChainBuilder_ = null;
      }
      privateKey_ = null;
      if (privateKeyBuilder_ != null) {
        privateKeyBuilder_.dispose();
        privateKeyBuilder_ = null;
      }
      privateKeyProvider_ = null;
      if (privateKeyProviderBuilder_ != null) {
        privateKeyProviderBuilder_.dispose();
        privateKeyProviderBuilder_ = null;
      }
      password_ = null;
      if (passwordBuilder_ != null) {
        passwordBuilder_.dispose();
        passwordBuilder_ = null;
      }
      ocspStaple_ = null;
      if (ocspStapleBuilder_ != null) {
        ocspStapleBuilder_.dispose();
        ocspStapleBuilder_ = null;
      }
      if (signedCertificateTimestampBuilder_ == null) {
        signedCertificateTimestamp_ = java.util.Collections.emptyList();
      } else {
        signedCertificateTimestamp_ = null;
        signedCertificateTimestampBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000020);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.api.v2.auth.CommonProto.internal_static_envoy_api_v2_auth_TlsCertificate_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.api.v2.auth.TlsCertificate getDefaultInstanceForType() {
      return io.envoyproxy.envoy.api.v2.auth.TlsCertificate.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.api.v2.auth.TlsCertificate build() {
      io.envoyproxy.envoy.api.v2.auth.TlsCertificate result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.api.v2.auth.TlsCertificate buildPartial() {
      io.envoyproxy.envoy.api.v2.auth.TlsCertificate result = new io.envoyproxy.envoy.api.v2.auth.TlsCertificate(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.envoyproxy.envoy.api.v2.auth.TlsCertificate result) {
      if (signedCertificateTimestampBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0)) {
          signedCertificateTimestamp_ = java.util.Collections.unmodifiableList(signedCertificateTimestamp_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.signedCertificateTimestamp_ = signedCertificateTimestamp_;
      } else {
        result.signedCertificateTimestamp_ = signedCertificateTimestampBuilder_.build();
      }
    }

    private void buildPartial0(io.envoyproxy.envoy.api.v2.auth.TlsCertificate result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.certificateChain_ = certificateChainBuilder_ == null
            ? certificateChain_
            : certificateChainBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.privateKey_ = privateKeyBuilder_ == null
            ? privateKey_
            : privateKeyBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.privateKeyProvider_ = privateKeyProviderBuilder_ == null
            ? privateKeyProvider_
            : privateKeyProviderBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.password_ = passwordBuilder_ == null
            ? password_
            : passwordBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.ocspStaple_ = ocspStapleBuilder_ == null
            ? ocspStaple_
            : ocspStapleBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.api.v2.auth.TlsCertificate) {
        return mergeFrom((io.envoyproxy.envoy.api.v2.auth.TlsCertificate)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.api.v2.auth.TlsCertificate other) {
      if (other == io.envoyproxy.envoy.api.v2.auth.TlsCertificate.getDefaultInstance()) return this;
      if (other.hasCertificateChain()) {
        mergeCertificateChain(other.getCertificateChain());
      }
      if (other.hasPrivateKey()) {
        mergePrivateKey(other.getPrivateKey());
      }
      if (other.hasPrivateKeyProvider()) {
        mergePrivateKeyProvider(other.getPrivateKeyProvider());
      }
      if (other.hasPassword()) {
        mergePassword(other.getPassword());
      }
      if (other.hasOcspStaple()) {
        mergeOcspStaple(other.getOcspStaple());
      }
      if (signedCertificateTimestampBuilder_ == null) {
        if (!other.signedCertificateTimestamp_.isEmpty()) {
          if (signedCertificateTimestamp_.isEmpty()) {
            signedCertificateTimestamp_ = other.signedCertificateTimestamp_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureSignedCertificateTimestampIsMutable();
            signedCertificateTimestamp_.addAll(other.signedCertificateTimestamp_);
          }
          onChanged();
        }
      } else {
        if (!other.signedCertificateTimestamp_.isEmpty()) {
          if (signedCertificateTimestampBuilder_.isEmpty()) {
            signedCertificateTimestampBuilder_.dispose();
            signedCertificateTimestampBuilder_ = null;
            signedCertificateTimestamp_ = other.signedCertificateTimestamp_;
            bitField0_ = (bitField0_ & ~0x00000020);
            signedCertificateTimestampBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSignedCertificateTimestampFieldBuilder() : null;
          } else {
            signedCertificateTimestampBuilder_.addAllMessages(other.signedCertificateTimestamp_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getCertificateChainFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getPrivateKeyFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getPasswordFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getOcspStapleFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 34
            case 42: {
              io.envoyproxy.envoy.api.v2.core.DataSource m =
                  input.readMessage(
                      io.envoyproxy.envoy.api.v2.core.DataSource.parser(),
                      extensionRegistry);
              if (signedCertificateTimestampBuilder_ == null) {
                ensureSignedCertificateTimestampIsMutable();
                signedCertificateTimestamp_.add(m);
              } else {
                signedCertificateTimestampBuilder_.addMessage(m);
              }
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getPrivateKeyProviderFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private io.envoyproxy.envoy.api.v2.core.DataSource certificateChain_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.DataSource, io.envoyproxy.envoy.api.v2.core.DataSource.Builder, io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder> certificateChainBuilder_;
    /**
     * <pre>
     * The TLS certificate chain.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource certificate_chain = 1;</code>
     * @return Whether the certificateChain field is set.
     */
    public boolean hasCertificateChain() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The TLS certificate chain.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource certificate_chain = 1;</code>
     * @return The certificateChain.
     */
    public io.envoyproxy.envoy.api.v2.core.DataSource getCertificateChain() {
      if (certificateChainBuilder_ == null) {
        return certificateChain_ == null ? io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance() : certificateChain_;
      } else {
        return certificateChainBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The TLS certificate chain.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource certificate_chain = 1;</code>
     */
    public Builder setCertificateChain(io.envoyproxy.envoy.api.v2.core.DataSource value) {
      if (certificateChainBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        certificateChain_ = value;
      } else {
        certificateChainBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The TLS certificate chain.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource certificate_chain = 1;</code>
     */
    public Builder setCertificateChain(
        io.envoyproxy.envoy.api.v2.core.DataSource.Builder builderForValue) {
      if (certificateChainBuilder_ == null) {
        certificateChain_ = builderForValue.build();
      } else {
        certificateChainBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The TLS certificate chain.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource certificate_chain = 1;</code>
     */
    public Builder mergeCertificateChain(io.envoyproxy.envoy.api.v2.core.DataSource value) {
      if (certificateChainBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          certificateChain_ != null &&
          certificateChain_ != io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance()) {
          getCertificateChainBuilder().mergeFrom(value);
        } else {
          certificateChain_ = value;
        }
      } else {
        certificateChainBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The TLS certificate chain.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource certificate_chain = 1;</code>
     */
    public Builder clearCertificateChain() {
      bitField0_ = (bitField0_ & ~0x00000001);
      certificateChain_ = null;
      if (certificateChainBuilder_ != null) {
        certificateChainBuilder_.dispose();
        certificateChainBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The TLS certificate chain.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource certificate_chain = 1;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.DataSource.Builder getCertificateChainBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getCertificateChainFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The TLS certificate chain.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource certificate_chain = 1;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder getCertificateChainOrBuilder() {
      if (certificateChainBuilder_ != null) {
        return certificateChainBuilder_.getMessageOrBuilder();
      } else {
        return certificateChain_ == null ?
            io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance() : certificateChain_;
      }
    }
    /**
     * <pre>
     * The TLS certificate chain.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource certificate_chain = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.DataSource, io.envoyproxy.envoy.api.v2.core.DataSource.Builder, io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder> 
        getCertificateChainFieldBuilder() {
      if (certificateChainBuilder_ == null) {
        certificateChainBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.api.v2.core.DataSource, io.envoyproxy.envoy.api.v2.core.DataSource.Builder, io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder>(
                getCertificateChain(),
                getParentForChildren(),
                isClean());
        certificateChain_ = null;
      }
      return certificateChainBuilder_;
    }

    private io.envoyproxy.envoy.api.v2.core.DataSource privateKey_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.DataSource, io.envoyproxy.envoy.api.v2.core.DataSource.Builder, io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder> privateKeyBuilder_;
    /**
     * <pre>
     * The TLS private key.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource private_key = 2 [(.udpa.annotations.sensitive) = true];</code>
     * @return Whether the privateKey field is set.
     */
    public boolean hasPrivateKey() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The TLS private key.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource private_key = 2 [(.udpa.annotations.sensitive) = true];</code>
     * @return The privateKey.
     */
    public io.envoyproxy.envoy.api.v2.core.DataSource getPrivateKey() {
      if (privateKeyBuilder_ == null) {
        return privateKey_ == null ? io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance() : privateKey_;
      } else {
        return privateKeyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The TLS private key.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource private_key = 2 [(.udpa.annotations.sensitive) = true];</code>
     */
    public Builder setPrivateKey(io.envoyproxy.envoy.api.v2.core.DataSource value) {
      if (privateKeyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        privateKey_ = value;
      } else {
        privateKeyBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The TLS private key.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource private_key = 2 [(.udpa.annotations.sensitive) = true];</code>
     */
    public Builder setPrivateKey(
        io.envoyproxy.envoy.api.v2.core.DataSource.Builder builderForValue) {
      if (privateKeyBuilder_ == null) {
        privateKey_ = builderForValue.build();
      } else {
        privateKeyBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The TLS private key.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource private_key = 2 [(.udpa.annotations.sensitive) = true];</code>
     */
    public Builder mergePrivateKey(io.envoyproxy.envoy.api.v2.core.DataSource value) {
      if (privateKeyBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          privateKey_ != null &&
          privateKey_ != io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance()) {
          getPrivateKeyBuilder().mergeFrom(value);
        } else {
          privateKey_ = value;
        }
      } else {
        privateKeyBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The TLS private key.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource private_key = 2 [(.udpa.annotations.sensitive) = true];</code>
     */
    public Builder clearPrivateKey() {
      bitField0_ = (bitField0_ & ~0x00000002);
      privateKey_ = null;
      if (privateKeyBuilder_ != null) {
        privateKeyBuilder_.dispose();
        privateKeyBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The TLS private key.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource private_key = 2 [(.udpa.annotations.sensitive) = true];</code>
     */
    public io.envoyproxy.envoy.api.v2.core.DataSource.Builder getPrivateKeyBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getPrivateKeyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The TLS private key.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource private_key = 2 [(.udpa.annotations.sensitive) = true];</code>
     */
    public io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder getPrivateKeyOrBuilder() {
      if (privateKeyBuilder_ != null) {
        return privateKeyBuilder_.getMessageOrBuilder();
      } else {
        return privateKey_ == null ?
            io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance() : privateKey_;
      }
    }
    /**
     * <pre>
     * The TLS private key.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource private_key = 2 [(.udpa.annotations.sensitive) = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.DataSource, io.envoyproxy.envoy.api.v2.core.DataSource.Builder, io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder> 
        getPrivateKeyFieldBuilder() {
      if (privateKeyBuilder_ == null) {
        privateKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.api.v2.core.DataSource, io.envoyproxy.envoy.api.v2.core.DataSource.Builder, io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder>(
                getPrivateKey(),
                getParentForChildren(),
                isClean());
        privateKey_ = null;
      }
      return privateKeyBuilder_;
    }

    private io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider privateKeyProvider_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider, io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider.Builder, io.envoyproxy.envoy.api.v2.auth.PrivateKeyProviderOrBuilder> privateKeyProviderBuilder_;
    /**
     * <pre>
     * BoringSSL private key method provider. This is an alternative to :ref:`private_key
     * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` field. This can't be
     * marked as ``oneof`` due to API compatibility reasons. Setting both :ref:`private_key
     * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` and
     * :ref:`private_key_provider
     * &lt;envoy_api_field_auth.TlsCertificate.private_key_provider&gt;` fields will result in an
     * error.
     * </pre>
     *
     * <code>.envoy.api.v2.auth.PrivateKeyProvider private_key_provider = 6;</code>
     * @return Whether the privateKeyProvider field is set.
     */
    public boolean hasPrivateKeyProvider() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * BoringSSL private key method provider. This is an alternative to :ref:`private_key
     * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` field. This can't be
     * marked as ``oneof`` due to API compatibility reasons. Setting both :ref:`private_key
     * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` and
     * :ref:`private_key_provider
     * &lt;envoy_api_field_auth.TlsCertificate.private_key_provider&gt;` fields will result in an
     * error.
     * </pre>
     *
     * <code>.envoy.api.v2.auth.PrivateKeyProvider private_key_provider = 6;</code>
     * @return The privateKeyProvider.
     */
    public io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider getPrivateKeyProvider() {
      if (privateKeyProviderBuilder_ == null) {
        return privateKeyProvider_ == null ? io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider.getDefaultInstance() : privateKeyProvider_;
      } else {
        return privateKeyProviderBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * BoringSSL private key method provider. This is an alternative to :ref:`private_key
     * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` field. This can't be
     * marked as ``oneof`` due to API compatibility reasons. Setting both :ref:`private_key
     * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` and
     * :ref:`private_key_provider
     * &lt;envoy_api_field_auth.TlsCertificate.private_key_provider&gt;` fields will result in an
     * error.
     * </pre>
     *
     * <code>.envoy.api.v2.auth.PrivateKeyProvider private_key_provider = 6;</code>
     */
    public Builder setPrivateKeyProvider(io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider value) {
      if (privateKeyProviderBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        privateKeyProvider_ = value;
      } else {
        privateKeyProviderBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * BoringSSL private key method provider. This is an alternative to :ref:`private_key
     * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` field. This can't be
     * marked as ``oneof`` due to API compatibility reasons. Setting both :ref:`private_key
     * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` and
     * :ref:`private_key_provider
     * &lt;envoy_api_field_auth.TlsCertificate.private_key_provider&gt;` fields will result in an
     * error.
     * </pre>
     *
     * <code>.envoy.api.v2.auth.PrivateKeyProvider private_key_provider = 6;</code>
     */
    public Builder setPrivateKeyProvider(
        io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider.Builder builderForValue) {
      if (privateKeyProviderBuilder_ == null) {
        privateKeyProvider_ = builderForValue.build();
      } else {
        privateKeyProviderBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * BoringSSL private key method provider. This is an alternative to :ref:`private_key
     * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` field. This can't be
     * marked as ``oneof`` due to API compatibility reasons. Setting both :ref:`private_key
     * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` and
     * :ref:`private_key_provider
     * &lt;envoy_api_field_auth.TlsCertificate.private_key_provider&gt;` fields will result in an
     * error.
     * </pre>
     *
     * <code>.envoy.api.v2.auth.PrivateKeyProvider private_key_provider = 6;</code>
     */
    public Builder mergePrivateKeyProvider(io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider value) {
      if (privateKeyProviderBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          privateKeyProvider_ != null &&
          privateKeyProvider_ != io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider.getDefaultInstance()) {
          getPrivateKeyProviderBuilder().mergeFrom(value);
        } else {
          privateKeyProvider_ = value;
        }
      } else {
        privateKeyProviderBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * BoringSSL private key method provider. This is an alternative to :ref:`private_key
     * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` field. This can't be
     * marked as ``oneof`` due to API compatibility reasons. Setting both :ref:`private_key
     * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` and
     * :ref:`private_key_provider
     * &lt;envoy_api_field_auth.TlsCertificate.private_key_provider&gt;` fields will result in an
     * error.
     * </pre>
     *
     * <code>.envoy.api.v2.auth.PrivateKeyProvider private_key_provider = 6;</code>
     */
    public Builder clearPrivateKeyProvider() {
      bitField0_ = (bitField0_ & ~0x00000004);
      privateKeyProvider_ = null;
      if (privateKeyProviderBuilder_ != null) {
        privateKeyProviderBuilder_.dispose();
        privateKeyProviderBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * BoringSSL private key method provider. This is an alternative to :ref:`private_key
     * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` field. This can't be
     * marked as ``oneof`` due to API compatibility reasons. Setting both :ref:`private_key
     * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` and
     * :ref:`private_key_provider
     * &lt;envoy_api_field_auth.TlsCertificate.private_key_provider&gt;` fields will result in an
     * error.
     * </pre>
     *
     * <code>.envoy.api.v2.auth.PrivateKeyProvider private_key_provider = 6;</code>
     */
    public io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider.Builder getPrivateKeyProviderBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getPrivateKeyProviderFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * BoringSSL private key method provider. This is an alternative to :ref:`private_key
     * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` field. This can't be
     * marked as ``oneof`` due to API compatibility reasons. Setting both :ref:`private_key
     * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` and
     * :ref:`private_key_provider
     * &lt;envoy_api_field_auth.TlsCertificate.private_key_provider&gt;` fields will result in an
     * error.
     * </pre>
     *
     * <code>.envoy.api.v2.auth.PrivateKeyProvider private_key_provider = 6;</code>
     */
    public io.envoyproxy.envoy.api.v2.auth.PrivateKeyProviderOrBuilder getPrivateKeyProviderOrBuilder() {
      if (privateKeyProviderBuilder_ != null) {
        return privateKeyProviderBuilder_.getMessageOrBuilder();
      } else {
        return privateKeyProvider_ == null ?
            io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider.getDefaultInstance() : privateKeyProvider_;
      }
    }
    /**
     * <pre>
     * BoringSSL private key method provider. This is an alternative to :ref:`private_key
     * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` field. This can't be
     * marked as ``oneof`` due to API compatibility reasons. Setting both :ref:`private_key
     * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` and
     * :ref:`private_key_provider
     * &lt;envoy_api_field_auth.TlsCertificate.private_key_provider&gt;` fields will result in an
     * error.
     * </pre>
     *
     * <code>.envoy.api.v2.auth.PrivateKeyProvider private_key_provider = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider, io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider.Builder, io.envoyproxy.envoy.api.v2.auth.PrivateKeyProviderOrBuilder> 
        getPrivateKeyProviderFieldBuilder() {
      if (privateKeyProviderBuilder_ == null) {
        privateKeyProviderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider, io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider.Builder, io.envoyproxy.envoy.api.v2.auth.PrivateKeyProviderOrBuilder>(
                getPrivateKeyProvider(),
                getParentForChildren(),
                isClean());
        privateKeyProvider_ = null;
      }
      return privateKeyProviderBuilder_;
    }

    private io.envoyproxy.envoy.api.v2.core.DataSource password_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.DataSource, io.envoyproxy.envoy.api.v2.core.DataSource.Builder, io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder> passwordBuilder_;
    /**
     * <pre>
     * The password to decrypt the TLS private key. If this field is not set, it is assumed that the
     * TLS private key is not password encrypted.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource password = 3 [(.udpa.annotations.sensitive) = true];</code>
     * @return Whether the password field is set.
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The password to decrypt the TLS private key. If this field is not set, it is assumed that the
     * TLS private key is not password encrypted.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource password = 3 [(.udpa.annotations.sensitive) = true];</code>
     * @return The password.
     */
    public io.envoyproxy.envoy.api.v2.core.DataSource getPassword() {
      if (passwordBuilder_ == null) {
        return password_ == null ? io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance() : password_;
      } else {
        return passwordBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The password to decrypt the TLS private key. If this field is not set, it is assumed that the
     * TLS private key is not password encrypted.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource password = 3 [(.udpa.annotations.sensitive) = true];</code>
     */
    public Builder setPassword(io.envoyproxy.envoy.api.v2.core.DataSource value) {
      if (passwordBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        password_ = value;
      } else {
        passwordBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The password to decrypt the TLS private key. If this field is not set, it is assumed that the
     * TLS private key is not password encrypted.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource password = 3 [(.udpa.annotations.sensitive) = true];</code>
     */
    public Builder setPassword(
        io.envoyproxy.envoy.api.v2.core.DataSource.Builder builderForValue) {
      if (passwordBuilder_ == null) {
        password_ = builderForValue.build();
      } else {
        passwordBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The password to decrypt the TLS private key. If this field is not set, it is assumed that the
     * TLS private key is not password encrypted.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource password = 3 [(.udpa.annotations.sensitive) = true];</code>
     */
    public Builder mergePassword(io.envoyproxy.envoy.api.v2.core.DataSource value) {
      if (passwordBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          password_ != null &&
          password_ != io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance()) {
          getPasswordBuilder().mergeFrom(value);
        } else {
          password_ = value;
        }
      } else {
        passwordBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The password to decrypt the TLS private key. If this field is not set, it is assumed that the
     * TLS private key is not password encrypted.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource password = 3 [(.udpa.annotations.sensitive) = true];</code>
     */
    public Builder clearPassword() {
      bitField0_ = (bitField0_ & ~0x00000008);
      password_ = null;
      if (passwordBuilder_ != null) {
        passwordBuilder_.dispose();
        passwordBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The password to decrypt the TLS private key. If this field is not set, it is assumed that the
     * TLS private key is not password encrypted.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource password = 3 [(.udpa.annotations.sensitive) = true];</code>
     */
    public io.envoyproxy.envoy.api.v2.core.DataSource.Builder getPasswordBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getPasswordFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The password to decrypt the TLS private key. If this field is not set, it is assumed that the
     * TLS private key is not password encrypted.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource password = 3 [(.udpa.annotations.sensitive) = true];</code>
     */
    public io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder getPasswordOrBuilder() {
      if (passwordBuilder_ != null) {
        return passwordBuilder_.getMessageOrBuilder();
      } else {
        return password_ == null ?
            io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance() : password_;
      }
    }
    /**
     * <pre>
     * The password to decrypt the TLS private key. If this field is not set, it is assumed that the
     * TLS private key is not password encrypted.
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource password = 3 [(.udpa.annotations.sensitive) = true];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.DataSource, io.envoyproxy.envoy.api.v2.core.DataSource.Builder, io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder> 
        getPasswordFieldBuilder() {
      if (passwordBuilder_ == null) {
        passwordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.api.v2.core.DataSource, io.envoyproxy.envoy.api.v2.core.DataSource.Builder, io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder>(
                getPassword(),
                getParentForChildren(),
                isClean());
        password_ = null;
      }
      return passwordBuilder_;
    }

    private io.envoyproxy.envoy.api.v2.core.DataSource ocspStaple_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.DataSource, io.envoyproxy.envoy.api.v2.core.DataSource.Builder, io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder> ocspStapleBuilder_;
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource ocsp_staple = 4;</code>
     * @return Whether the ocspStaple field is set.
     */
    public boolean hasOcspStaple() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource ocsp_staple = 4;</code>
     * @return The ocspStaple.
     */
    public io.envoyproxy.envoy.api.v2.core.DataSource getOcspStaple() {
      if (ocspStapleBuilder_ == null) {
        return ocspStaple_ == null ? io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance() : ocspStaple_;
      } else {
        return ocspStapleBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource ocsp_staple = 4;</code>
     */
    public Builder setOcspStaple(io.envoyproxy.envoy.api.v2.core.DataSource value) {
      if (ocspStapleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ocspStaple_ = value;
      } else {
        ocspStapleBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource ocsp_staple = 4;</code>
     */
    public Builder setOcspStaple(
        io.envoyproxy.envoy.api.v2.core.DataSource.Builder builderForValue) {
      if (ocspStapleBuilder_ == null) {
        ocspStaple_ = builderForValue.build();
      } else {
        ocspStapleBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource ocsp_staple = 4;</code>
     */
    public Builder mergeOcspStaple(io.envoyproxy.envoy.api.v2.core.DataSource value) {
      if (ocspStapleBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          ocspStaple_ != null &&
          ocspStaple_ != io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance()) {
          getOcspStapleBuilder().mergeFrom(value);
        } else {
          ocspStaple_ = value;
        }
      } else {
        ocspStapleBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource ocsp_staple = 4;</code>
     */
    public Builder clearOcspStaple() {
      bitField0_ = (bitField0_ & ~0x00000010);
      ocspStaple_ = null;
      if (ocspStapleBuilder_ != null) {
        ocspStapleBuilder_.dispose();
        ocspStapleBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource ocsp_staple = 4;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.DataSource.Builder getOcspStapleBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getOcspStapleFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource ocsp_staple = 4;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder getOcspStapleOrBuilder() {
      if (ocspStapleBuilder_ != null) {
        return ocspStapleBuilder_.getMessageOrBuilder();
      } else {
        return ocspStaple_ == null ?
            io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance() : ocspStaple_;
      }
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>.envoy.api.v2.core.DataSource ocsp_staple = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.DataSource, io.envoyproxy.envoy.api.v2.core.DataSource.Builder, io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder> 
        getOcspStapleFieldBuilder() {
      if (ocspStapleBuilder_ == null) {
        ocspStapleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.api.v2.core.DataSource, io.envoyproxy.envoy.api.v2.core.DataSource.Builder, io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder>(
                getOcspStaple(),
                getParentForChildren(),
                isClean());
        ocspStaple_ = null;
      }
      return ocspStapleBuilder_;
    }

    private java.util.List<io.envoyproxy.envoy.api.v2.core.DataSource> signedCertificateTimestamp_ =
      java.util.Collections.emptyList();
    private void ensureSignedCertificateTimestampIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        signedCertificateTimestamp_ = new java.util.ArrayList<io.envoyproxy.envoy.api.v2.core.DataSource>(signedCertificateTimestamp_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.DataSource, io.envoyproxy.envoy.api.v2.core.DataSource.Builder, io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder> signedCertificateTimestampBuilder_;

    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
     */
    public java.util.List<io.envoyproxy.envoy.api.v2.core.DataSource> getSignedCertificateTimestampList() {
      if (signedCertificateTimestampBuilder_ == null) {
        return java.util.Collections.unmodifiableList(signedCertificateTimestamp_);
      } else {
        return signedCertificateTimestampBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
     */
    public int getSignedCertificateTimestampCount() {
      if (signedCertificateTimestampBuilder_ == null) {
        return signedCertificateTimestamp_.size();
      } else {
        return signedCertificateTimestampBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.DataSource getSignedCertificateTimestamp(int index) {
      if (signedCertificateTimestampBuilder_ == null) {
        return signedCertificateTimestamp_.get(index);
      } else {
        return signedCertificateTimestampBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
     */
    public Builder setSignedCertificateTimestamp(
        int index, io.envoyproxy.envoy.api.v2.core.DataSource value) {
      if (signedCertificateTimestampBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSignedCertificateTimestampIsMutable();
        signedCertificateTimestamp_.set(index, value);
        onChanged();
      } else {
        signedCertificateTimestampBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
     */
    public Builder setSignedCertificateTimestamp(
        int index, io.envoyproxy.envoy.api.v2.core.DataSource.Builder builderForValue) {
      if (signedCertificateTimestampBuilder_ == null) {
        ensureSignedCertificateTimestampIsMutable();
        signedCertificateTimestamp_.set(index, builderForValue.build());
        onChanged();
      } else {
        signedCertificateTimestampBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
     */
    public Builder addSignedCertificateTimestamp(io.envoyproxy.envoy.api.v2.core.DataSource value) {
      if (signedCertificateTimestampBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSignedCertificateTimestampIsMutable();
        signedCertificateTimestamp_.add(value);
        onChanged();
      } else {
        signedCertificateTimestampBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
     */
    public Builder addSignedCertificateTimestamp(
        int index, io.envoyproxy.envoy.api.v2.core.DataSource value) {
      if (signedCertificateTimestampBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSignedCertificateTimestampIsMutable();
        signedCertificateTimestamp_.add(index, value);
        onChanged();
      } else {
        signedCertificateTimestampBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
     */
    public Builder addSignedCertificateTimestamp(
        io.envoyproxy.envoy.api.v2.core.DataSource.Builder builderForValue) {
      if (signedCertificateTimestampBuilder_ == null) {
        ensureSignedCertificateTimestampIsMutable();
        signedCertificateTimestamp_.add(builderForValue.build());
        onChanged();
      } else {
        signedCertificateTimestampBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
     */
    public Builder addSignedCertificateTimestamp(
        int index, io.envoyproxy.envoy.api.v2.core.DataSource.Builder builderForValue) {
      if (signedCertificateTimestampBuilder_ == null) {
        ensureSignedCertificateTimestampIsMutable();
        signedCertificateTimestamp_.add(index, builderForValue.build());
        onChanged();
      } else {
        signedCertificateTimestampBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
     */
    public Builder addAllSignedCertificateTimestamp(
        java.lang.Iterable<? extends io.envoyproxy.envoy.api.v2.core.DataSource> values) {
      if (signedCertificateTimestampBuilder_ == null) {
        ensureSignedCertificateTimestampIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, signedCertificateTimestamp_);
        onChanged();
      } else {
        signedCertificateTimestampBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
     */
    public Builder clearSignedCertificateTimestamp() {
      if (signedCertificateTimestampBuilder_ == null) {
        signedCertificateTimestamp_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        signedCertificateTimestampBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
     */
    public Builder removeSignedCertificateTimestamp(int index) {
      if (signedCertificateTimestampBuilder_ == null) {
        ensureSignedCertificateTimestampIsMutable();
        signedCertificateTimestamp_.remove(index);
        onChanged();
      } else {
        signedCertificateTimestampBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.DataSource.Builder getSignedCertificateTimestampBuilder(
        int index) {
      return getSignedCertificateTimestampFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder getSignedCertificateTimestampOrBuilder(
        int index) {
      if (signedCertificateTimestampBuilder_ == null) {
        return signedCertificateTimestamp_.get(index);  } else {
        return signedCertificateTimestampBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder> 
         getSignedCertificateTimestampOrBuilderList() {
      if (signedCertificateTimestampBuilder_ != null) {
        return signedCertificateTimestampBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(signedCertificateTimestamp_);
      }
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.DataSource.Builder addSignedCertificateTimestampBuilder() {
      return getSignedCertificateTimestampFieldBuilder().addBuilder(
          io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance());
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
     */
    public io.envoyproxy.envoy.api.v2.core.DataSource.Builder addSignedCertificateTimestampBuilder(
        int index) {
      return getSignedCertificateTimestampFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.api.v2.core.DataSource.getDefaultInstance());
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
     */
    public java.util.List<io.envoyproxy.envoy.api.v2.core.DataSource.Builder> 
         getSignedCertificateTimestampBuilderList() {
      return getSignedCertificateTimestampFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.core.DataSource, io.envoyproxy.envoy.api.v2.core.DataSource.Builder, io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder> 
        getSignedCertificateTimestampFieldBuilder() {
      if (signedCertificateTimestampBuilder_ == null) {
        signedCertificateTimestampBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.api.v2.core.DataSource, io.envoyproxy.envoy.api.v2.core.DataSource.Builder, io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder>(
                signedCertificateTimestamp_,
                ((bitField0_ & 0x00000020) != 0),
                getParentForChildren(),
                isClean());
        signedCertificateTimestamp_ = null;
      }
      return signedCertificateTimestampBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.api.v2.auth.TlsCertificate)
  }

  // @@protoc_insertion_point(class_scope:envoy.api.v2.auth.TlsCertificate)
  private static final io.envoyproxy.envoy.api.v2.auth.TlsCertificate DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.api.v2.auth.TlsCertificate();
  }

  public static io.envoyproxy.envoy.api.v2.auth.TlsCertificate getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TlsCertificate>
      PARSER = new com.google.protobuf.AbstractParser<TlsCertificate>() {
    @java.lang.Override
    public TlsCertificate parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<TlsCertificate> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TlsCertificate> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.auth.TlsCertificate getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

