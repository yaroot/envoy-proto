// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/api/v2/auth/common.proto

package io.envoyproxy.envoy.api.v2.auth;

public interface TlsCertificateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.api.v2.auth.TlsCertificate)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The TLS certificate chain.
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource certificate_chain = 1;</code>
   * @return Whether the certificateChain field is set.
   */
  boolean hasCertificateChain();
  /**
   * <pre>
   * The TLS certificate chain.
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource certificate_chain = 1;</code>
   * @return The certificateChain.
   */
  io.envoyproxy.envoy.api.v2.core.DataSource getCertificateChain();
  /**
   * <pre>
   * The TLS certificate chain.
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource certificate_chain = 1;</code>
   */
  io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder getCertificateChainOrBuilder();

  /**
   * <pre>
   * The TLS private key.
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource private_key = 2 [(.udpa.annotations.sensitive) = true];</code>
   * @return Whether the privateKey field is set.
   */
  boolean hasPrivateKey();
  /**
   * <pre>
   * The TLS private key.
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource private_key = 2 [(.udpa.annotations.sensitive) = true];</code>
   * @return The privateKey.
   */
  io.envoyproxy.envoy.api.v2.core.DataSource getPrivateKey();
  /**
   * <pre>
   * The TLS private key.
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource private_key = 2 [(.udpa.annotations.sensitive) = true];</code>
   */
  io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder getPrivateKeyOrBuilder();

  /**
   * <pre>
   * BoringSSL private key method provider. This is an alternative to :ref:`private_key
   * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` field. This can't be
   * marked as ``oneof`` due to API compatibility reasons. Setting both :ref:`private_key
   * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` and
   * :ref:`private_key_provider
   * &lt;envoy_api_field_auth.TlsCertificate.private_key_provider&gt;` fields will result in an
   * error.
   * </pre>
   *
   * <code>.envoy.api.v2.auth.PrivateKeyProvider private_key_provider = 6;</code>
   * @return Whether the privateKeyProvider field is set.
   */
  boolean hasPrivateKeyProvider();
  /**
   * <pre>
   * BoringSSL private key method provider. This is an alternative to :ref:`private_key
   * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` field. This can't be
   * marked as ``oneof`` due to API compatibility reasons. Setting both :ref:`private_key
   * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` and
   * :ref:`private_key_provider
   * &lt;envoy_api_field_auth.TlsCertificate.private_key_provider&gt;` fields will result in an
   * error.
   * </pre>
   *
   * <code>.envoy.api.v2.auth.PrivateKeyProvider private_key_provider = 6;</code>
   * @return The privateKeyProvider.
   */
  io.envoyproxy.envoy.api.v2.auth.PrivateKeyProvider getPrivateKeyProvider();
  /**
   * <pre>
   * BoringSSL private key method provider. This is an alternative to :ref:`private_key
   * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` field. This can't be
   * marked as ``oneof`` due to API compatibility reasons. Setting both :ref:`private_key
   * &lt;envoy_api_field_auth.TlsCertificate.private_key&gt;` and
   * :ref:`private_key_provider
   * &lt;envoy_api_field_auth.TlsCertificate.private_key_provider&gt;` fields will result in an
   * error.
   * </pre>
   *
   * <code>.envoy.api.v2.auth.PrivateKeyProvider private_key_provider = 6;</code>
   */
  io.envoyproxy.envoy.api.v2.auth.PrivateKeyProviderOrBuilder getPrivateKeyProviderOrBuilder();

  /**
   * <pre>
   * The password to decrypt the TLS private key. If this field is not set, it is assumed that the
   * TLS private key is not password encrypted.
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource password = 3 [(.udpa.annotations.sensitive) = true];</code>
   * @return Whether the password field is set.
   */
  boolean hasPassword();
  /**
   * <pre>
   * The password to decrypt the TLS private key. If this field is not set, it is assumed that the
   * TLS private key is not password encrypted.
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource password = 3 [(.udpa.annotations.sensitive) = true];</code>
   * @return The password.
   */
  io.envoyproxy.envoy.api.v2.core.DataSource getPassword();
  /**
   * <pre>
   * The password to decrypt the TLS private key. If this field is not set, it is assumed that the
   * TLS private key is not password encrypted.
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource password = 3 [(.udpa.annotations.sensitive) = true];</code>
   */
  io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder getPasswordOrBuilder();

  /**
   * <pre>
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource ocsp_staple = 4;</code>
   * @return Whether the ocspStaple field is set.
   */
  boolean hasOcspStaple();
  /**
   * <pre>
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource ocsp_staple = 4;</code>
   * @return The ocspStaple.
   */
  io.envoyproxy.envoy.api.v2.core.DataSource getOcspStaple();
  /**
   * <pre>
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>.envoy.api.v2.core.DataSource ocsp_staple = 4;</code>
   */
  io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder getOcspStapleOrBuilder();

  /**
   * <pre>
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
   */
  java.util.List<io.envoyproxy.envoy.api.v2.core.DataSource> 
      getSignedCertificateTimestampList();
  /**
   * <pre>
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
   */
  io.envoyproxy.envoy.api.v2.core.DataSource getSignedCertificateTimestamp(int index);
  /**
   * <pre>
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
   */
  int getSignedCertificateTimestampCount();
  /**
   * <pre>
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder> 
      getSignedCertificateTimestampOrBuilderList();
  /**
   * <pre>
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.DataSource signed_certificate_timestamp = 5;</code>
   */
  io.envoyproxy.envoy.api.v2.core.DataSourceOrBuilder getSignedCertificateTimestampOrBuilder(
      int index);
}
