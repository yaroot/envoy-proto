// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/api/v2/endpoint.proto

package io.envoyproxy.envoy.api.v2;

/**
 * <pre>
 * Each route from RDS will map to a single cluster or traffic split across
 * clusters using weights expressed in the RDS WeightedCluster.
 * With EDS, each cluster is treated independently from a LB perspective, with
 * LB taking place between the Localities within a cluster and at a finer
 * granularity between the hosts within a locality. The percentage of traffic
 * for each endpoint is determined by both its load_balancing_weight, and the
 * load_balancing_weight of its locality. First, a locality will be selected,
 * then an endpoint within that locality will be chose based on its weight.
 * [#next-free-field: 6]
 * </pre>
 *
 * Protobuf type {@code envoy.api.v2.ClusterLoadAssignment}
 */
public final class ClusterLoadAssignment extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:envoy.api.v2.ClusterLoadAssignment)
    ClusterLoadAssignmentOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ClusterLoadAssignment.newBuilder() to construct.
  private ClusterLoadAssignment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ClusterLoadAssignment() {
    clusterName_ = "";
    endpoints_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ClusterLoadAssignment();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.envoyproxy.envoy.api.v2.EndpointProto.internal_static_envoy_api_v2_ClusterLoadAssignment_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 5:
        return internalGetNamedEndpoints();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.envoyproxy.envoy.api.v2.EndpointProto.internal_static_envoy_api_v2_ClusterLoadAssignment_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.class, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Builder.class);
  }

  public interface PolicyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:envoy.api.v2.ClusterLoadAssignment.Policy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Action to trim the overall incoming traffic to protect the upstream
     * hosts. This action allows protection in case the hosts are unable to
     * recover from an outage, or unable to autoscale or unable to handle
     * incoming traffic volume for any reason.
     * At the client each category is applied one after the other to generate
     * the 'actual' drop percentage on all outgoing traffic. For example:
     * .. code-block:: json
     *  { "drop_overloads": [
     *      { "category": "throttle", "drop_percentage": 60 }
     *      { "category": "lb", "drop_percentage": 50 }
     *  ]}
     * The actual drop percentages applied to the traffic at the clients will be
     *    "throttle"_drop = 60%
     *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
     *    actual_outgoing_load = 20% // remaining after applying all categories.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
     */
    java.util.List<io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload> 
        getDropOverloadsList();
    /**
     * <pre>
     * Action to trim the overall incoming traffic to protect the upstream
     * hosts. This action allows protection in case the hosts are unable to
     * recover from an outage, or unable to autoscale or unable to handle
     * incoming traffic volume for any reason.
     * At the client each category is applied one after the other to generate
     * the 'actual' drop percentage on all outgoing traffic. For example:
     * .. code-block:: json
     *  { "drop_overloads": [
     *      { "category": "throttle", "drop_percentage": 60 }
     *      { "category": "lb", "drop_percentage": 50 }
     *  ]}
     * The actual drop percentages applied to the traffic at the clients will be
     *    "throttle"_drop = 60%
     *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
     *    actual_outgoing_load = 20% // remaining after applying all categories.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
     */
    io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload getDropOverloads(int index);
    /**
     * <pre>
     * Action to trim the overall incoming traffic to protect the upstream
     * hosts. This action allows protection in case the hosts are unable to
     * recover from an outage, or unable to autoscale or unable to handle
     * incoming traffic volume for any reason.
     * At the client each category is applied one after the other to generate
     * the 'actual' drop percentage on all outgoing traffic. For example:
     * .. code-block:: json
     *  { "drop_overloads": [
     *      { "category": "throttle", "drop_percentage": 60 }
     *      { "category": "lb", "drop_percentage": 50 }
     *  ]}
     * The actual drop percentages applied to the traffic at the clients will be
     *    "throttle"_drop = 60%
     *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
     *    actual_outgoing_load = 20% // remaining after applying all categories.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
     */
    int getDropOverloadsCount();
    /**
     * <pre>
     * Action to trim the overall incoming traffic to protect the upstream
     * hosts. This action allows protection in case the hosts are unable to
     * recover from an outage, or unable to autoscale or unable to handle
     * incoming traffic volume for any reason.
     * At the client each category is applied one after the other to generate
     * the 'actual' drop percentage on all outgoing traffic. For example:
     * .. code-block:: json
     *  { "drop_overloads": [
     *      { "category": "throttle", "drop_percentage": 60 }
     *      { "category": "lb", "drop_percentage": 50 }
     *  ]}
     * The actual drop percentages applied to the traffic at the clients will be
     *    "throttle"_drop = 60%
     *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
     *    actual_outgoing_load = 20% // remaining after applying all categories.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
     */
    java.util.List<? extends io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverloadOrBuilder> 
        getDropOverloadsOrBuilderList();
    /**
     * <pre>
     * Action to trim the overall incoming traffic to protect the upstream
     * hosts. This action allows protection in case the hosts are unable to
     * recover from an outage, or unable to autoscale or unable to handle
     * incoming traffic volume for any reason.
     * At the client each category is applied one after the other to generate
     * the 'actual' drop percentage on all outgoing traffic. For example:
     * .. code-block:: json
     *  { "drop_overloads": [
     *      { "category": "throttle", "drop_percentage": 60 }
     *      { "category": "lb", "drop_percentage": 50 }
     *  ]}
     * The actual drop percentages applied to the traffic at the clients will be
     *    "throttle"_drop = 60%
     *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
     *    actual_outgoing_load = 20% // remaining after applying all categories.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
     */
    io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverloadOrBuilder getDropOverloadsOrBuilder(
        int index);

    /**
     * <pre>
     * Priority levels and localities are considered overprovisioned with this
     * factor (in percentage). This means that we don't consider a priority
     * level or locality unhealthy until the percentage of healthy hosts
     * multiplied by the overprovisioning factor drops below 100.
     * With the default value 140(1.4), Envoy doesn't consider a priority level
     * or a locality unhealthy until their percentage of healthy hosts drops
     * below 72%. For example:
     * .. code-block:: json
     *  { "overprovisioning_factor": 100 }
     * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
     * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
     * @return Whether the overprovisioningFactor field is set.
     */
    boolean hasOverprovisioningFactor();
    /**
     * <pre>
     * Priority levels and localities are considered overprovisioned with this
     * factor (in percentage). This means that we don't consider a priority
     * level or locality unhealthy until the percentage of healthy hosts
     * multiplied by the overprovisioning factor drops below 100.
     * With the default value 140(1.4), Envoy doesn't consider a priority level
     * or a locality unhealthy until their percentage of healthy hosts drops
     * below 72%. For example:
     * .. code-block:: json
     *  { "overprovisioning_factor": 100 }
     * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
     * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
     * @return The overprovisioningFactor.
     */
    com.google.protobuf.UInt32Value getOverprovisioningFactor();
    /**
     * <pre>
     * Priority levels and localities are considered overprovisioned with this
     * factor (in percentage). This means that we don't consider a priority
     * level or locality unhealthy until the percentage of healthy hosts
     * multiplied by the overprovisioning factor drops below 100.
     * With the default value 140(1.4), Envoy doesn't consider a priority level
     * or a locality unhealthy until their percentage of healthy hosts drops
     * below 72%. For example:
     * .. code-block:: json
     *  { "overprovisioning_factor": 100 }
     * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
     * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
     */
    com.google.protobuf.UInt32ValueOrBuilder getOverprovisioningFactorOrBuilder();

    /**
     * <pre>
     * The max time until which the endpoints from this assignment can be used.
     * If no new assignments are received before this time expires the endpoints
     * are considered stale and should be marked unhealthy.
     * Defaults to 0 which means endpoints never go stale.
     * </pre>
     *
     * <code>.google.protobuf.Duration endpoint_stale_after = 4 [(.validate.rules) = { ... }</code>
     * @return Whether the endpointStaleAfter field is set.
     */
    boolean hasEndpointStaleAfter();
    /**
     * <pre>
     * The max time until which the endpoints from this assignment can be used.
     * If no new assignments are received before this time expires the endpoints
     * are considered stale and should be marked unhealthy.
     * Defaults to 0 which means endpoints never go stale.
     * </pre>
     *
     * <code>.google.protobuf.Duration endpoint_stale_after = 4 [(.validate.rules) = { ... }</code>
     * @return The endpointStaleAfter.
     */
    com.google.protobuf.Duration getEndpointStaleAfter();
    /**
     * <pre>
     * The max time until which the endpoints from this assignment can be used.
     * If no new assignments are received before this time expires the endpoints
     * are considered stale and should be marked unhealthy.
     * Defaults to 0 which means endpoints never go stale.
     * </pre>
     *
     * <code>.google.protobuf.Duration endpoint_stale_after = 4 [(.validate.rules) = { ... }</code>
     */
    com.google.protobuf.DurationOrBuilder getEndpointStaleAfterOrBuilder();

    /**
     * <pre>
     * The flag to disable overprovisioning. If it is set to true,
     * :ref:`overprovisioning factor
     * &lt;arch_overview_load_balancing_overprovisioning_factor&gt;` will be ignored
     * and Envoy will not perform graceful failover between priority levels or
     * localities as endpoints become unhealthy. Otherwise Envoy will perform
     * graceful failover as :ref:`overprovisioning factor
     * &lt;arch_overview_load_balancing_overprovisioning_factor&gt;` suggests.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>bool disable_overprovisioning = 5 [deprecated = true];</code>
     * @deprecated envoy.api.v2.ClusterLoadAssignment.Policy.disable_overprovisioning is deprecated.
     *     See envoy/api/v2/endpoint.proto;l=101
     * @return The disableOverprovisioning.
     */
    @java.lang.Deprecated boolean getDisableOverprovisioning();
  }
  /**
   * <pre>
   * Load balancing policy settings.
   * [#next-free-field: 6]
   * </pre>
   *
   * Protobuf type {@code envoy.api.v2.ClusterLoadAssignment.Policy}
   */
  public static final class Policy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:envoy.api.v2.ClusterLoadAssignment.Policy)
      PolicyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Policy.newBuilder() to construct.
    private Policy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Policy() {
      dropOverloads_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Policy();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.api.v2.EndpointProto.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.api.v2.EndpointProto.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.class, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.Builder.class);
    }

    public interface DropOverloadOrBuilder extends
        // @@protoc_insertion_point(interface_extends:envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Identifier for the policy specifying the drop.
       * </pre>
       *
       * <code>string category = 1 [(.validate.rules) = { ... }</code>
       * @return The category.
       */
      java.lang.String getCategory();
      /**
       * <pre>
       * Identifier for the policy specifying the drop.
       * </pre>
       *
       * <code>string category = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for category.
       */
      com.google.protobuf.ByteString
          getCategoryBytes();

      /**
       * <pre>
       * Percentage of traffic that should be dropped for the category.
       * </pre>
       *
       * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
       * @return Whether the dropPercentage field is set.
       */
      boolean hasDropPercentage();
      /**
       * <pre>
       * Percentage of traffic that should be dropped for the category.
       * </pre>
       *
       * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
       * @return The dropPercentage.
       */
      io.envoyproxy.envoy.type.FractionalPercent getDropPercentage();
      /**
       * <pre>
       * Percentage of traffic that should be dropped for the category.
       * </pre>
       *
       * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
       */
      io.envoyproxy.envoy.type.FractionalPercentOrBuilder getDropPercentageOrBuilder();
    }
    /**
     * <pre>
     * [#not-implemented-hide:]
     * </pre>
     *
     * Protobuf type {@code envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload}
     */
    public static final class DropOverload extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload)
        DropOverloadOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DropOverload.newBuilder() to construct.
      private DropOverload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DropOverload() {
        category_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new DropOverload();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.api.v2.EndpointProto.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_DropOverload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.api.v2.EndpointProto.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_DropOverload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.class, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.Builder.class);
      }

      public static final int CATEGORY_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object category_ = "";
      /**
       * <pre>
       * Identifier for the policy specifying the drop.
       * </pre>
       *
       * <code>string category = 1 [(.validate.rules) = { ... }</code>
       * @return The category.
       */
      @java.lang.Override
      public java.lang.String getCategory() {
        java.lang.Object ref = category_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          category_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Identifier for the policy specifying the drop.
       * </pre>
       *
       * <code>string category = 1 [(.validate.rules) = { ... }</code>
       * @return The bytes for category.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getCategoryBytes() {
        java.lang.Object ref = category_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          category_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DROP_PERCENTAGE_FIELD_NUMBER = 2;
      private io.envoyproxy.envoy.type.FractionalPercent dropPercentage_;
      /**
       * <pre>
       * Percentage of traffic that should be dropped for the category.
       * </pre>
       *
       * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
       * @return Whether the dropPercentage field is set.
       */
      @java.lang.Override
      public boolean hasDropPercentage() {
        return dropPercentage_ != null;
      }
      /**
       * <pre>
       * Percentage of traffic that should be dropped for the category.
       * </pre>
       *
       * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
       * @return The dropPercentage.
       */
      @java.lang.Override
      public io.envoyproxy.envoy.type.FractionalPercent getDropPercentage() {
        return dropPercentage_ == null ? io.envoyproxy.envoy.type.FractionalPercent.getDefaultInstance() : dropPercentage_;
      }
      /**
       * <pre>
       * Percentage of traffic that should be dropped for the category.
       * </pre>
       *
       * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
       */
      @java.lang.Override
      public io.envoyproxy.envoy.type.FractionalPercentOrBuilder getDropPercentageOrBuilder() {
        return dropPercentage_ == null ? io.envoyproxy.envoy.type.FractionalPercent.getDefaultInstance() : dropPercentage_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(category_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, category_);
        }
        if (dropPercentage_ != null) {
          output.writeMessage(2, getDropPercentage());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(category_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, category_);
        }
        if (dropPercentage_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getDropPercentage());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload)) {
          return super.equals(obj);
        }
        io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload other = (io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload) obj;

        if (!getCategory()
            .equals(other.getCategory())) return false;
        if (hasDropPercentage() != other.hasDropPercentage()) return false;
        if (hasDropPercentage()) {
          if (!getDropPercentage()
              .equals(other.getDropPercentage())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + CATEGORY_FIELD_NUMBER;
        hash = (53 * hash) + getCategory().hashCode();
        if (hasDropPercentage()) {
          hash = (37 * hash) + DROP_PERCENTAGE_FIELD_NUMBER;
          hash = (53 * hash) + getDropPercentage().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * [#not-implemented-hide:]
       * </pre>
       *
       * Protobuf type {@code envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload)
          io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverloadOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.envoyproxy.envoy.api.v2.EndpointProto.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_DropOverload_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.envoyproxy.envoy.api.v2.EndpointProto.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_DropOverload_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.class, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.Builder.class);
        }

        // Construct using io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          category_ = "";
          dropPercentage_ = null;
          if (dropPercentageBuilder_ != null) {
            dropPercentageBuilder_.dispose();
            dropPercentageBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.envoyproxy.envoy.api.v2.EndpointProto.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_DropOverload_descriptor;
        }

        @java.lang.Override
        public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload getDefaultInstanceForType() {
          return io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.getDefaultInstance();
        }

        @java.lang.Override
        public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload build() {
          io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload buildPartial() {
          io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload result = new io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.category_ = category_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.dropPercentage_ = dropPercentageBuilder_ == null
                ? dropPercentage_
                : dropPercentageBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload) {
            return mergeFrom((io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload other) {
          if (other == io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.getDefaultInstance()) return this;
          if (!other.getCategory().isEmpty()) {
            category_ = other.category_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (other.hasDropPercentage()) {
            mergeDropPercentage(other.getDropPercentage());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  category_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  input.readMessage(
                      getDropPercentageFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object category_ = "";
        /**
         * <pre>
         * Identifier for the policy specifying the drop.
         * </pre>
         *
         * <code>string category = 1 [(.validate.rules) = { ... }</code>
         * @return The category.
         */
        public java.lang.String getCategory() {
          java.lang.Object ref = category_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            category_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Identifier for the policy specifying the drop.
         * </pre>
         *
         * <code>string category = 1 [(.validate.rules) = { ... }</code>
         * @return The bytes for category.
         */
        public com.google.protobuf.ByteString
            getCategoryBytes() {
          java.lang.Object ref = category_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            category_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Identifier for the policy specifying the drop.
         * </pre>
         *
         * <code>string category = 1 [(.validate.rules) = { ... }</code>
         * @param value The category to set.
         * @return This builder for chaining.
         */
        public Builder setCategory(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          category_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Identifier for the policy specifying the drop.
         * </pre>
         *
         * <code>string category = 1 [(.validate.rules) = { ... }</code>
         * @return This builder for chaining.
         */
        public Builder clearCategory() {
          category_ = getDefaultInstance().getCategory();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Identifier for the policy specifying the drop.
         * </pre>
         *
         * <code>string category = 1 [(.validate.rules) = { ... }</code>
         * @param value The bytes for category to set.
         * @return This builder for chaining.
         */
        public Builder setCategoryBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          category_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private io.envoyproxy.envoy.type.FractionalPercent dropPercentage_;
        private com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.FractionalPercent, io.envoyproxy.envoy.type.FractionalPercent.Builder, io.envoyproxy.envoy.type.FractionalPercentOrBuilder> dropPercentageBuilder_;
        /**
         * <pre>
         * Percentage of traffic that should be dropped for the category.
         * </pre>
         *
         * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
         * @return Whether the dropPercentage field is set.
         */
        public boolean hasDropPercentage() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Percentage of traffic that should be dropped for the category.
         * </pre>
         *
         * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
         * @return The dropPercentage.
         */
        public io.envoyproxy.envoy.type.FractionalPercent getDropPercentage() {
          if (dropPercentageBuilder_ == null) {
            return dropPercentage_ == null ? io.envoyproxy.envoy.type.FractionalPercent.getDefaultInstance() : dropPercentage_;
          } else {
            return dropPercentageBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Percentage of traffic that should be dropped for the category.
         * </pre>
         *
         * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
         */
        public Builder setDropPercentage(io.envoyproxy.envoy.type.FractionalPercent value) {
          if (dropPercentageBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            dropPercentage_ = value;
          } else {
            dropPercentageBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Percentage of traffic that should be dropped for the category.
         * </pre>
         *
         * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
         */
        public Builder setDropPercentage(
            io.envoyproxy.envoy.type.FractionalPercent.Builder builderForValue) {
          if (dropPercentageBuilder_ == null) {
            dropPercentage_ = builderForValue.build();
          } else {
            dropPercentageBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Percentage of traffic that should be dropped for the category.
         * </pre>
         *
         * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
         */
        public Builder mergeDropPercentage(io.envoyproxy.envoy.type.FractionalPercent value) {
          if (dropPercentageBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0) &&
              dropPercentage_ != null &&
              dropPercentage_ != io.envoyproxy.envoy.type.FractionalPercent.getDefaultInstance()) {
              getDropPercentageBuilder().mergeFrom(value);
            } else {
              dropPercentage_ = value;
            }
          } else {
            dropPercentageBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Percentage of traffic that should be dropped for the category.
         * </pre>
         *
         * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
         */
        public Builder clearDropPercentage() {
          bitField0_ = (bitField0_ & ~0x00000002);
          dropPercentage_ = null;
          if (dropPercentageBuilder_ != null) {
            dropPercentageBuilder_.dispose();
            dropPercentageBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Percentage of traffic that should be dropped for the category.
         * </pre>
         *
         * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
         */
        public io.envoyproxy.envoy.type.FractionalPercent.Builder getDropPercentageBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getDropPercentageFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Percentage of traffic that should be dropped for the category.
         * </pre>
         *
         * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
         */
        public io.envoyproxy.envoy.type.FractionalPercentOrBuilder getDropPercentageOrBuilder() {
          if (dropPercentageBuilder_ != null) {
            return dropPercentageBuilder_.getMessageOrBuilder();
          } else {
            return dropPercentage_ == null ?
                io.envoyproxy.envoy.type.FractionalPercent.getDefaultInstance() : dropPercentage_;
          }
        }
        /**
         * <pre>
         * Percentage of traffic that should be dropped for the category.
         * </pre>
         *
         * <code>.envoy.type.FractionalPercent drop_percentage = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.type.FractionalPercent, io.envoyproxy.envoy.type.FractionalPercent.Builder, io.envoyproxy.envoy.type.FractionalPercentOrBuilder> 
            getDropPercentageFieldBuilder() {
          if (dropPercentageBuilder_ == null) {
            dropPercentageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                io.envoyproxy.envoy.type.FractionalPercent, io.envoyproxy.envoy.type.FractionalPercent.Builder, io.envoyproxy.envoy.type.FractionalPercentOrBuilder>(
                    getDropPercentage(),
                    getParentForChildren(),
                    isClean());
            dropPercentage_ = null;
          }
          return dropPercentageBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload)
      }

      // @@protoc_insertion_point(class_scope:envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload)
      private static final io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload();
      }

      public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<DropOverload>
          PARSER = new com.google.protobuf.AbstractParser<DropOverload>() {
        @java.lang.Override
        public DropOverload parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<DropOverload> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DropOverload> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int DROP_OVERLOADS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload> dropOverloads_;
    /**
     * <pre>
     * Action to trim the overall incoming traffic to protect the upstream
     * hosts. This action allows protection in case the hosts are unable to
     * recover from an outage, or unable to autoscale or unable to handle
     * incoming traffic volume for any reason.
     * At the client each category is applied one after the other to generate
     * the 'actual' drop percentage on all outgoing traffic. For example:
     * .. code-block:: json
     *  { "drop_overloads": [
     *      { "category": "throttle", "drop_percentage": 60 }
     *      { "category": "lb", "drop_percentage": 50 }
     *  ]}
     * The actual drop percentages applied to the traffic at the clients will be
     *    "throttle"_drop = 60%
     *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
     *    actual_outgoing_load = 20% // remaining after applying all categories.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
     */
    @java.lang.Override
    public java.util.List<io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload> getDropOverloadsList() {
      return dropOverloads_;
    }
    /**
     * <pre>
     * Action to trim the overall incoming traffic to protect the upstream
     * hosts. This action allows protection in case the hosts are unable to
     * recover from an outage, or unable to autoscale or unable to handle
     * incoming traffic volume for any reason.
     * At the client each category is applied one after the other to generate
     * the 'actual' drop percentage on all outgoing traffic. For example:
     * .. code-block:: json
     *  { "drop_overloads": [
     *      { "category": "throttle", "drop_percentage": 60 }
     *      { "category": "lb", "drop_percentage": 50 }
     *  ]}
     * The actual drop percentages applied to the traffic at the clients will be
     *    "throttle"_drop = 60%
     *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
     *    actual_outgoing_load = 20% // remaining after applying all categories.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverloadOrBuilder> 
        getDropOverloadsOrBuilderList() {
      return dropOverloads_;
    }
    /**
     * <pre>
     * Action to trim the overall incoming traffic to protect the upstream
     * hosts. This action allows protection in case the hosts are unable to
     * recover from an outage, or unable to autoscale or unable to handle
     * incoming traffic volume for any reason.
     * At the client each category is applied one after the other to generate
     * the 'actual' drop percentage on all outgoing traffic. For example:
     * .. code-block:: json
     *  { "drop_overloads": [
     *      { "category": "throttle", "drop_percentage": 60 }
     *      { "category": "lb", "drop_percentage": 50 }
     *  ]}
     * The actual drop percentages applied to the traffic at the clients will be
     *    "throttle"_drop = 60%
     *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
     *    actual_outgoing_load = 20% // remaining after applying all categories.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
     */
    @java.lang.Override
    public int getDropOverloadsCount() {
      return dropOverloads_.size();
    }
    /**
     * <pre>
     * Action to trim the overall incoming traffic to protect the upstream
     * hosts. This action allows protection in case the hosts are unable to
     * recover from an outage, or unable to autoscale or unable to handle
     * incoming traffic volume for any reason.
     * At the client each category is applied one after the other to generate
     * the 'actual' drop percentage on all outgoing traffic. For example:
     * .. code-block:: json
     *  { "drop_overloads": [
     *      { "category": "throttle", "drop_percentage": 60 }
     *      { "category": "lb", "drop_percentage": 50 }
     *  ]}
     * The actual drop percentages applied to the traffic at the clients will be
     *    "throttle"_drop = 60%
     *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
     *    actual_outgoing_load = 20% // remaining after applying all categories.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload getDropOverloads(int index) {
      return dropOverloads_.get(index);
    }
    /**
     * <pre>
     * Action to trim the overall incoming traffic to protect the upstream
     * hosts. This action allows protection in case the hosts are unable to
     * recover from an outage, or unable to autoscale or unable to handle
     * incoming traffic volume for any reason.
     * At the client each category is applied one after the other to generate
     * the 'actual' drop percentage on all outgoing traffic. For example:
     * .. code-block:: json
     *  { "drop_overloads": [
     *      { "category": "throttle", "drop_percentage": 60 }
     *      { "category": "lb", "drop_percentage": 50 }
     *  ]}
     * The actual drop percentages applied to the traffic at the clients will be
     *    "throttle"_drop = 60%
     *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
     *    actual_outgoing_load = 20% // remaining after applying all categories.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverloadOrBuilder getDropOverloadsOrBuilder(
        int index) {
      return dropOverloads_.get(index);
    }

    public static final int OVERPROVISIONING_FACTOR_FIELD_NUMBER = 3;
    private com.google.protobuf.UInt32Value overprovisioningFactor_;
    /**
     * <pre>
     * Priority levels and localities are considered overprovisioned with this
     * factor (in percentage). This means that we don't consider a priority
     * level or locality unhealthy until the percentage of healthy hosts
     * multiplied by the overprovisioning factor drops below 100.
     * With the default value 140(1.4), Envoy doesn't consider a priority level
     * or a locality unhealthy until their percentage of healthy hosts drops
     * below 72%. For example:
     * .. code-block:: json
     *  { "overprovisioning_factor": 100 }
     * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
     * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
     * @return Whether the overprovisioningFactor field is set.
     */
    @java.lang.Override
    public boolean hasOverprovisioningFactor() {
      return overprovisioningFactor_ != null;
    }
    /**
     * <pre>
     * Priority levels and localities are considered overprovisioned with this
     * factor (in percentage). This means that we don't consider a priority
     * level or locality unhealthy until the percentage of healthy hosts
     * multiplied by the overprovisioning factor drops below 100.
     * With the default value 140(1.4), Envoy doesn't consider a priority level
     * or a locality unhealthy until their percentage of healthy hosts drops
     * below 72%. For example:
     * .. code-block:: json
     *  { "overprovisioning_factor": 100 }
     * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
     * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
     * @return The overprovisioningFactor.
     */
    @java.lang.Override
    public com.google.protobuf.UInt32Value getOverprovisioningFactor() {
      return overprovisioningFactor_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : overprovisioningFactor_;
    }
    /**
     * <pre>
     * Priority levels and localities are considered overprovisioned with this
     * factor (in percentage). This means that we don't consider a priority
     * level or locality unhealthy until the percentage of healthy hosts
     * multiplied by the overprovisioning factor drops below 100.
     * With the default value 140(1.4), Envoy doesn't consider a priority level
     * or a locality unhealthy until their percentage of healthy hosts drops
     * below 72%. For example:
     * .. code-block:: json
     *  { "overprovisioning_factor": 100 }
     * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
     * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
     * </pre>
     *
     * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
     */
    @java.lang.Override
    public com.google.protobuf.UInt32ValueOrBuilder getOverprovisioningFactorOrBuilder() {
      return overprovisioningFactor_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : overprovisioningFactor_;
    }

    public static final int ENDPOINT_STALE_AFTER_FIELD_NUMBER = 4;
    private com.google.protobuf.Duration endpointStaleAfter_;
    /**
     * <pre>
     * The max time until which the endpoints from this assignment can be used.
     * If no new assignments are received before this time expires the endpoints
     * are considered stale and should be marked unhealthy.
     * Defaults to 0 which means endpoints never go stale.
     * </pre>
     *
     * <code>.google.protobuf.Duration endpoint_stale_after = 4 [(.validate.rules) = { ... }</code>
     * @return Whether the endpointStaleAfter field is set.
     */
    @java.lang.Override
    public boolean hasEndpointStaleAfter() {
      return endpointStaleAfter_ != null;
    }
    /**
     * <pre>
     * The max time until which the endpoints from this assignment can be used.
     * If no new assignments are received before this time expires the endpoints
     * are considered stale and should be marked unhealthy.
     * Defaults to 0 which means endpoints never go stale.
     * </pre>
     *
     * <code>.google.protobuf.Duration endpoint_stale_after = 4 [(.validate.rules) = { ... }</code>
     * @return The endpointStaleAfter.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getEndpointStaleAfter() {
      return endpointStaleAfter_ == null ? com.google.protobuf.Duration.getDefaultInstance() : endpointStaleAfter_;
    }
    /**
     * <pre>
     * The max time until which the endpoints from this assignment can be used.
     * If no new assignments are received before this time expires the endpoints
     * are considered stale and should be marked unhealthy.
     * Defaults to 0 which means endpoints never go stale.
     * </pre>
     *
     * <code>.google.protobuf.Duration endpoint_stale_after = 4 [(.validate.rules) = { ... }</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getEndpointStaleAfterOrBuilder() {
      return endpointStaleAfter_ == null ? com.google.protobuf.Duration.getDefaultInstance() : endpointStaleAfter_;
    }

    public static final int DISABLE_OVERPROVISIONING_FIELD_NUMBER = 5;
    private boolean disableOverprovisioning_ = false;
    /**
     * <pre>
     * The flag to disable overprovisioning. If it is set to true,
     * :ref:`overprovisioning factor
     * &lt;arch_overview_load_balancing_overprovisioning_factor&gt;` will be ignored
     * and Envoy will not perform graceful failover between priority levels or
     * localities as endpoints become unhealthy. Otherwise Envoy will perform
     * graceful failover as :ref:`overprovisioning factor
     * &lt;arch_overview_load_balancing_overprovisioning_factor&gt;` suggests.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>bool disable_overprovisioning = 5 [deprecated = true];</code>
     * @deprecated envoy.api.v2.ClusterLoadAssignment.Policy.disable_overprovisioning is deprecated.
     *     See envoy/api/v2/endpoint.proto;l=101
     * @return The disableOverprovisioning.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean getDisableOverprovisioning() {
      return disableOverprovisioning_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < dropOverloads_.size(); i++) {
        output.writeMessage(2, dropOverloads_.get(i));
      }
      if (overprovisioningFactor_ != null) {
        output.writeMessage(3, getOverprovisioningFactor());
      }
      if (endpointStaleAfter_ != null) {
        output.writeMessage(4, getEndpointStaleAfter());
      }
      if (disableOverprovisioning_ != false) {
        output.writeBool(5, disableOverprovisioning_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < dropOverloads_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, dropOverloads_.get(i));
      }
      if (overprovisioningFactor_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getOverprovisioningFactor());
      }
      if (endpointStaleAfter_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getEndpointStaleAfter());
      }
      if (disableOverprovisioning_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, disableOverprovisioning_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy)) {
        return super.equals(obj);
      }
      io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy other = (io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy) obj;

      if (!getDropOverloadsList()
          .equals(other.getDropOverloadsList())) return false;
      if (hasOverprovisioningFactor() != other.hasOverprovisioningFactor()) return false;
      if (hasOverprovisioningFactor()) {
        if (!getOverprovisioningFactor()
            .equals(other.getOverprovisioningFactor())) return false;
      }
      if (hasEndpointStaleAfter() != other.hasEndpointStaleAfter()) return false;
      if (hasEndpointStaleAfter()) {
        if (!getEndpointStaleAfter()
            .equals(other.getEndpointStaleAfter())) return false;
      }
      if (getDisableOverprovisioning()
          != other.getDisableOverprovisioning()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDropOverloadsCount() > 0) {
        hash = (37 * hash) + DROP_OVERLOADS_FIELD_NUMBER;
        hash = (53 * hash) + getDropOverloadsList().hashCode();
      }
      if (hasOverprovisioningFactor()) {
        hash = (37 * hash) + OVERPROVISIONING_FACTOR_FIELD_NUMBER;
        hash = (53 * hash) + getOverprovisioningFactor().hashCode();
      }
      if (hasEndpointStaleAfter()) {
        hash = (37 * hash) + ENDPOINT_STALE_AFTER_FIELD_NUMBER;
        hash = (53 * hash) + getEndpointStaleAfter().hashCode();
      }
      hash = (37 * hash) + DISABLE_OVERPROVISIONING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDisableOverprovisioning());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Load balancing policy settings.
     * [#next-free-field: 6]
     * </pre>
     *
     * Protobuf type {@code envoy.api.v2.ClusterLoadAssignment.Policy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:envoy.api.v2.ClusterLoadAssignment.Policy)
        io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.PolicyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.envoyproxy.envoy.api.v2.EndpointProto.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.envoyproxy.envoy.api.v2.EndpointProto.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.class, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.Builder.class);
      }

      // Construct using io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (dropOverloadsBuilder_ == null) {
          dropOverloads_ = java.util.Collections.emptyList();
        } else {
          dropOverloads_ = null;
          dropOverloadsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        overprovisioningFactor_ = null;
        if (overprovisioningFactorBuilder_ != null) {
          overprovisioningFactorBuilder_.dispose();
          overprovisioningFactorBuilder_ = null;
        }
        endpointStaleAfter_ = null;
        if (endpointStaleAfterBuilder_ != null) {
          endpointStaleAfterBuilder_.dispose();
          endpointStaleAfterBuilder_ = null;
        }
        disableOverprovisioning_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.envoyproxy.envoy.api.v2.EndpointProto.internal_static_envoy_api_v2_ClusterLoadAssignment_Policy_descriptor;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy getDefaultInstanceForType() {
        return io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.getDefaultInstance();
      }

      @java.lang.Override
      public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy build() {
        io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy buildPartial() {
        io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy result = new io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy result) {
        if (dropOverloadsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            dropOverloads_ = java.util.Collections.unmodifiableList(dropOverloads_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.dropOverloads_ = dropOverloads_;
        } else {
          result.dropOverloads_ = dropOverloadsBuilder_.build();
        }
      }

      private void buildPartial0(io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.overprovisioningFactor_ = overprovisioningFactorBuilder_ == null
              ? overprovisioningFactor_
              : overprovisioningFactorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.endpointStaleAfter_ = endpointStaleAfterBuilder_ == null
              ? endpointStaleAfter_
              : endpointStaleAfterBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.disableOverprovisioning_ = disableOverprovisioning_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy) {
          return mergeFrom((io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy other) {
        if (other == io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.getDefaultInstance()) return this;
        if (dropOverloadsBuilder_ == null) {
          if (!other.dropOverloads_.isEmpty()) {
            if (dropOverloads_.isEmpty()) {
              dropOverloads_ = other.dropOverloads_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDropOverloadsIsMutable();
              dropOverloads_.addAll(other.dropOverloads_);
            }
            onChanged();
          }
        } else {
          if (!other.dropOverloads_.isEmpty()) {
            if (dropOverloadsBuilder_.isEmpty()) {
              dropOverloadsBuilder_.dispose();
              dropOverloadsBuilder_ = null;
              dropOverloads_ = other.dropOverloads_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dropOverloadsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDropOverloadsFieldBuilder() : null;
            } else {
              dropOverloadsBuilder_.addAllMessages(other.dropOverloads_);
            }
          }
        }
        if (other.hasOverprovisioningFactor()) {
          mergeOverprovisioningFactor(other.getOverprovisioningFactor());
        }
        if (other.hasEndpointStaleAfter()) {
          mergeEndpointStaleAfter(other.getEndpointStaleAfter());
        }
        if (other.getDisableOverprovisioning() != false) {
          setDisableOverprovisioning(other.getDisableOverprovisioning());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 18: {
                io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload m =
                    input.readMessage(
                        io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.parser(),
                        extensionRegistry);
                if (dropOverloadsBuilder_ == null) {
                  ensureDropOverloadsIsMutable();
                  dropOverloads_.add(m);
                } else {
                  dropOverloadsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getOverprovisioningFactorFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getEndpointStaleAfterFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 34
              case 40: {
                disableOverprovisioning_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload> dropOverloads_ =
        java.util.Collections.emptyList();
      private void ensureDropOverloadsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dropOverloads_ = new java.util.ArrayList<io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload>(dropOverloads_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.Builder, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverloadOrBuilder> dropOverloadsBuilder_;

      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public java.util.List<io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload> getDropOverloadsList() {
        if (dropOverloadsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dropOverloads_);
        } else {
          return dropOverloadsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public int getDropOverloadsCount() {
        if (dropOverloadsBuilder_ == null) {
          return dropOverloads_.size();
        } else {
          return dropOverloadsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload getDropOverloads(int index) {
        if (dropOverloadsBuilder_ == null) {
          return dropOverloads_.get(index);
        } else {
          return dropOverloadsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public Builder setDropOverloads(
          int index, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload value) {
        if (dropOverloadsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDropOverloadsIsMutable();
          dropOverloads_.set(index, value);
          onChanged();
        } else {
          dropOverloadsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public Builder setDropOverloads(
          int index, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.Builder builderForValue) {
        if (dropOverloadsBuilder_ == null) {
          ensureDropOverloadsIsMutable();
          dropOverloads_.set(index, builderForValue.build());
          onChanged();
        } else {
          dropOverloadsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public Builder addDropOverloads(io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload value) {
        if (dropOverloadsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDropOverloadsIsMutable();
          dropOverloads_.add(value);
          onChanged();
        } else {
          dropOverloadsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public Builder addDropOverloads(
          int index, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload value) {
        if (dropOverloadsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDropOverloadsIsMutable();
          dropOverloads_.add(index, value);
          onChanged();
        } else {
          dropOverloadsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public Builder addDropOverloads(
          io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.Builder builderForValue) {
        if (dropOverloadsBuilder_ == null) {
          ensureDropOverloadsIsMutable();
          dropOverloads_.add(builderForValue.build());
          onChanged();
        } else {
          dropOverloadsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public Builder addDropOverloads(
          int index, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.Builder builderForValue) {
        if (dropOverloadsBuilder_ == null) {
          ensureDropOverloadsIsMutable();
          dropOverloads_.add(index, builderForValue.build());
          onChanged();
        } else {
          dropOverloadsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public Builder addAllDropOverloads(
          java.lang.Iterable<? extends io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload> values) {
        if (dropOverloadsBuilder_ == null) {
          ensureDropOverloadsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dropOverloads_);
          onChanged();
        } else {
          dropOverloadsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public Builder clearDropOverloads() {
        if (dropOverloadsBuilder_ == null) {
          dropOverloads_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dropOverloadsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public Builder removeDropOverloads(int index) {
        if (dropOverloadsBuilder_ == null) {
          ensureDropOverloadsIsMutable();
          dropOverloads_.remove(index);
          onChanged();
        } else {
          dropOverloadsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.Builder getDropOverloadsBuilder(
          int index) {
        return getDropOverloadsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverloadOrBuilder getDropOverloadsOrBuilder(
          int index) {
        if (dropOverloadsBuilder_ == null) {
          return dropOverloads_.get(index);  } else {
          return dropOverloadsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public java.util.List<? extends io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverloadOrBuilder> 
           getDropOverloadsOrBuilderList() {
        if (dropOverloadsBuilder_ != null) {
          return dropOverloadsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dropOverloads_);
        }
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.Builder addDropOverloadsBuilder() {
        return getDropOverloadsFieldBuilder().addBuilder(
            io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.getDefaultInstance());
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.Builder addDropOverloadsBuilder(
          int index) {
        return getDropOverloadsFieldBuilder().addBuilder(
            index, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.getDefaultInstance());
      }
      /**
       * <pre>
       * Action to trim the overall incoming traffic to protect the upstream
       * hosts. This action allows protection in case the hosts are unable to
       * recover from an outage, or unable to autoscale or unable to handle
       * incoming traffic volume for any reason.
       * At the client each category is applied one after the other to generate
       * the 'actual' drop percentage on all outgoing traffic. For example:
       * .. code-block:: json
       *  { "drop_overloads": [
       *      { "category": "throttle", "drop_percentage": 60 }
       *      { "category": "lb", "drop_percentage": 50 }
       *  ]}
       * The actual drop percentages applied to the traffic at the clients will be
       *    "throttle"_drop = 60%
       *    "lb"_drop = 20%  // 50% of the remaining 'actual' load, which is 40%.
       *    actual_outgoing_load = 20% // remaining after applying all categories.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>repeated .envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload drop_overloads = 2;</code>
       */
      public java.util.List<io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.Builder> 
           getDropOverloadsBuilderList() {
        return getDropOverloadsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.Builder, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverloadOrBuilder> 
          getDropOverloadsFieldBuilder() {
        if (dropOverloadsBuilder_ == null) {
          dropOverloadsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload.Builder, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.DropOverloadOrBuilder>(
                  dropOverloads_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          dropOverloads_ = null;
        }
        return dropOverloadsBuilder_;
      }

      private com.google.protobuf.UInt32Value overprovisioningFactor_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> overprovisioningFactorBuilder_;
      /**
       * <pre>
       * Priority levels and localities are considered overprovisioned with this
       * factor (in percentage). This means that we don't consider a priority
       * level or locality unhealthy until the percentage of healthy hosts
       * multiplied by the overprovisioning factor drops below 100.
       * With the default value 140(1.4), Envoy doesn't consider a priority level
       * or a locality unhealthy until their percentage of healthy hosts drops
       * below 72%. For example:
       * .. code-block:: json
       *  { "overprovisioning_factor": 100 }
       * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
       * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
       * @return Whether the overprovisioningFactor field is set.
       */
      public boolean hasOverprovisioningFactor() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Priority levels and localities are considered overprovisioned with this
       * factor (in percentage). This means that we don't consider a priority
       * level or locality unhealthy until the percentage of healthy hosts
       * multiplied by the overprovisioning factor drops below 100.
       * With the default value 140(1.4), Envoy doesn't consider a priority level
       * or a locality unhealthy until their percentage of healthy hosts drops
       * below 72%. For example:
       * .. code-block:: json
       *  { "overprovisioning_factor": 100 }
       * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
       * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
       * @return The overprovisioningFactor.
       */
      public com.google.protobuf.UInt32Value getOverprovisioningFactor() {
        if (overprovisioningFactorBuilder_ == null) {
          return overprovisioningFactor_ == null ? com.google.protobuf.UInt32Value.getDefaultInstance() : overprovisioningFactor_;
        } else {
          return overprovisioningFactorBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Priority levels and localities are considered overprovisioned with this
       * factor (in percentage). This means that we don't consider a priority
       * level or locality unhealthy until the percentage of healthy hosts
       * multiplied by the overprovisioning factor drops below 100.
       * With the default value 140(1.4), Envoy doesn't consider a priority level
       * or a locality unhealthy until their percentage of healthy hosts drops
       * below 72%. For example:
       * .. code-block:: json
       *  { "overprovisioning_factor": 100 }
       * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
       * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
       */
      public Builder setOverprovisioningFactor(com.google.protobuf.UInt32Value value) {
        if (overprovisioningFactorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          overprovisioningFactor_ = value;
        } else {
          overprovisioningFactorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Priority levels and localities are considered overprovisioned with this
       * factor (in percentage). This means that we don't consider a priority
       * level or locality unhealthy until the percentage of healthy hosts
       * multiplied by the overprovisioning factor drops below 100.
       * With the default value 140(1.4), Envoy doesn't consider a priority level
       * or a locality unhealthy until their percentage of healthy hosts drops
       * below 72%. For example:
       * .. code-block:: json
       *  { "overprovisioning_factor": 100 }
       * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
       * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
       */
      public Builder setOverprovisioningFactor(
          com.google.protobuf.UInt32Value.Builder builderForValue) {
        if (overprovisioningFactorBuilder_ == null) {
          overprovisioningFactor_ = builderForValue.build();
        } else {
          overprovisioningFactorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Priority levels and localities are considered overprovisioned with this
       * factor (in percentage). This means that we don't consider a priority
       * level or locality unhealthy until the percentage of healthy hosts
       * multiplied by the overprovisioning factor drops below 100.
       * With the default value 140(1.4), Envoy doesn't consider a priority level
       * or a locality unhealthy until their percentage of healthy hosts drops
       * below 72%. For example:
       * .. code-block:: json
       *  { "overprovisioning_factor": 100 }
       * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
       * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
       */
      public Builder mergeOverprovisioningFactor(com.google.protobuf.UInt32Value value) {
        if (overprovisioningFactorBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            overprovisioningFactor_ != null &&
            overprovisioningFactor_ != com.google.protobuf.UInt32Value.getDefaultInstance()) {
            getOverprovisioningFactorBuilder().mergeFrom(value);
          } else {
            overprovisioningFactor_ = value;
          }
        } else {
          overprovisioningFactorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Priority levels and localities are considered overprovisioned with this
       * factor (in percentage). This means that we don't consider a priority
       * level or locality unhealthy until the percentage of healthy hosts
       * multiplied by the overprovisioning factor drops below 100.
       * With the default value 140(1.4), Envoy doesn't consider a priority level
       * or a locality unhealthy until their percentage of healthy hosts drops
       * below 72%. For example:
       * .. code-block:: json
       *  { "overprovisioning_factor": 100 }
       * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
       * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
       */
      public Builder clearOverprovisioningFactor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        overprovisioningFactor_ = null;
        if (overprovisioningFactorBuilder_ != null) {
          overprovisioningFactorBuilder_.dispose();
          overprovisioningFactorBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Priority levels and localities are considered overprovisioned with this
       * factor (in percentage). This means that we don't consider a priority
       * level or locality unhealthy until the percentage of healthy hosts
       * multiplied by the overprovisioning factor drops below 100.
       * With the default value 140(1.4), Envoy doesn't consider a priority level
       * or a locality unhealthy until their percentage of healthy hosts drops
       * below 72%. For example:
       * .. code-block:: json
       *  { "overprovisioning_factor": 100 }
       * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
       * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32Value.Builder getOverprovisioningFactorBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getOverprovisioningFactorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Priority levels and localities are considered overprovisioned with this
       * factor (in percentage). This means that we don't consider a priority
       * level or locality unhealthy until the percentage of healthy hosts
       * multiplied by the overprovisioning factor drops below 100.
       * With the default value 140(1.4), Envoy doesn't consider a priority level
       * or a locality unhealthy until their percentage of healthy hosts drops
       * below 72%. For example:
       * .. code-block:: json
       *  { "overprovisioning_factor": 100 }
       * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
       * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.UInt32ValueOrBuilder getOverprovisioningFactorOrBuilder() {
        if (overprovisioningFactorBuilder_ != null) {
          return overprovisioningFactorBuilder_.getMessageOrBuilder();
        } else {
          return overprovisioningFactor_ == null ?
              com.google.protobuf.UInt32Value.getDefaultInstance() : overprovisioningFactor_;
        }
      }
      /**
       * <pre>
       * Priority levels and localities are considered overprovisioned with this
       * factor (in percentage). This means that we don't consider a priority
       * level or locality unhealthy until the percentage of healthy hosts
       * multiplied by the overprovisioning factor drops below 100.
       * With the default value 140(1.4), Envoy doesn't consider a priority level
       * or a locality unhealthy until their percentage of healthy hosts drops
       * below 72%. For example:
       * .. code-block:: json
       *  { "overprovisioning_factor": 100 }
       * Read more at :ref:`priority levels &lt;arch_overview_load_balancing_priority_levels&gt;` and
       * :ref:`localities &lt;arch_overview_load_balancing_locality_weighted_lb&gt;`.
       * </pre>
       *
       * <code>.google.protobuf.UInt32Value overprovisioning_factor = 3 [(.validate.rules) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder> 
          getOverprovisioningFactorFieldBuilder() {
        if (overprovisioningFactorBuilder_ == null) {
          overprovisioningFactorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.UInt32Value, com.google.protobuf.UInt32Value.Builder, com.google.protobuf.UInt32ValueOrBuilder>(
                  getOverprovisioningFactor(),
                  getParentForChildren(),
                  isClean());
          overprovisioningFactor_ = null;
        }
        return overprovisioningFactorBuilder_;
      }

      private com.google.protobuf.Duration endpointStaleAfter_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> endpointStaleAfterBuilder_;
      /**
       * <pre>
       * The max time until which the endpoints from this assignment can be used.
       * If no new assignments are received before this time expires the endpoints
       * are considered stale and should be marked unhealthy.
       * Defaults to 0 which means endpoints never go stale.
       * </pre>
       *
       * <code>.google.protobuf.Duration endpoint_stale_after = 4 [(.validate.rules) = { ... }</code>
       * @return Whether the endpointStaleAfter field is set.
       */
      public boolean hasEndpointStaleAfter() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The max time until which the endpoints from this assignment can be used.
       * If no new assignments are received before this time expires the endpoints
       * are considered stale and should be marked unhealthy.
       * Defaults to 0 which means endpoints never go stale.
       * </pre>
       *
       * <code>.google.protobuf.Duration endpoint_stale_after = 4 [(.validate.rules) = { ... }</code>
       * @return The endpointStaleAfter.
       */
      public com.google.protobuf.Duration getEndpointStaleAfter() {
        if (endpointStaleAfterBuilder_ == null) {
          return endpointStaleAfter_ == null ? com.google.protobuf.Duration.getDefaultInstance() : endpointStaleAfter_;
        } else {
          return endpointStaleAfterBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The max time until which the endpoints from this assignment can be used.
       * If no new assignments are received before this time expires the endpoints
       * are considered stale and should be marked unhealthy.
       * Defaults to 0 which means endpoints never go stale.
       * </pre>
       *
       * <code>.google.protobuf.Duration endpoint_stale_after = 4 [(.validate.rules) = { ... }</code>
       */
      public Builder setEndpointStaleAfter(com.google.protobuf.Duration value) {
        if (endpointStaleAfterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          endpointStaleAfter_ = value;
        } else {
          endpointStaleAfterBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The max time until which the endpoints from this assignment can be used.
       * If no new assignments are received before this time expires the endpoints
       * are considered stale and should be marked unhealthy.
       * Defaults to 0 which means endpoints never go stale.
       * </pre>
       *
       * <code>.google.protobuf.Duration endpoint_stale_after = 4 [(.validate.rules) = { ... }</code>
       */
      public Builder setEndpointStaleAfter(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (endpointStaleAfterBuilder_ == null) {
          endpointStaleAfter_ = builderForValue.build();
        } else {
          endpointStaleAfterBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The max time until which the endpoints from this assignment can be used.
       * If no new assignments are received before this time expires the endpoints
       * are considered stale and should be marked unhealthy.
       * Defaults to 0 which means endpoints never go stale.
       * </pre>
       *
       * <code>.google.protobuf.Duration endpoint_stale_after = 4 [(.validate.rules) = { ... }</code>
       */
      public Builder mergeEndpointStaleAfter(com.google.protobuf.Duration value) {
        if (endpointStaleAfterBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            endpointStaleAfter_ != null &&
            endpointStaleAfter_ != com.google.protobuf.Duration.getDefaultInstance()) {
            getEndpointStaleAfterBuilder().mergeFrom(value);
          } else {
            endpointStaleAfter_ = value;
          }
        } else {
          endpointStaleAfterBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The max time until which the endpoints from this assignment can be used.
       * If no new assignments are received before this time expires the endpoints
       * are considered stale and should be marked unhealthy.
       * Defaults to 0 which means endpoints never go stale.
       * </pre>
       *
       * <code>.google.protobuf.Duration endpoint_stale_after = 4 [(.validate.rules) = { ... }</code>
       */
      public Builder clearEndpointStaleAfter() {
        bitField0_ = (bitField0_ & ~0x00000004);
        endpointStaleAfter_ = null;
        if (endpointStaleAfterBuilder_ != null) {
          endpointStaleAfterBuilder_.dispose();
          endpointStaleAfterBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The max time until which the endpoints from this assignment can be used.
       * If no new assignments are received before this time expires the endpoints
       * are considered stale and should be marked unhealthy.
       * Defaults to 0 which means endpoints never go stale.
       * </pre>
       *
       * <code>.google.protobuf.Duration endpoint_stale_after = 4 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.Duration.Builder getEndpointStaleAfterBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getEndpointStaleAfterFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The max time until which the endpoints from this assignment can be used.
       * If no new assignments are received before this time expires the endpoints
       * are considered stale and should be marked unhealthy.
       * Defaults to 0 which means endpoints never go stale.
       * </pre>
       *
       * <code>.google.protobuf.Duration endpoint_stale_after = 4 [(.validate.rules) = { ... }</code>
       */
      public com.google.protobuf.DurationOrBuilder getEndpointStaleAfterOrBuilder() {
        if (endpointStaleAfterBuilder_ != null) {
          return endpointStaleAfterBuilder_.getMessageOrBuilder();
        } else {
          return endpointStaleAfter_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : endpointStaleAfter_;
        }
      }
      /**
       * <pre>
       * The max time until which the endpoints from this assignment can be used.
       * If no new assignments are received before this time expires the endpoints
       * are considered stale and should be marked unhealthy.
       * Defaults to 0 which means endpoints never go stale.
       * </pre>
       *
       * <code>.google.protobuf.Duration endpoint_stale_after = 4 [(.validate.rules) = { ... }</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getEndpointStaleAfterFieldBuilder() {
        if (endpointStaleAfterBuilder_ == null) {
          endpointStaleAfterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getEndpointStaleAfter(),
                  getParentForChildren(),
                  isClean());
          endpointStaleAfter_ = null;
        }
        return endpointStaleAfterBuilder_;
      }

      private boolean disableOverprovisioning_ ;
      /**
       * <pre>
       * The flag to disable overprovisioning. If it is set to true,
       * :ref:`overprovisioning factor
       * &lt;arch_overview_load_balancing_overprovisioning_factor&gt;` will be ignored
       * and Envoy will not perform graceful failover between priority levels or
       * localities as endpoints become unhealthy. Otherwise Envoy will perform
       * graceful failover as :ref:`overprovisioning factor
       * &lt;arch_overview_load_balancing_overprovisioning_factor&gt;` suggests.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>bool disable_overprovisioning = 5 [deprecated = true];</code>
       * @deprecated envoy.api.v2.ClusterLoadAssignment.Policy.disable_overprovisioning is deprecated.
       *     See envoy/api/v2/endpoint.proto;l=101
       * @return The disableOverprovisioning.
       */
      @java.lang.Override
      @java.lang.Deprecated public boolean getDisableOverprovisioning() {
        return disableOverprovisioning_;
      }
      /**
       * <pre>
       * The flag to disable overprovisioning. If it is set to true,
       * :ref:`overprovisioning factor
       * &lt;arch_overview_load_balancing_overprovisioning_factor&gt;` will be ignored
       * and Envoy will not perform graceful failover between priority levels or
       * localities as endpoints become unhealthy. Otherwise Envoy will perform
       * graceful failover as :ref:`overprovisioning factor
       * &lt;arch_overview_load_balancing_overprovisioning_factor&gt;` suggests.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>bool disable_overprovisioning = 5 [deprecated = true];</code>
       * @deprecated envoy.api.v2.ClusterLoadAssignment.Policy.disable_overprovisioning is deprecated.
       *     See envoy/api/v2/endpoint.proto;l=101
       * @param value The disableOverprovisioning to set.
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder setDisableOverprovisioning(boolean value) {
        
        disableOverprovisioning_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The flag to disable overprovisioning. If it is set to true,
       * :ref:`overprovisioning factor
       * &lt;arch_overview_load_balancing_overprovisioning_factor&gt;` will be ignored
       * and Envoy will not perform graceful failover between priority levels or
       * localities as endpoints become unhealthy. Otherwise Envoy will perform
       * graceful failover as :ref:`overprovisioning factor
       * &lt;arch_overview_load_balancing_overprovisioning_factor&gt;` suggests.
       * [#not-implemented-hide:]
       * </pre>
       *
       * <code>bool disable_overprovisioning = 5 [deprecated = true];</code>
       * @deprecated envoy.api.v2.ClusterLoadAssignment.Policy.disable_overprovisioning is deprecated.
       *     See envoy/api/v2/endpoint.proto;l=101
       * @return This builder for chaining.
       */
      @java.lang.Deprecated public Builder clearDisableOverprovisioning() {
        bitField0_ = (bitField0_ & ~0x00000008);
        disableOverprovisioning_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:envoy.api.v2.ClusterLoadAssignment.Policy)
    }

    // @@protoc_insertion_point(class_scope:envoy.api.v2.ClusterLoadAssignment.Policy)
    private static final io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy();
    }

    public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Policy>
        PARSER = new com.google.protobuf.AbstractParser<Policy>() {
      @java.lang.Override
      public Policy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Policy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Policy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int CLUSTER_NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object clusterName_ = "";
  /**
   * <pre>
   * Name of the cluster. This will be the :ref:`service_name
   * &lt;envoy_api_field_Cluster.EdsClusterConfig.service_name&gt;` value if specified
   * in the cluster :ref:`EdsClusterConfig
   * &lt;envoy_api_msg_Cluster.EdsClusterConfig&gt;`.
   * </pre>
   *
   * <code>string cluster_name = 1 [(.validate.rules) = { ... }</code>
   * @return The clusterName.
   */
  @java.lang.Override
  public java.lang.String getClusterName() {
    java.lang.Object ref = clusterName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      clusterName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of the cluster. This will be the :ref:`service_name
   * &lt;envoy_api_field_Cluster.EdsClusterConfig.service_name&gt;` value if specified
   * in the cluster :ref:`EdsClusterConfig
   * &lt;envoy_api_msg_Cluster.EdsClusterConfig&gt;`.
   * </pre>
   *
   * <code>string cluster_name = 1 [(.validate.rules) = { ... }</code>
   * @return The bytes for clusterName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getClusterNameBytes() {
    java.lang.Object ref = clusterName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      clusterName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ENDPOINTS_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints> endpoints_;
  /**
   * <pre>
   * List of endpoints to load balance to.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
   */
  @java.lang.Override
  public java.util.List<io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints> getEndpointsList() {
    return endpoints_;
  }
  /**
   * <pre>
   * List of endpoints to load balance to.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpointsOrBuilder> 
      getEndpointsOrBuilderList() {
    return endpoints_;
  }
  /**
   * <pre>
   * List of endpoints to load balance to.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
   */
  @java.lang.Override
  public int getEndpointsCount() {
    return endpoints_.size();
  }
  /**
   * <pre>
   * List of endpoints to load balance to.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints getEndpoints(int index) {
    return endpoints_.get(index);
  }
  /**
   * <pre>
   * List of endpoints to load balance to.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpointsOrBuilder getEndpointsOrBuilder(
      int index) {
    return endpoints_.get(index);
  }

  public static final int NAMED_ENDPOINTS_FIELD_NUMBER = 5;
  private static final class NamedEndpointsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint>newDefaultInstance(
                io.envoyproxy.envoy.api.v2.EndpointProto.internal_static_envoy_api_v2_ClusterLoadAssignment_NamedEndpointsEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                io.envoyproxy.envoy.api.v2.endpoint.Endpoint.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint> namedEndpoints_;
  private com.google.protobuf.MapField<java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint>
  internalGetNamedEndpoints() {
    if (namedEndpoints_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          NamedEndpointsDefaultEntryHolder.defaultEntry);
    }
    return namedEndpoints_;
  }
  public int getNamedEndpointsCount() {
    return internalGetNamedEndpoints().getMap().size();
  }
  /**
   * <pre>
   * Map of named endpoints that can be referenced in LocalityLbEndpoints.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>map&lt;string, .envoy.api.v2.endpoint.Endpoint&gt; named_endpoints = 5;</code>
   */
  @java.lang.Override
  public boolean containsNamedEndpoints(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetNamedEndpoints().getMap().containsKey(key);
  }
  /**
   * Use {@link #getNamedEndpointsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint> getNamedEndpoints() {
    return getNamedEndpointsMap();
  }
  /**
   * <pre>
   * Map of named endpoints that can be referenced in LocalityLbEndpoints.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>map&lt;string, .envoy.api.v2.endpoint.Endpoint&gt; named_endpoints = 5;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint> getNamedEndpointsMap() {
    return internalGetNamedEndpoints().getMap();
  }
  /**
   * <pre>
   * Map of named endpoints that can be referenced in LocalityLbEndpoints.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>map&lt;string, .envoy.api.v2.endpoint.Endpoint&gt; named_endpoints = 5;</code>
   */
  @java.lang.Override
  public /* nullable */
io.envoyproxy.envoy.api.v2.endpoint.Endpoint getNamedEndpointsOrDefault(
      java.lang.String key,
      /* nullable */
io.envoyproxy.envoy.api.v2.endpoint.Endpoint defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint> map =
        internalGetNamedEndpoints().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Map of named endpoints that can be referenced in LocalityLbEndpoints.
   * [#not-implemented-hide:]
   * </pre>
   *
   * <code>map&lt;string, .envoy.api.v2.endpoint.Endpoint&gt; named_endpoints = 5;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.endpoint.Endpoint getNamedEndpointsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint> map =
        internalGetNamedEndpoints().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int POLICY_FIELD_NUMBER = 4;
  private io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy policy_;
  /**
   * <pre>
   * Load balancing policy settings.
   * </pre>
   *
   * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
   * @return Whether the policy field is set.
   */
  @java.lang.Override
  public boolean hasPolicy() {
    return policy_ != null;
  }
  /**
   * <pre>
   * Load balancing policy settings.
   * </pre>
   *
   * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
   * @return The policy.
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy getPolicy() {
    return policy_ == null ? io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.getDefaultInstance() : policy_;
  }
  /**
   * <pre>
   * Load balancing policy settings.
   * </pre>
   *
   * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
   */
  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.PolicyOrBuilder getPolicyOrBuilder() {
    return policy_ == null ? io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.getDefaultInstance() : policy_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clusterName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, clusterName_);
    }
    for (int i = 0; i < endpoints_.size(); i++) {
      output.writeMessage(2, endpoints_.get(i));
    }
    if (policy_ != null) {
      output.writeMessage(4, getPolicy());
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetNamedEndpoints(),
        NamedEndpointsDefaultEntryHolder.defaultEntry,
        5);
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(clusterName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, clusterName_);
    }
    for (int i = 0; i < endpoints_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, endpoints_.get(i));
    }
    if (policy_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getPolicy());
    }
    for (java.util.Map.Entry<java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint> entry
         : internalGetNamedEndpoints().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint>
      namedEndpoints__ = NamedEndpointsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, namedEndpoints__);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.envoyproxy.envoy.api.v2.ClusterLoadAssignment)) {
      return super.equals(obj);
    }
    io.envoyproxy.envoy.api.v2.ClusterLoadAssignment other = (io.envoyproxy.envoy.api.v2.ClusterLoadAssignment) obj;

    if (!getClusterName()
        .equals(other.getClusterName())) return false;
    if (!getEndpointsList()
        .equals(other.getEndpointsList())) return false;
    if (!internalGetNamedEndpoints().equals(
        other.internalGetNamedEndpoints())) return false;
    if (hasPolicy() != other.hasPolicy()) return false;
    if (hasPolicy()) {
      if (!getPolicy()
          .equals(other.getPolicy())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CLUSTER_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getClusterName().hashCode();
    if (getEndpointsCount() > 0) {
      hash = (37 * hash) + ENDPOINTS_FIELD_NUMBER;
      hash = (53 * hash) + getEndpointsList().hashCode();
    }
    if (!internalGetNamedEndpoints().getMap().isEmpty()) {
      hash = (37 * hash) + NAMED_ENDPOINTS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetNamedEndpoints().hashCode();
    }
    if (hasPolicy()) {
      hash = (37 * hash) + POLICY_FIELD_NUMBER;
      hash = (53 * hash) + getPolicy().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.envoyproxy.envoy.api.v2.ClusterLoadAssignment prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Each route from RDS will map to a single cluster or traffic split across
   * clusters using weights expressed in the RDS WeightedCluster.
   * With EDS, each cluster is treated independently from a LB perspective, with
   * LB taking place between the Localities within a cluster and at a finer
   * granularity between the hosts within a locality. The percentage of traffic
   * for each endpoint is determined by both its load_balancing_weight, and the
   * load_balancing_weight of its locality. First, a locality will be selected,
   * then an endpoint within that locality will be chose based on its weight.
   * [#next-free-field: 6]
   * </pre>
   *
   * Protobuf type {@code envoy.api.v2.ClusterLoadAssignment}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:envoy.api.v2.ClusterLoadAssignment)
      io.envoyproxy.envoy.api.v2.ClusterLoadAssignmentOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.envoyproxy.envoy.api.v2.EndpointProto.internal_static_envoy_api_v2_ClusterLoadAssignment_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetNamedEndpoints();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetMutableNamedEndpoints();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.envoyproxy.envoy.api.v2.EndpointProto.internal_static_envoy_api_v2_ClusterLoadAssignment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.class, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Builder.class);
    }

    // Construct using io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      clusterName_ = "";
      if (endpointsBuilder_ == null) {
        endpoints_ = java.util.Collections.emptyList();
      } else {
        endpoints_ = null;
        endpointsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      internalGetMutableNamedEndpoints().clear();
      policy_ = null;
      if (policyBuilder_ != null) {
        policyBuilder_.dispose();
        policyBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.envoyproxy.envoy.api.v2.EndpointProto.internal_static_envoy_api_v2_ClusterLoadAssignment_descriptor;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment getDefaultInstanceForType() {
      return io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.getDefaultInstance();
    }

    @java.lang.Override
    public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment build() {
      io.envoyproxy.envoy.api.v2.ClusterLoadAssignment result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment buildPartial() {
      io.envoyproxy.envoy.api.v2.ClusterLoadAssignment result = new io.envoyproxy.envoy.api.v2.ClusterLoadAssignment(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.envoyproxy.envoy.api.v2.ClusterLoadAssignment result) {
      if (endpointsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          endpoints_ = java.util.Collections.unmodifiableList(endpoints_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.endpoints_ = endpoints_;
      } else {
        result.endpoints_ = endpointsBuilder_.build();
      }
    }

    private void buildPartial0(io.envoyproxy.envoy.api.v2.ClusterLoadAssignment result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.clusterName_ = clusterName_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.namedEndpoints_ = internalGetNamedEndpoints();
        result.namedEndpoints_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.policy_ = policyBuilder_ == null
            ? policy_
            : policyBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.envoyproxy.envoy.api.v2.ClusterLoadAssignment) {
        return mergeFrom((io.envoyproxy.envoy.api.v2.ClusterLoadAssignment)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.envoyproxy.envoy.api.v2.ClusterLoadAssignment other) {
      if (other == io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.getDefaultInstance()) return this;
      if (!other.getClusterName().isEmpty()) {
        clusterName_ = other.clusterName_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (endpointsBuilder_ == null) {
        if (!other.endpoints_.isEmpty()) {
          if (endpoints_.isEmpty()) {
            endpoints_ = other.endpoints_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureEndpointsIsMutable();
            endpoints_.addAll(other.endpoints_);
          }
          onChanged();
        }
      } else {
        if (!other.endpoints_.isEmpty()) {
          if (endpointsBuilder_.isEmpty()) {
            endpointsBuilder_.dispose();
            endpointsBuilder_ = null;
            endpoints_ = other.endpoints_;
            bitField0_ = (bitField0_ & ~0x00000002);
            endpointsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getEndpointsFieldBuilder() : null;
          } else {
            endpointsBuilder_.addAllMessages(other.endpoints_);
          }
        }
      }
      internalGetMutableNamedEndpoints().mergeFrom(
          other.internalGetNamedEndpoints());
      bitField0_ |= 0x00000004;
      if (other.hasPolicy()) {
        mergePolicy(other.getPolicy());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              clusterName_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints m =
                  input.readMessage(
                      io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints.parser(),
                      extensionRegistry);
              if (endpointsBuilder_ == null) {
                ensureEndpointsIsMutable();
                endpoints_.add(m);
              } else {
                endpointsBuilder_.addMessage(m);
              }
              break;
            } // case 18
            case 34: {
              input.readMessage(
                  getPolicyFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              com.google.protobuf.MapEntry<java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint>
              namedEndpoints__ = input.readMessage(
                  NamedEndpointsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableNamedEndpoints().getMutableMap().put(
                  namedEndpoints__.getKey(), namedEndpoints__.getValue());
              bitField0_ |= 0x00000004;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object clusterName_ = "";
    /**
     * <pre>
     * Name of the cluster. This will be the :ref:`service_name
     * &lt;envoy_api_field_Cluster.EdsClusterConfig.service_name&gt;` value if specified
     * in the cluster :ref:`EdsClusterConfig
     * &lt;envoy_api_msg_Cluster.EdsClusterConfig&gt;`.
     * </pre>
     *
     * <code>string cluster_name = 1 [(.validate.rules) = { ... }</code>
     * @return The clusterName.
     */
    public java.lang.String getClusterName() {
      java.lang.Object ref = clusterName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        clusterName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of the cluster. This will be the :ref:`service_name
     * &lt;envoy_api_field_Cluster.EdsClusterConfig.service_name&gt;` value if specified
     * in the cluster :ref:`EdsClusterConfig
     * &lt;envoy_api_msg_Cluster.EdsClusterConfig&gt;`.
     * </pre>
     *
     * <code>string cluster_name = 1 [(.validate.rules) = { ... }</code>
     * @return The bytes for clusterName.
     */
    public com.google.protobuf.ByteString
        getClusterNameBytes() {
      java.lang.Object ref = clusterName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        clusterName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of the cluster. This will be the :ref:`service_name
     * &lt;envoy_api_field_Cluster.EdsClusterConfig.service_name&gt;` value if specified
     * in the cluster :ref:`EdsClusterConfig
     * &lt;envoy_api_msg_Cluster.EdsClusterConfig&gt;`.
     * </pre>
     *
     * <code>string cluster_name = 1 [(.validate.rules) = { ... }</code>
     * @param value The clusterName to set.
     * @return This builder for chaining.
     */
    public Builder setClusterName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      clusterName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the cluster. This will be the :ref:`service_name
     * &lt;envoy_api_field_Cluster.EdsClusterConfig.service_name&gt;` value if specified
     * in the cluster :ref:`EdsClusterConfig
     * &lt;envoy_api_msg_Cluster.EdsClusterConfig&gt;`.
     * </pre>
     *
     * <code>string cluster_name = 1 [(.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearClusterName() {
      clusterName_ = getDefaultInstance().getClusterName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the cluster. This will be the :ref:`service_name
     * &lt;envoy_api_field_Cluster.EdsClusterConfig.service_name&gt;` value if specified
     * in the cluster :ref:`EdsClusterConfig
     * &lt;envoy_api_msg_Cluster.EdsClusterConfig&gt;`.
     * </pre>
     *
     * <code>string cluster_name = 1 [(.validate.rules) = { ... }</code>
     * @param value The bytes for clusterName to set.
     * @return This builder for chaining.
     */
    public Builder setClusterNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      clusterName_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints> endpoints_ =
      java.util.Collections.emptyList();
    private void ensureEndpointsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        endpoints_ = new java.util.ArrayList<io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints>(endpoints_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints, io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints.Builder, io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpointsOrBuilder> endpointsBuilder_;

    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public java.util.List<io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints> getEndpointsList() {
      if (endpointsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(endpoints_);
      } else {
        return endpointsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public int getEndpointsCount() {
      if (endpointsBuilder_ == null) {
        return endpoints_.size();
      } else {
        return endpointsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints getEndpoints(int index) {
      if (endpointsBuilder_ == null) {
        return endpoints_.get(index);
      } else {
        return endpointsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public Builder setEndpoints(
        int index, io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints value) {
      if (endpointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEndpointsIsMutable();
        endpoints_.set(index, value);
        onChanged();
      } else {
        endpointsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public Builder setEndpoints(
        int index, io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints.Builder builderForValue) {
      if (endpointsBuilder_ == null) {
        ensureEndpointsIsMutable();
        endpoints_.set(index, builderForValue.build());
        onChanged();
      } else {
        endpointsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public Builder addEndpoints(io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints value) {
      if (endpointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEndpointsIsMutable();
        endpoints_.add(value);
        onChanged();
      } else {
        endpointsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public Builder addEndpoints(
        int index, io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints value) {
      if (endpointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEndpointsIsMutable();
        endpoints_.add(index, value);
        onChanged();
      } else {
        endpointsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public Builder addEndpoints(
        io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints.Builder builderForValue) {
      if (endpointsBuilder_ == null) {
        ensureEndpointsIsMutable();
        endpoints_.add(builderForValue.build());
        onChanged();
      } else {
        endpointsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public Builder addEndpoints(
        int index, io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints.Builder builderForValue) {
      if (endpointsBuilder_ == null) {
        ensureEndpointsIsMutable();
        endpoints_.add(index, builderForValue.build());
        onChanged();
      } else {
        endpointsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public Builder addAllEndpoints(
        java.lang.Iterable<? extends io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints> values) {
      if (endpointsBuilder_ == null) {
        ensureEndpointsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, endpoints_);
        onChanged();
      } else {
        endpointsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public Builder clearEndpoints() {
      if (endpointsBuilder_ == null) {
        endpoints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        endpointsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public Builder removeEndpoints(int index) {
      if (endpointsBuilder_ == null) {
        ensureEndpointsIsMutable();
        endpoints_.remove(index);
        onChanged();
      } else {
        endpointsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints.Builder getEndpointsBuilder(
        int index) {
      return getEndpointsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpointsOrBuilder getEndpointsOrBuilder(
        int index) {
      if (endpointsBuilder_ == null) {
        return endpoints_.get(index);  } else {
        return endpointsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public java.util.List<? extends io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpointsOrBuilder> 
         getEndpointsOrBuilderList() {
      if (endpointsBuilder_ != null) {
        return endpointsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(endpoints_);
      }
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints.Builder addEndpointsBuilder() {
      return getEndpointsFieldBuilder().addBuilder(
          io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints.getDefaultInstance());
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints.Builder addEndpointsBuilder(
        int index) {
      return getEndpointsFieldBuilder().addBuilder(
          index, io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints.getDefaultInstance());
    }
    /**
     * <pre>
     * List of endpoints to load balance to.
     * </pre>
     *
     * <code>repeated .envoy.api.v2.endpoint.LocalityLbEndpoints endpoints = 2;</code>
     */
    public java.util.List<io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints.Builder> 
         getEndpointsBuilderList() {
      return getEndpointsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints, io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints.Builder, io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpointsOrBuilder> 
        getEndpointsFieldBuilder() {
      if (endpointsBuilder_ == null) {
        endpointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints, io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpoints.Builder, io.envoyproxy.envoy.api.v2.endpoint.LocalityLbEndpointsOrBuilder>(
                endpoints_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        endpoints_ = null;
      }
      return endpointsBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint> namedEndpoints_;
    private com.google.protobuf.MapField<java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint>
        internalGetNamedEndpoints() {
      if (namedEndpoints_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            NamedEndpointsDefaultEntryHolder.defaultEntry);
      }
      return namedEndpoints_;
    }
    private com.google.protobuf.MapField<java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint>
        internalGetMutableNamedEndpoints() {
      if (namedEndpoints_ == null) {
        namedEndpoints_ = com.google.protobuf.MapField.newMapField(
            NamedEndpointsDefaultEntryHolder.defaultEntry);
      }
      if (!namedEndpoints_.isMutable()) {
        namedEndpoints_ = namedEndpoints_.copy();
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return namedEndpoints_;
    }
    public int getNamedEndpointsCount() {
      return internalGetNamedEndpoints().getMap().size();
    }
    /**
     * <pre>
     * Map of named endpoints that can be referenced in LocalityLbEndpoints.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>map&lt;string, .envoy.api.v2.endpoint.Endpoint&gt; named_endpoints = 5;</code>
     */
    @java.lang.Override
    public boolean containsNamedEndpoints(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetNamedEndpoints().getMap().containsKey(key);
    }
    /**
     * Use {@link #getNamedEndpointsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint> getNamedEndpoints() {
      return getNamedEndpointsMap();
    }
    /**
     * <pre>
     * Map of named endpoints that can be referenced in LocalityLbEndpoints.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>map&lt;string, .envoy.api.v2.endpoint.Endpoint&gt; named_endpoints = 5;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint> getNamedEndpointsMap() {
      return internalGetNamedEndpoints().getMap();
    }
    /**
     * <pre>
     * Map of named endpoints that can be referenced in LocalityLbEndpoints.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>map&lt;string, .envoy.api.v2.endpoint.Endpoint&gt; named_endpoints = 5;</code>
     */
    @java.lang.Override
    public /* nullable */
io.envoyproxy.envoy.api.v2.endpoint.Endpoint getNamedEndpointsOrDefault(
        java.lang.String key,
        /* nullable */
io.envoyproxy.envoy.api.v2.endpoint.Endpoint defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint> map =
          internalGetNamedEndpoints().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Map of named endpoints that can be referenced in LocalityLbEndpoints.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>map&lt;string, .envoy.api.v2.endpoint.Endpoint&gt; named_endpoints = 5;</code>
     */
    @java.lang.Override
    public io.envoyproxy.envoy.api.v2.endpoint.Endpoint getNamedEndpointsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint> map =
          internalGetNamedEndpoints().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearNamedEndpoints() {
      bitField0_ = (bitField0_ & ~0x00000004);
      internalGetMutableNamedEndpoints().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Map of named endpoints that can be referenced in LocalityLbEndpoints.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>map&lt;string, .envoy.api.v2.endpoint.Endpoint&gt; named_endpoints = 5;</code>
     */
    public Builder removeNamedEndpoints(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableNamedEndpoints().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint>
        getMutableNamedEndpoints() {
      bitField0_ |= 0x00000004;
      return internalGetMutableNamedEndpoints().getMutableMap();
    }
    /**
     * <pre>
     * Map of named endpoints that can be referenced in LocalityLbEndpoints.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>map&lt;string, .envoy.api.v2.endpoint.Endpoint&gt; named_endpoints = 5;</code>
     */
    public Builder putNamedEndpoints(
        java.lang.String key,
        io.envoyproxy.envoy.api.v2.endpoint.Endpoint value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableNamedEndpoints().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <pre>
     * Map of named endpoints that can be referenced in LocalityLbEndpoints.
     * [#not-implemented-hide:]
     * </pre>
     *
     * <code>map&lt;string, .envoy.api.v2.endpoint.Endpoint&gt; named_endpoints = 5;</code>
     */
    public Builder putAllNamedEndpoints(
        java.util.Map<java.lang.String, io.envoyproxy.envoy.api.v2.endpoint.Endpoint> values) {
      internalGetMutableNamedEndpoints().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000004;
      return this;
    }

    private io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy policy_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.Builder, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.PolicyOrBuilder> policyBuilder_;
    /**
     * <pre>
     * Load balancing policy settings.
     * </pre>
     *
     * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
     * @return Whether the policy field is set.
     */
    public boolean hasPolicy() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Load balancing policy settings.
     * </pre>
     *
     * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
     * @return The policy.
     */
    public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy getPolicy() {
      if (policyBuilder_ == null) {
        return policy_ == null ? io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.getDefaultInstance() : policy_;
      } else {
        return policyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Load balancing policy settings.
     * </pre>
     *
     * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
     */
    public Builder setPolicy(io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy value) {
      if (policyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        policy_ = value;
      } else {
        policyBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Load balancing policy settings.
     * </pre>
     *
     * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
     */
    public Builder setPolicy(
        io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.Builder builderForValue) {
      if (policyBuilder_ == null) {
        policy_ = builderForValue.build();
      } else {
        policyBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Load balancing policy settings.
     * </pre>
     *
     * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
     */
    public Builder mergePolicy(io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy value) {
      if (policyBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          policy_ != null &&
          policy_ != io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.getDefaultInstance()) {
          getPolicyBuilder().mergeFrom(value);
        } else {
          policy_ = value;
        }
      } else {
        policyBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Load balancing policy settings.
     * </pre>
     *
     * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
     */
    public Builder clearPolicy() {
      bitField0_ = (bitField0_ & ~0x00000008);
      policy_ = null;
      if (policyBuilder_ != null) {
        policyBuilder_.dispose();
        policyBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Load balancing policy settings.
     * </pre>
     *
     * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
     */
    public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.Builder getPolicyBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getPolicyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Load balancing policy settings.
     * </pre>
     *
     * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
     */
    public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.PolicyOrBuilder getPolicyOrBuilder() {
      if (policyBuilder_ != null) {
        return policyBuilder_.getMessageOrBuilder();
      } else {
        return policy_ == null ?
            io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.getDefaultInstance() : policy_;
      }
    }
    /**
     * <pre>
     * Load balancing policy settings.
     * </pre>
     *
     * <code>.envoy.api.v2.ClusterLoadAssignment.Policy policy = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.Builder, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.PolicyOrBuilder> 
        getPolicyFieldBuilder() {
      if (policyBuilder_ == null) {
        policyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.Policy.Builder, io.envoyproxy.envoy.api.v2.ClusterLoadAssignment.PolicyOrBuilder>(
                getPolicy(),
                getParentForChildren(),
                isClean());
        policy_ = null;
      }
      return policyBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:envoy.api.v2.ClusterLoadAssignment)
  }

  // @@protoc_insertion_point(class_scope:envoy.api.v2.ClusterLoadAssignment)
  private static final io.envoyproxy.envoy.api.v2.ClusterLoadAssignment DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.envoyproxy.envoy.api.v2.ClusterLoadAssignment();
  }

  public static io.envoyproxy.envoy.api.v2.ClusterLoadAssignment getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ClusterLoadAssignment>
      PARSER = new com.google.protobuf.AbstractParser<ClusterLoadAssignment>() {
    @java.lang.Override
    public ClusterLoadAssignment parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ClusterLoadAssignment> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ClusterLoadAssignment> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.envoyproxy.envoy.api.v2.ClusterLoadAssignment getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

