// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/api/v2/core/grpc_service.proto

package io.envoyproxy.envoy.api.v2.core;

public interface GrpcServiceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.GrpcService)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Envoy's in-built gRPC client.
   * See the :ref:`gRPC services overview &lt;arch_overview_grpc_services&gt;`
   * documentation for discussion on gRPC client selection.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcService.EnvoyGrpc envoy_grpc = 1;</code>
   * @return Whether the envoyGrpc field is set.
   */
  boolean hasEnvoyGrpc();
  /**
   * <pre>
   * Envoy's in-built gRPC client.
   * See the :ref:`gRPC services overview &lt;arch_overview_grpc_services&gt;`
   * documentation for discussion on gRPC client selection.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcService.EnvoyGrpc envoy_grpc = 1;</code>
   * @return The envoyGrpc.
   */
  io.envoyproxy.envoy.api.v2.core.GrpcService.EnvoyGrpc getEnvoyGrpc();
  /**
   * <pre>
   * Envoy's in-built gRPC client.
   * See the :ref:`gRPC services overview &lt;arch_overview_grpc_services&gt;`
   * documentation for discussion on gRPC client selection.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcService.EnvoyGrpc envoy_grpc = 1;</code>
   */
  io.envoyproxy.envoy.api.v2.core.GrpcService.EnvoyGrpcOrBuilder getEnvoyGrpcOrBuilder();

  /**
   * <pre>
   * `Google C++ gRPC client &lt;https://github.com/grpc/grpc&gt;`_
   * See the :ref:`gRPC services overview &lt;arch_overview_grpc_services&gt;`
   * documentation for discussion on gRPC client selection.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcService.GoogleGrpc google_grpc = 2;</code>
   * @return Whether the googleGrpc field is set.
   */
  boolean hasGoogleGrpc();
  /**
   * <pre>
   * `Google C++ gRPC client &lt;https://github.com/grpc/grpc&gt;`_
   * See the :ref:`gRPC services overview &lt;arch_overview_grpc_services&gt;`
   * documentation for discussion on gRPC client selection.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcService.GoogleGrpc google_grpc = 2;</code>
   * @return The googleGrpc.
   */
  io.envoyproxy.envoy.api.v2.core.GrpcService.GoogleGrpc getGoogleGrpc();
  /**
   * <pre>
   * `Google C++ gRPC client &lt;https://github.com/grpc/grpc&gt;`_
   * See the :ref:`gRPC services overview &lt;arch_overview_grpc_services&gt;`
   * documentation for discussion on gRPC client selection.
   * </pre>
   *
   * <code>.envoy.api.v2.core.GrpcService.GoogleGrpc google_grpc = 2;</code>
   */
  io.envoyproxy.envoy.api.v2.core.GrpcService.GoogleGrpcOrBuilder getGoogleGrpcOrBuilder();

  /**
   * <pre>
   * The timeout for the gRPC request. This is the timeout for a specific
   * request.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 3;</code>
   * @return Whether the timeout field is set.
   */
  boolean hasTimeout();
  /**
   * <pre>
   * The timeout for the gRPC request. This is the timeout for a specific
   * request.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 3;</code>
   * @return The timeout.
   */
  com.google.protobuf.Duration getTimeout();
  /**
   * <pre>
   * The timeout for the gRPC request. This is the timeout for a specific
   * request.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 3;</code>
   */
  com.google.protobuf.DurationOrBuilder getTimeoutOrBuilder();

  /**
   * <pre>
   * Additional metadata to include in streams initiated to the GrpcService.
   * This can be used for scenarios in which additional ad hoc authorization
   * headers (e.g. ``x-foo-bar: baz-key``) are to be injected.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValue initial_metadata = 5;</code>
   */
  java.util.List<io.envoyproxy.envoy.api.v2.core.HeaderValue> 
      getInitialMetadataList();
  /**
   * <pre>
   * Additional metadata to include in streams initiated to the GrpcService.
   * This can be used for scenarios in which additional ad hoc authorization
   * headers (e.g. ``x-foo-bar: baz-key``) are to be injected.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValue initial_metadata = 5;</code>
   */
  io.envoyproxy.envoy.api.v2.core.HeaderValue getInitialMetadata(int index);
  /**
   * <pre>
   * Additional metadata to include in streams initiated to the GrpcService.
   * This can be used for scenarios in which additional ad hoc authorization
   * headers (e.g. ``x-foo-bar: baz-key``) are to be injected.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValue initial_metadata = 5;</code>
   */
  int getInitialMetadataCount();
  /**
   * <pre>
   * Additional metadata to include in streams initiated to the GrpcService.
   * This can be used for scenarios in which additional ad hoc authorization
   * headers (e.g. ``x-foo-bar: baz-key``) are to be injected.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValue initial_metadata = 5;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.api.v2.core.HeaderValueOrBuilder> 
      getInitialMetadataOrBuilderList();
  /**
   * <pre>
   * Additional metadata to include in streams initiated to the GrpcService.
   * This can be used for scenarios in which additional ad hoc authorization
   * headers (e.g. ``x-foo-bar: baz-key``) are to be injected.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.HeaderValue initial_metadata = 5;</code>
   */
  io.envoyproxy.envoy.api.v2.core.HeaderValueOrBuilder getInitialMetadataOrBuilder(
      int index);

  public io.envoyproxy.envoy.api.v2.core.GrpcService.TargetSpecifierCase getTargetSpecifierCase();
}
