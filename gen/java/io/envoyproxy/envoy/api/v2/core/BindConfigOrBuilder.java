// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/api/v2/core/address.proto

package io.envoyproxy.envoy.api.v2.core;

public interface BindConfigOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.api.v2.core.BindConfig)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The address to bind to when creating a socket.
   * </pre>
   *
   * <code>.envoy.api.v2.core.SocketAddress source_address = 1 [(.validate.rules) = { ... }</code>
   * @return Whether the sourceAddress field is set.
   */
  boolean hasSourceAddress();
  /**
   * <pre>
   * The address to bind to when creating a socket.
   * </pre>
   *
   * <code>.envoy.api.v2.core.SocketAddress source_address = 1 [(.validate.rules) = { ... }</code>
   * @return The sourceAddress.
   */
  io.envoyproxy.envoy.api.v2.core.SocketAddress getSourceAddress();
  /**
   * <pre>
   * The address to bind to when creating a socket.
   * </pre>
   *
   * <code>.envoy.api.v2.core.SocketAddress source_address = 1 [(.validate.rules) = { ... }</code>
   */
  io.envoyproxy.envoy.api.v2.core.SocketAddressOrBuilder getSourceAddressOrBuilder();

  /**
   * <pre>
   * Whether to set the *IP_FREEBIND* option when creating the socket. When this
   * flag is set to true, allows the :ref:`source_address
   * &lt;envoy_api_field_UpstreamBindConfig.source_address&gt;` to be an IP address
   * that is not configured on the system running Envoy. When this flag is set
   * to false, the option *IP_FREEBIND* is disabled on the socket. When this
   * flag is not set (default), the socket is not modified, i.e. the option is
   * neither enabled nor disabled.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue freebind = 2;</code>
   * @return Whether the freebind field is set.
   */
  boolean hasFreebind();
  /**
   * <pre>
   * Whether to set the *IP_FREEBIND* option when creating the socket. When this
   * flag is set to true, allows the :ref:`source_address
   * &lt;envoy_api_field_UpstreamBindConfig.source_address&gt;` to be an IP address
   * that is not configured on the system running Envoy. When this flag is set
   * to false, the option *IP_FREEBIND* is disabled on the socket. When this
   * flag is not set (default), the socket is not modified, i.e. the option is
   * neither enabled nor disabled.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue freebind = 2;</code>
   * @return The freebind.
   */
  com.google.protobuf.BoolValue getFreebind();
  /**
   * <pre>
   * Whether to set the *IP_FREEBIND* option when creating the socket. When this
   * flag is set to true, allows the :ref:`source_address
   * &lt;envoy_api_field_UpstreamBindConfig.source_address&gt;` to be an IP address
   * that is not configured on the system running Envoy. When this flag is set
   * to false, the option *IP_FREEBIND* is disabled on the socket. When this
   * flag is not set (default), the socket is not modified, i.e. the option is
   * neither enabled nor disabled.
   * </pre>
   *
   * <code>.google.protobuf.BoolValue freebind = 2;</code>
   */
  com.google.protobuf.BoolValueOrBuilder getFreebindOrBuilder();

  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
   */
  java.util.List<io.envoyproxy.envoy.api.v2.core.SocketOption> 
      getSocketOptionsList();
  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
   */
  io.envoyproxy.envoy.api.v2.core.SocketOption getSocketOptions(int index);
  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
   */
  int getSocketOptionsCount();
  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.api.v2.core.SocketOptionOrBuilder> 
      getSocketOptionsOrBuilderList();
  /**
   * <pre>
   * Additional socket options that may not be present in Envoy source code or
   * precompiled binaries.
   * </pre>
   *
   * <code>repeated .envoy.api.v2.core.SocketOption socket_options = 3;</code>
   */
  io.envoyproxy.envoy.api.v2.core.SocketOptionOrBuilder getSocketOptionsOrBuilder(
      int index);
}
