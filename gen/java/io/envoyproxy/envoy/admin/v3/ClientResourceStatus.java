// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/admin/v3/config_dump_shared.proto

package io.envoyproxy.envoy.admin.v3;

/**
 * <pre>
 * Resource status from the view of a xDS client, which tells the synchronization
 * status between the xDS client and the xDS server.
 * </pre>
 *
 * Protobuf enum {@code envoy.admin.v3.ClientResourceStatus}
 */
public enum ClientResourceStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Resource status is not available/unknown.
   * </pre>
   *
   * <code>UNKNOWN = 0;</code>
   */
  UNKNOWN(0),
  /**
   * <pre>
   * Client requested this resource but hasn't received any update from management
   * server. The client will not fail requests, but will queue them until update
   * arrives or the client times out waiting for the resource.
   * </pre>
   *
   * <code>REQUESTED = 1;</code>
   */
  REQUESTED(1),
  /**
   * <pre>
   * This resource has been requested by the client but has either not been
   * delivered by the server or was previously delivered by the server and then
   * subsequently removed from resources provided by the server. For more
   * information, please refer to the :ref:`"Knowing When a Requested Resource
   * Does Not Exist" &lt;xds_protocol_resource_not_existed&gt;` section.
   * </pre>
   *
   * <code>DOES_NOT_EXIST = 2;</code>
   */
  DOES_NOT_EXIST(2),
  /**
   * <pre>
   * Client received this resource and replied with ACK.
   * </pre>
   *
   * <code>ACKED = 3;</code>
   */
  ACKED(3),
  /**
   * <pre>
   * Client received this resource and replied with NACK.
   * </pre>
   *
   * <code>NACKED = 4;</code>
   */
  NACKED(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * Resource status is not available/unknown.
   * </pre>
   *
   * <code>UNKNOWN = 0;</code>
   */
  public static final int UNKNOWN_VALUE = 0;
  /**
   * <pre>
   * Client requested this resource but hasn't received any update from management
   * server. The client will not fail requests, but will queue them until update
   * arrives or the client times out waiting for the resource.
   * </pre>
   *
   * <code>REQUESTED = 1;</code>
   */
  public static final int REQUESTED_VALUE = 1;
  /**
   * <pre>
   * This resource has been requested by the client but has either not been
   * delivered by the server or was previously delivered by the server and then
   * subsequently removed from resources provided by the server. For more
   * information, please refer to the :ref:`"Knowing When a Requested Resource
   * Does Not Exist" &lt;xds_protocol_resource_not_existed&gt;` section.
   * </pre>
   *
   * <code>DOES_NOT_EXIST = 2;</code>
   */
  public static final int DOES_NOT_EXIST_VALUE = 2;
  /**
   * <pre>
   * Client received this resource and replied with ACK.
   * </pre>
   *
   * <code>ACKED = 3;</code>
   */
  public static final int ACKED_VALUE = 3;
  /**
   * <pre>
   * Client received this resource and replied with NACK.
   * </pre>
   *
   * <code>NACKED = 4;</code>
   */
  public static final int NACKED_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ClientResourceStatus valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ClientResourceStatus forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN;
      case 1: return REQUESTED;
      case 2: return DOES_NOT_EXIST;
      case 3: return ACKED;
      case 4: return NACKED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ClientResourceStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ClientResourceStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ClientResourceStatus>() {
          public ClientResourceStatus findValueByNumber(int number) {
            return ClientResourceStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return io.envoyproxy.envoy.admin.v3.ConfigDumpSharedProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final ClientResourceStatus[] VALUES = values();

  public static ClientResourceStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ClientResourceStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:envoy.admin.v3.ClientResourceStatus)
}

