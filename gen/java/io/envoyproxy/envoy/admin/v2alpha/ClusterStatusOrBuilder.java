// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/admin/v2alpha/clusters.proto

package io.envoyproxy.envoy.admin.v2alpha;

public interface ClusterStatusOrBuilder extends
    // @@protoc_insertion_point(interface_extends:envoy.admin.v2alpha.ClusterStatus)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Name of the cluster.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Name of the cluster.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Denotes whether this cluster was added via API or configured statically.
   * </pre>
   *
   * <code>bool added_via_api = 2;</code>
   * @return The addedViaApi.
   */
  boolean getAddedViaApi();

  /**
   * <pre>
   * The success rate threshold used in the last interval.
   * If
   * :ref:`outlier_detection.split_external_local_origin_errors&lt;envoy_api_field_cluster.OutlierDetection.split_external_local_origin_errors&gt;`
   * is *false*, all errors: externally and locally generated were used to calculate the threshold.
   * If
   * :ref:`outlier_detection.split_external_local_origin_errors&lt;envoy_api_field_cluster.OutlierDetection.split_external_local_origin_errors&gt;`
   * is *true*, only externally generated errors were used to calculate the threshold.
   * The threshold is used to eject hosts based on their success rate. See
   * :ref:`Cluster outlier detection &lt;arch_overview_outlier_detection&gt;` documentation for details.
   * Note: this field may be omitted in any of the three following cases:
   * 1. There were not enough hosts with enough request volume to proceed with success rate based
   *    outlier ejection.
   * 2. The threshold is computed to be &lt; 0 because a negative value implies that there was no
   *    threshold for that interval.
   * 3. Outlier detection is not enabled for this cluster.
   * </pre>
   *
   * <code>.envoy.type.Percent success_rate_ejection_threshold = 3;</code>
   * @return Whether the successRateEjectionThreshold field is set.
   */
  boolean hasSuccessRateEjectionThreshold();
  /**
   * <pre>
   * The success rate threshold used in the last interval.
   * If
   * :ref:`outlier_detection.split_external_local_origin_errors&lt;envoy_api_field_cluster.OutlierDetection.split_external_local_origin_errors&gt;`
   * is *false*, all errors: externally and locally generated were used to calculate the threshold.
   * If
   * :ref:`outlier_detection.split_external_local_origin_errors&lt;envoy_api_field_cluster.OutlierDetection.split_external_local_origin_errors&gt;`
   * is *true*, only externally generated errors were used to calculate the threshold.
   * The threshold is used to eject hosts based on their success rate. See
   * :ref:`Cluster outlier detection &lt;arch_overview_outlier_detection&gt;` documentation for details.
   * Note: this field may be omitted in any of the three following cases:
   * 1. There were not enough hosts with enough request volume to proceed with success rate based
   *    outlier ejection.
   * 2. The threshold is computed to be &lt; 0 because a negative value implies that there was no
   *    threshold for that interval.
   * 3. Outlier detection is not enabled for this cluster.
   * </pre>
   *
   * <code>.envoy.type.Percent success_rate_ejection_threshold = 3;</code>
   * @return The successRateEjectionThreshold.
   */
  io.envoyproxy.envoy.type.Percent getSuccessRateEjectionThreshold();
  /**
   * <pre>
   * The success rate threshold used in the last interval.
   * If
   * :ref:`outlier_detection.split_external_local_origin_errors&lt;envoy_api_field_cluster.OutlierDetection.split_external_local_origin_errors&gt;`
   * is *false*, all errors: externally and locally generated were used to calculate the threshold.
   * If
   * :ref:`outlier_detection.split_external_local_origin_errors&lt;envoy_api_field_cluster.OutlierDetection.split_external_local_origin_errors&gt;`
   * is *true*, only externally generated errors were used to calculate the threshold.
   * The threshold is used to eject hosts based on their success rate. See
   * :ref:`Cluster outlier detection &lt;arch_overview_outlier_detection&gt;` documentation for details.
   * Note: this field may be omitted in any of the three following cases:
   * 1. There were not enough hosts with enough request volume to proceed with success rate based
   *    outlier ejection.
   * 2. The threshold is computed to be &lt; 0 because a negative value implies that there was no
   *    threshold for that interval.
   * 3. Outlier detection is not enabled for this cluster.
   * </pre>
   *
   * <code>.envoy.type.Percent success_rate_ejection_threshold = 3;</code>
   */
  io.envoyproxy.envoy.type.PercentOrBuilder getSuccessRateEjectionThresholdOrBuilder();

  /**
   * <pre>
   * Mapping from host address to the host's current status.
   * </pre>
   *
   * <code>repeated .envoy.admin.v2alpha.HostStatus host_statuses = 4;</code>
   */
  java.util.List<io.envoyproxy.envoy.admin.v2alpha.HostStatus> 
      getHostStatusesList();
  /**
   * <pre>
   * Mapping from host address to the host's current status.
   * </pre>
   *
   * <code>repeated .envoy.admin.v2alpha.HostStatus host_statuses = 4;</code>
   */
  io.envoyproxy.envoy.admin.v2alpha.HostStatus getHostStatuses(int index);
  /**
   * <pre>
   * Mapping from host address to the host's current status.
   * </pre>
   *
   * <code>repeated .envoy.admin.v2alpha.HostStatus host_statuses = 4;</code>
   */
  int getHostStatusesCount();
  /**
   * <pre>
   * Mapping from host address to the host's current status.
   * </pre>
   *
   * <code>repeated .envoy.admin.v2alpha.HostStatus host_statuses = 4;</code>
   */
  java.util.List<? extends io.envoyproxy.envoy.admin.v2alpha.HostStatusOrBuilder> 
      getHostStatusesOrBuilderList();
  /**
   * <pre>
   * Mapping from host address to the host's current status.
   * </pre>
   *
   * <code>repeated .envoy.admin.v2alpha.HostStatus host_statuses = 4;</code>
   */
  io.envoyproxy.envoy.admin.v2alpha.HostStatusOrBuilder getHostStatusesOrBuilder(
      int index);

  /**
   * <pre>
   * The success rate threshold used in the last interval when only locally originated failures were
   * taken into account and externally originated errors were treated as success.
   * This field should be interpreted only when
   * :ref:`outlier_detection.split_external_local_origin_errors&lt;envoy_api_field_cluster.OutlierDetection.split_external_local_origin_errors&gt;`
   * is *true*. The threshold is used to eject hosts based on their success rate.
   * See :ref:`Cluster outlier detection &lt;arch_overview_outlier_detection&gt;` documentation for
   * details.
   * Note: this field may be omitted in any of the three following cases:
   * 1. There were not enough hosts with enough request volume to proceed with success rate based
   *    outlier ejection.
   * 2. The threshold is computed to be &lt; 0 because a negative value implies that there was no
   *    threshold for that interval.
   * 3. Outlier detection is not enabled for this cluster.
   * </pre>
   *
   * <code>.envoy.type.Percent local_origin_success_rate_ejection_threshold = 5;</code>
   * @return Whether the localOriginSuccessRateEjectionThreshold field is set.
   */
  boolean hasLocalOriginSuccessRateEjectionThreshold();
  /**
   * <pre>
   * The success rate threshold used in the last interval when only locally originated failures were
   * taken into account and externally originated errors were treated as success.
   * This field should be interpreted only when
   * :ref:`outlier_detection.split_external_local_origin_errors&lt;envoy_api_field_cluster.OutlierDetection.split_external_local_origin_errors&gt;`
   * is *true*. The threshold is used to eject hosts based on their success rate.
   * See :ref:`Cluster outlier detection &lt;arch_overview_outlier_detection&gt;` documentation for
   * details.
   * Note: this field may be omitted in any of the three following cases:
   * 1. There were not enough hosts with enough request volume to proceed with success rate based
   *    outlier ejection.
   * 2. The threshold is computed to be &lt; 0 because a negative value implies that there was no
   *    threshold for that interval.
   * 3. Outlier detection is not enabled for this cluster.
   * </pre>
   *
   * <code>.envoy.type.Percent local_origin_success_rate_ejection_threshold = 5;</code>
   * @return The localOriginSuccessRateEjectionThreshold.
   */
  io.envoyproxy.envoy.type.Percent getLocalOriginSuccessRateEjectionThreshold();
  /**
   * <pre>
   * The success rate threshold used in the last interval when only locally originated failures were
   * taken into account and externally originated errors were treated as success.
   * This field should be interpreted only when
   * :ref:`outlier_detection.split_external_local_origin_errors&lt;envoy_api_field_cluster.OutlierDetection.split_external_local_origin_errors&gt;`
   * is *true*. The threshold is used to eject hosts based on their success rate.
   * See :ref:`Cluster outlier detection &lt;arch_overview_outlier_detection&gt;` documentation for
   * details.
   * Note: this field may be omitted in any of the three following cases:
   * 1. There were not enough hosts with enough request volume to proceed with success rate based
   *    outlier ejection.
   * 2. The threshold is computed to be &lt; 0 because a negative value implies that there was no
   *    threshold for that interval.
   * 3. Outlier detection is not enabled for this cluster.
   * </pre>
   *
   * <code>.envoy.type.Percent local_origin_success_rate_ejection_threshold = 5;</code>
   */
  io.envoyproxy.envoy.type.PercentOrBuilder getLocalOriginSuccessRateEjectionThresholdOrBuilder();
}
