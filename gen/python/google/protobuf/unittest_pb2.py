# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/protobuf/unittest.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import unittest_import_pb2 as google_dot_protobuf_dot_unittest__import__pb2
try:
  google_dot_protobuf_dot_unittest__import__public__pb2 = google_dot_protobuf_dot_unittest__import__pb2.google_dot_protobuf_dot_unittest__import__public__pb2
except AttributeError:
  google_dot_protobuf_dot_unittest__import__public__pb2 = google_dot_protobuf_dot_unittest__import__pb2.google.protobuf.unittest_import_public_pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1egoogle/protobuf/unittest.proto\x12\x11protobuf_unittest\x1a%google/protobuf/unittest_import.proto\"\xca\x19\n\x0cTestAllTypes\x12\x16\n\x0eoptional_int32\x18\x01 \x01(\x05\x12\x16\n\x0eoptional_int64\x18\x02 \x01(\x03\x12\x17\n\x0foptional_uint32\x18\x03 \x01(\r\x12\x17\n\x0foptional_uint64\x18\x04 \x01(\x04\x12\x17\n\x0foptional_sint32\x18\x05 \x01(\x11\x12\x17\n\x0foptional_sint64\x18\x06 \x01(\x12\x12\x18\n\x10optional_fixed32\x18\x07 \x01(\x07\x12\x18\n\x10optional_fixed64\x18\x08 \x01(\x06\x12\x19\n\x11optional_sfixed32\x18\t \x01(\x0f\x12\x19\n\x11optional_sfixed64\x18\n \x01(\x10\x12\x16\n\x0eoptional_float\x18\x0b \x01(\x02\x12\x17\n\x0foptional_double\x18\x0c \x01(\x01\x12\x15\n\roptional_bool\x18\r \x01(\x08\x12\x17\n\x0foptional_string\x18\x0e \x01(\t\x12\x16\n\x0eoptional_bytes\x18\x0f \x01(\x0c\x12\x44\n\roptionalgroup\x18\x10 \x01(\n2-.protobuf_unittest.TestAllTypes.OptionalGroup\x12N\n\x17optional_nested_message\x18\x12 \x01(\x0b\x32-.protobuf_unittest.TestAllTypes.NestedMessage\x12\x43\n\x18optional_foreign_message\x18\x13 \x01(\x0b\x32!.protobuf_unittest.ForeignMessage\x12H\n\x17optional_import_message\x18\x14 \x01(\x0b\x32\'.protobuf_unittest_import.ImportMessage\x12H\n\x14optional_nested_enum\x18\x15 \x01(\x0e\x32*.protobuf_unittest.TestAllTypes.NestedEnum\x12=\n\x15optional_foreign_enum\x18\x16 \x01(\x0e\x32\x1e.protobuf_unittest.ForeignEnum\x12\x42\n\x14optional_import_enum\x18\x17 \x01(\x0e\x32$.protobuf_unittest_import.ImportEnum\x12!\n\x15optional_string_piece\x18\x18 \x01(\tB\x02\x08\x02\x12\x19\n\roptional_cord\x18\x19 \x01(\tB\x02\x08\x01\x12U\n\x1eoptional_public_import_message\x18\x1a \x01(\x0b\x32-.protobuf_unittest_import.PublicImportMessage\x12P\n\x15optional_lazy_message\x18\x1b \x01(\x0b\x32-.protobuf_unittest.TestAllTypes.NestedMessageB\x02(\x01\x12[\n optional_unverified_lazy_message\x18\x1c \x01(\x0b\x32-.protobuf_unittest.TestAllTypes.NestedMessageB\x02x\x01\x12\x16\n\x0erepeated_int32\x18\x1f \x03(\x05\x12\x16\n\x0erepeated_int64\x18  \x03(\x03\x12\x17\n\x0frepeated_uint32\x18! \x03(\r\x12\x17\n\x0frepeated_uint64\x18\" \x03(\x04\x12\x17\n\x0frepeated_sint32\x18# \x03(\x11\x12\x17\n\x0frepeated_sint64\x18$ \x03(\x12\x12\x18\n\x10repeated_fixed32\x18% \x03(\x07\x12\x18\n\x10repeated_fixed64\x18& \x03(\x06\x12\x19\n\x11repeated_sfixed32\x18\' \x03(\x0f\x12\x19\n\x11repeated_sfixed64\x18( \x03(\x10\x12\x16\n\x0erepeated_float\x18) \x03(\x02\x12\x17\n\x0frepeated_double\x18* \x03(\x01\x12\x15\n\rrepeated_bool\x18+ \x03(\x08\x12\x17\n\x0frepeated_string\x18, \x03(\t\x12\x16\n\x0erepeated_bytes\x18- \x03(\x0c\x12\x44\n\rrepeatedgroup\x18. \x03(\n2-.protobuf_unittest.TestAllTypes.RepeatedGroup\x12N\n\x17repeated_nested_message\x18\x30 \x03(\x0b\x32-.protobuf_unittest.TestAllTypes.NestedMessage\x12\x43\n\x18repeated_foreign_message\x18\x31 \x03(\x0b\x32!.protobuf_unittest.ForeignMessage\x12H\n\x17repeated_import_message\x18\x32 \x03(\x0b\x32\'.protobuf_unittest_import.ImportMessage\x12H\n\x14repeated_nested_enum\x18\x33 \x03(\x0e\x32*.protobuf_unittest.TestAllTypes.NestedEnum\x12=\n\x15repeated_foreign_enum\x18\x34 \x03(\x0e\x32\x1e.protobuf_unittest.ForeignEnum\x12\x42\n\x14repeated_import_enum\x18\x35 \x03(\x0e\x32$.protobuf_unittest_import.ImportEnum\x12!\n\x15repeated_string_piece\x18\x36 \x03(\tB\x02\x08\x02\x12\x19\n\rrepeated_cord\x18\x37 \x03(\tB\x02\x08\x01\x12P\n\x15repeated_lazy_message\x18\x39 \x03(\x0b\x32-.protobuf_unittest.TestAllTypes.NestedMessageB\x02(\x01\x12\x19\n\rdefault_int32\x18= \x01(\x05:\x02\x34\x31\x12\x19\n\rdefault_int64\x18> \x01(\x03:\x02\x34\x32\x12\x1a\n\x0e\x64\x65\x66\x61ult_uint32\x18? \x01(\r:\x02\x34\x33\x12\x1a\n\x0e\x64\x65\x66\x61ult_uint64\x18@ \x01(\x04:\x02\x34\x34\x12\x1b\n\x0e\x64\x65\x66\x61ult_sint32\x18\x41 \x01(\x11:\x03-45\x12\x1a\n\x0e\x64\x65\x66\x61ult_sint64\x18\x42 \x01(\x12:\x02\x34\x36\x12\x1b\n\x0f\x64\x65\x66\x61ult_fixed32\x18\x43 \x01(\x07:\x02\x34\x37\x12\x1b\n\x0f\x64\x65\x66\x61ult_fixed64\x18\x44 \x01(\x06:\x02\x34\x38\x12\x1c\n\x10\x64\x65\x66\x61ult_sfixed32\x18\x45 \x01(\x0f:\x02\x34\x39\x12\x1d\n\x10\x64\x65\x66\x61ult_sfixed64\x18\x46 \x01(\x10:\x03-50\x12\x1b\n\rdefault_float\x18G \x01(\x02:\x04\x35\x31.5\x12\x1d\n\x0e\x64\x65\x66\x61ult_double\x18H \x01(\x01:\x05\x35\x32\x30\x30\x30\x12\x1a\n\x0c\x64\x65\x66\x61ult_bool\x18I \x01(\x08:\x04true\x12\x1d\n\x0e\x64\x65\x66\x61ult_string\x18J \x01(\t:\x05hello\x12\x1c\n\rdefault_bytes\x18K \x01(\x0c:\x05world\x12L\n\x13\x64\x65\x66\x61ult_nested_enum\x18Q \x01(\x0e\x32*.protobuf_unittest.TestAllTypes.NestedEnum:\x03\x42\x41R\x12I\n\x14\x64\x65\x66\x61ult_foreign_enum\x18R \x01(\x0e\x32\x1e.protobuf_unittest.ForeignEnum:\x0b\x46OREIGN_BAR\x12M\n\x13\x64\x65\x66\x61ult_import_enum\x18S \x01(\x0e\x32$.protobuf_unittest_import.ImportEnum:\nIMPORT_BAR\x12%\n\x14\x64\x65\x66\x61ult_string_piece\x18T \x01(\t:\x03\x61\x62\x63\x42\x02\x08\x02\x12\x1d\n\x0c\x64\x65\x66\x61ult_cord\x18U \x01(\t:\x03\x31\x32\x33\x42\x02\x08\x01\x12\x16\n\x0coneof_uint32\x18o \x01(\rH\x00\x12M\n\x14oneof_nested_message\x18p \x01(\x0b\x32-.protobuf_unittest.TestAllTypes.NestedMessageH\x00\x12\x16\n\x0coneof_string\x18q \x01(\tH\x00\x12\x15\n\x0boneof_bytes\x18r \x01(\x0cH\x00\x1a\x1b\n\rNestedMessage\x12\n\n\x02\x62\x62\x18\x01 \x01(\x05\x1a\x1a\n\rOptionalGroup\x12\t\n\x01\x61\x18\x11 \x01(\x05\x1a\x1a\n\rRepeatedGroup\x12\t\n\x01\x61\x18/ \x01(\x05\"9\n\nNestedEnum\x12\x07\n\x03\x46OO\x10\x01\x12\x07\n\x03\x42\x41R\x10\x02\x12\x07\n\x03\x42\x41Z\x10\x03\x12\x10\n\x03NEG\x10\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\x42\r\n\x0boneof_field\"\xb4\x02\n\x12NestedTestAllTypes\x12\x34\n\x05\x63hild\x18\x01 \x01(\x0b\x32%.protobuf_unittest.NestedTestAllTypes\x12\x30\n\x07payload\x18\x02 \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12=\n\x0erepeated_child\x18\x03 \x03(\x0b\x32%.protobuf_unittest.NestedTestAllTypes\x12=\n\nlazy_child\x18\x04 \x01(\x0b\x32%.protobuf_unittest.NestedTestAllTypesB\x02(\x01\x12\x38\n\x0b\x65\x61ger_child\x18\x05 \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypesB\x02(\x00\"\x9d\x02\n\x14TestDeprecatedFields\x12\x1c\n\x10\x64\x65precated_int32\x18\x01 \x01(\x05\x42\x02\x18\x01\x12&\n\x1a\x64\x65precated_repeated_string\x18\x04 \x03(\tB\x02\x18\x01\x12M\n\x12\x64\x65precated_message\x18\x03 \x01(\x0b\x32-.protobuf_unittest.TestAllTypes.NestedMessageB\x02\x18\x01\x12\'\n\x19\x64\x65precated_int32_in_oneof\x18\x02 \x01(\x05\x42\x02\x18\x01H\x00\x12\x37\n\x06nested\x18\x05 \x01(\x0b\x32\'.protobuf_unittest.TestDeprecatedFieldsB\x0e\n\x0coneof_fields\"\x1b\n\x15TestDeprecatedMessage:\x02\x18\x01\"&\n\x0e\x46oreignMessage\x12\t\n\x01\x63\x18\x01 \x01(\x05\x12\t\n\x01\x64\x18\x02 \x01(\x05\"0\n\x12TestReservedFieldsJ\x04\x08\x02\x10\x03J\x04\x08\x0f\x10\x10J\x04\x08\t\x10\x0cR\x03\x62\x61rR\x03\x62\x61z\"\x1d\n\x11TestAllExtensions*\x08\x08\x01\x10\x80\x80\x80\x80\x02\"$\n\x17OptionalGroup_extension\x12\t\n\x01\x61\x18\x11 \x01(\x05\"$\n\x17RepeatedGroup_extension\x12\t\n\x01\x61\x18/ \x01(\x05\"\xb8\x01\n\x1cTestMixedFieldsAndExtensions\x12\t\n\x01\x61\x18\x01 \x01(\x05\x12\t\n\x01\x62\x18\x03 \x03(\x07*\x04\x08\x02\x10\x03*\x04\x08\x04\x10\x05\x32:\n\x01\x63\x12/.protobuf_unittest.TestMixedFieldsAndExtensions\x18\x02 \x01(\x05\x32:\n\x01\x64\x12/.protobuf_unittest.TestMixedFieldsAndExtensions\x18\x04 \x03(\x07\"\xb5\x01\n\tTestGroup\x12\x41\n\roptionalgroup\x18\x10 \x01(\n2*.protobuf_unittest.TestGroup.OptionalGroup\x12=\n\x15optional_foreign_enum\x18\x16 \x01(\x0e\x32\x1e.protobuf_unittest.ForeignEnum\x1a&\n\rOptionalGroup\x12\t\n\x01\x61\x18\x11 \x01(\x05\x12\n\n\x02zz\x18Y \x01(\x05\"\x1e\n\x12TestGroupExtension*\x08\x08\x01\x10\x80\x80\x80\x80\x02\"\xb7\x03\n\x13TestNestedExtension\x1a$\n\x17OptionalGroup_extension\x12\t\n\x01\x61\x18\x11 \x01(\x05\x32\x39\n\x04test\x12$.protobuf_unittest.TestAllExtensions\x18\xea\x07 \x01(\t:\x04test2F\n\x17nested_string_extension\x12$.protobuf_unittest.TestAllExtensions\x18\xeb\x07 \x01(\t2\x86\x01\n\x17optionalgroup_extension\x12%.protobuf_unittest.TestGroupExtension\x18\x10 \x01(\n2>.protobuf_unittest.TestNestedExtension.OptionalGroup_extension2n\n\x1foptional_foreign_enum_extension\x12%.protobuf_unittest.TestGroupExtension\x18\x16 \x01(\x0e\x32\x1e.protobuf_unittest.ForeignEnum\"l\n\x12TestChildExtension\x12\t\n\x01\x61\x18\x01 \x01(\t\x12\t\n\x01\x62\x18\x02 \x01(\t\x12@\n\x12optional_extension\x18\x03 \x01(\x0b\x32$.protobuf_unittest.TestAllExtensions\"\xd6\x02\n\x16TestChildExtensionData\x12\t\n\x01\x61\x18\x01 \x01(\t\x12\t\n\x01\x62\x18\x02 \x01(\t\x12\x61\n\x12optional_extension\x18\x03 \x01(\x0b\x32\x45.protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData\x1a\xc2\x01\n\x1bNestedTestAllExtensionsData\x12r\n\x07\x64ynamic\x18\x80\xc4\xae\xc3\x01 \x01(\x0b\x32].protobuf_unittest.TestChildExtensionData.NestedTestAllExtensionsData.NestedDynamicExtensions\x1a/\n\x17NestedDynamicExtensions\x12\t\n\x01\x61\x18\x01 \x01(\x05\x12\t\n\x01\x62\x18\x02 \x01(\x05\"[\n\x18TestNestedChildExtension\x12\t\n\x01\x61\x18\x01 \x01(\x05\x12\x34\n\x05\x63hild\x18\x02 \x01(\x0b\x32%.protobuf_unittest.TestChildExtension\"c\n\x1cTestNestedChildExtensionData\x12\t\n\x01\x61\x18\x01 \x01(\x05\x12\x38\n\x05\x63hild\x18\x02 \x01(\x0b\x32).protobuf_unittest.TestChildExtensionData\"\x92\x06\n\x0cTestRequired\x12\t\n\x01\x61\x18\x01 \x02(\x05\x12\x0e\n\x06\x64ummy2\x18\x02 \x01(\x05\x12\t\n\x01\x62\x18\x03 \x02(\x05\x12\x0e\n\x06\x64ummy4\x18\x04 \x01(\x05\x12\x0e\n\x06\x64ummy5\x18\x05 \x01(\x05\x12\x0e\n\x06\x64ummy6\x18\x06 \x01(\x05\x12\x0e\n\x06\x64ummy7\x18\x07 \x01(\x05\x12\x0e\n\x06\x64ummy8\x18\x08 \x01(\x05\x12\x0e\n\x06\x64ummy9\x18\t \x01(\x05\x12\x0f\n\x07\x64ummy10\x18\n \x01(\x05\x12\x0f\n\x07\x64ummy11\x18\x0b \x01(\x05\x12\x0f\n\x07\x64ummy12\x18\x0c \x01(\x05\x12\x0f\n\x07\x64ummy13\x18\r \x01(\x05\x12\x0f\n\x07\x64ummy14\x18\x0e \x01(\x05\x12\x0f\n\x07\x64ummy15\x18\x0f \x01(\x05\x12\x0f\n\x07\x64ummy16\x18\x10 \x01(\x05\x12\x0f\n\x07\x64ummy17\x18\x11 \x01(\x05\x12\x0f\n\x07\x64ummy18\x18\x12 \x01(\x05\x12\x0f\n\x07\x64ummy19\x18\x13 \x01(\x05\x12\x0f\n\x07\x64ummy20\x18\x14 \x01(\x05\x12\x0f\n\x07\x64ummy21\x18\x15 \x01(\x05\x12\x0f\n\x07\x64ummy22\x18\x16 \x01(\x05\x12\x0f\n\x07\x64ummy23\x18\x17 \x01(\x05\x12\x0f\n\x07\x64ummy24\x18\x18 \x01(\x05\x12\x0f\n\x07\x64ummy25\x18\x19 \x01(\x05\x12\x0f\n\x07\x64ummy26\x18\x1a \x01(\x05\x12\x0f\n\x07\x64ummy27\x18\x1b \x01(\x05\x12\x0f\n\x07\x64ummy28\x18\x1c \x01(\x05\x12\x0f\n\x07\x64ummy29\x18\x1d \x01(\x05\x12\x0f\n\x07\x64ummy30\x18\x1e \x01(\x05\x12\x0f\n\x07\x64ummy31\x18\x1f \x01(\x05\x12\x0f\n\x07\x64ummy32\x18  \x01(\x05\x12\t\n\x01\x63\x18! \x02(\x05\x12;\n\x10optional_foreign\x18\" \x01(\x0b\x32!.protobuf_unittest.ForeignMessage2V\n\x06single\x12$.protobuf_unittest.TestAllExtensions\x18\xe8\x07 \x01(\x0b\x32\x1f.protobuf_unittest.TestRequired2U\n\x05multi\x12$.protobuf_unittest.TestAllExtensions\x18\xe9\x07 \x03(\x0b\x32\x1f.protobuf_unittest.TestRequired\"\xe4\x01\n\x13TestRequiredForeign\x12\x39\n\x10optional_message\x18\x01 \x01(\x0b\x32\x1f.protobuf_unittest.TestRequired\x12\x39\n\x10repeated_message\x18\x02 \x03(\x0b\x32\x1f.protobuf_unittest.TestRequired\x12\r\n\x05\x64ummy\x18\x03 \x01(\x05\x12H\n\x15optional_lazy_message\x18\x04 \x01(\x0b\x32%.protobuf_unittest.NestedTestAllTypesB\x02(\x01\"\xc6\x01\n\x13TestRequiredMessage\x12\x39\n\x10optional_message\x18\x01 \x01(\x0b\x32\x1f.protobuf_unittest.TestRequired\x12\x39\n\x10repeated_message\x18\x02 \x03(\x0b\x32\x1f.protobuf_unittest.TestRequired\x12\x39\n\x10required_message\x18\x03 \x02(\x0b\x32\x1f.protobuf_unittest.TestRequired\"\xa0\x01\n\x19TestNestedRequiredForeign\x12;\n\x05\x63hild\x18\x01 \x01(\x0b\x32,.protobuf_unittest.TestNestedRequiredForeign\x12\x37\n\x07payload\x18\x02 \x01(\x0b\x32&.protobuf_unittest.TestRequiredForeign\x12\r\n\x05\x64ummy\x18\x03 \x01(\x05\"Z\n\x11TestForeignNested\x12\x45\n\x0e\x66oreign_nested\x18\x01 \x01(\x0b\x32-.protobuf_unittest.TestAllTypes.NestedMessage\"\x12\n\x10TestEmptyMessage\"*\n\x1eTestEmptyMessageWithExtensions*\x08\x08\x01\x10\x80\x80\x80\x80\x02\"Y\n\x17TestPickleNestedMessage\x1a>\n\rNestedMessage\x12\n\n\x02\x62\x62\x18\x01 \x01(\x05\x1a!\n\x13NestedNestedMessage\x12\n\n\x02\x63\x63\x18\x01 \x01(\x05\"7\n\x1bTestMultipleExtensionRanges*\x04\x08*\x10+*\x06\x08\xaf \x10\x94!*\n\x08\x80\x80\x04\x10\x80\x80\x80\x80\x02\"4\n\x18TestReallyLargeTagNumber\x12\t\n\x01\x61\x18\x01 \x01(\x05\x12\r\n\x02\x62\x62\x18\xff\xff\xff\x7f \x01(\x05\"U\n\x14TestRecursiveMessage\x12\x32\n\x01\x61\x18\x01 \x01(\x0b\x32\'.protobuf_unittest.TestRecursiveMessage\x12\t\n\x01i\x18\x02 \x01(\x05\"\xe1\x02\n\x14TestMutualRecursionA\x12\x33\n\x02\x62\x62\x18\x01 \x01(\x0b\x32\'.protobuf_unittest.TestMutualRecursionB\x12\x42\n\x08subgroup\x18\x02 \x01(\n20.protobuf_unittest.TestMutualRecursionA.SubGroup\x1a@\n\nSubMessage\x12\x32\n\x01\x62\x18\x01 \x01(\x0b\x32\'.protobuf_unittest.TestMutualRecursionB\x1a\x8d\x01\n\x08SubGroup\x12G\n\x0bsub_message\x18\x03 \x01(\x0b\x32\x32.protobuf_unittest.TestMutualRecursionA.SubMessage\x12\x38\n\x0fnot_in_this_scc\x18\x04 \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\"b\n\x14TestMutualRecursionB\x12\x32\n\x01\x61\x18\x01 \x01(\x0b\x32\'.protobuf_unittest.TestMutualRecursionA\x12\x16\n\x0eoptional_int32\x18\x02 \x01(\x05\"\xca\x01\n\x11TestIsInitialized\x12\x44\n\x0bsub_message\x18\x01 \x01(\x0b\x32/.protobuf_unittest.TestIsInitialized.SubMessage\x1ao\n\nSubMessage\x12J\n\x08subgroup\x18\x01 \x01(\n28.protobuf_unittest.TestIsInitialized.SubMessage.SubGroup\x1a\x15\n\x08SubGroup\x12\t\n\x01i\x18\x02 \x02(\x05\"\xb3\x01\n\x12TestDupFieldNumber\x12\t\n\x01\x61\x18\x01 \x01(\x05\x12\x36\n\x03\x66oo\x18\x02 \x01(\n2).protobuf_unittest.TestDupFieldNumber.Foo\x12\x36\n\x03\x62\x61r\x18\x03 \x01(\n2).protobuf_unittest.TestDupFieldNumber.Bar\x1a\x10\n\x03\x46oo\x12\t\n\x01\x61\x18\x01 \x01(\x05\x1a\x10\n\x03\x42\x61r\x12\t\n\x01\x61\x18\x01 \x01(\x05\"L\n\x10TestEagerMessage\x12\x38\n\x0bsub_message\x18\x01 \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypesB\x02(\x00\"K\n\x0fTestLazyMessage\x12\x38\n\x0bsub_message\x18\x01 \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypesB\x02(\x01\"\x8f\x02\n\x12TestEagerMaybeLazy\x12\x34\n\x0bmessage_foo\x18\x01 \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12\x34\n\x0bmessage_bar\x18\x02 \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12H\n\x0bmessage_baz\x18\x03 \x01(\x0b\x32\x33.protobuf_unittest.TestEagerMaybeLazy.NestedMessage\x1a\x43\n\rNestedMessage\x12\x32\n\x06packed\x18\x01 \x01(\x0b\x32\".protobuf_unittest.TestPackedTypes\"\x80\x02\n\x18TestNestedMessageHasBits\x12Z\n\x17optional_nested_message\x18\x01 \x01(\x0b\x32\x39.protobuf_unittest.TestNestedMessageHasBits.NestedMessage\x1a\x87\x01\n\rNestedMessage\x12$\n\x1cnestedmessage_repeated_int32\x18\x01 \x03(\x05\x12P\n%nestedmessage_repeated_foreignmessage\x18\x02 \x03(\x0b\x32!.protobuf_unittest.ForeignMessage\"\xe5\x03\n\x17TestCamelCaseFieldNames\x12\x16\n\x0ePrimitiveField\x18\x01 \x01(\x05\x12\x13\n\x0bStringField\x18\x02 \x01(\t\x12\x31\n\tEnumField\x18\x03 \x01(\x0e\x32\x1e.protobuf_unittest.ForeignEnum\x12\x37\n\x0cMessageField\x18\x04 \x01(\x0b\x32!.protobuf_unittest.ForeignMessage\x12\x1c\n\x10StringPieceField\x18\x05 \x01(\tB\x02\x08\x02\x12\x15\n\tCordField\x18\x06 \x01(\tB\x02\x08\x01\x12\x1e\n\x16RepeatedPrimitiveField\x18\x07 \x03(\x05\x12\x1b\n\x13RepeatedStringField\x18\x08 \x03(\t\x12\x39\n\x11RepeatedEnumField\x18\t \x03(\x0e\x32\x1e.protobuf_unittest.ForeignEnum\x12?\n\x14RepeatedMessageField\x18\n \x03(\x0b\x32!.protobuf_unittest.ForeignMessage\x12$\n\x18RepeatedStringPieceField\x18\x0b \x03(\tB\x02\x08\x02\x12\x1d\n\x11RepeatedCordField\x18\x0c \x03(\tB\x02\x08\x01\"\xd5\x01\n\x12TestFieldOrderings\x12\x11\n\tmy_string\x18\x0b \x01(\t\x12\x0e\n\x06my_int\x18\x01 \x01(\x03\x12\x10\n\x08my_float\x18\x65 \x01(\x02\x12U\n\x17optional_nested_message\x18\xc8\x01 \x01(\x0b\x32\x33.protobuf_unittest.TestFieldOrderings.NestedMessage\x1a\'\n\rNestedMessage\x12\n\n\x02oo\x18\x02 \x01(\x03\x12\n\n\x02\x62\x62\x18\x01 \x01(\x05*\x04\x08\x02\x10\x0b*\x04\x08\x0c\x10\x65\"\x9c\x01\n\x17TestExtensionOrderings1\x12\x11\n\tmy_string\x18\x01 \x01(\t2n\n\x13test_ext_orderings1\x12%.protobuf_unittest.TestFieldOrderings\x18\r \x01(\x0b\x32*.protobuf_unittest.TestExtensionOrderings1\"\xd4\x02\n\x17TestExtensionOrderings2\x12\x11\n\tmy_string\x18\x01 \x01(\t\x1a\xb5\x01\n\x17TestExtensionOrderings3\x12\x11\n\tmy_string\x18\x01 \x01(\t2\x86\x01\n\x13test_ext_orderings3\x12%.protobuf_unittest.TestFieldOrderings\x18\x0e \x01(\x0b\x32\x42.protobuf_unittest.TestExtensionOrderings2.TestExtensionOrderings32n\n\x13test_ext_orderings2\x12%.protobuf_unittest.TestFieldOrderings\x18\x0c \x01(\x0b\x32*.protobuf_unittest.TestExtensionOrderings2\"\xb6\x07\n\x18TestExtremeDefaultValues\x12?\n\rescaped_bytes\x18\x01 \x01(\x0c:(\\000\\001\\007\\010\\014\\n\\r\\t\\013\\\\\\\'\\\"\\376\x12 \n\x0clarge_uint32\x18\x02 \x01(\r:\n4294967295\x12*\n\x0clarge_uint64\x18\x03 \x01(\x04:\x14\x31\x38\x34\x34\x36\x37\x34\x34\x30\x37\x33\x37\x30\x39\x35\x35\x31\x36\x31\x35\x12 \n\x0bsmall_int32\x18\x04 \x01(\x05:\x0b-2147483647\x12)\n\x0bsmall_int64\x18\x05 \x01(\x03:\x14-9223372036854775807\x12\'\n\x12really_small_int32\x18\x15 \x01(\x05:\x0b-2147483648\x12\x30\n\x12really_small_int64\x18\x16 \x01(\x03:\x14-9223372036854775808\x12\x18\n\x0butf8_string\x18\x06 \x01(\t:\x03\xe1\x88\xb4\x12\x15\n\nzero_float\x18\x07 \x01(\x02:\x01\x30\x12\x14\n\tone_float\x18\x08 \x01(\x02:\x01\x31\x12\x18\n\x0bsmall_float\x18\t \x01(\x02:\x03\x31.5\x12\x1e\n\x12negative_one_float\x18\n \x01(\x02:\x02-1\x12\x1c\n\x0enegative_float\x18\x0b \x01(\x02:\x04-1.5\x12\x1a\n\x0blarge_float\x18\x0c \x01(\x02:\x05\x32\x65+08\x12$\n\x14small_negative_float\x18\r \x01(\x02:\x06-8e-28\x12\x17\n\ninf_double\x18\x0e \x01(\x01:\x03inf\x12\x1c\n\x0eneg_inf_double\x18\x0f \x01(\x01:\x04-inf\x12\x17\n\nnan_double\x18\x10 \x01(\x01:\x03nan\x12\x16\n\tinf_float\x18\x11 \x01(\x02:\x03inf\x12\x1b\n\rneg_inf_float\x18\x12 \x01(\x02:\x04-inf\x12\x16\n\tnan_float\x18\x13 \x01(\x02:\x03nan\x12+\n\x0c\x63pp_trigraph\x18\x14 \x01(\t:\x15? ? ?? ?? ??? ??/ ??-\x12 \n\x10string_with_zero\x18\x17 \x01(\t:\x06hel\x00lo\x12\"\n\x0f\x62ytes_with_zero\x18\x18 \x01(\x0c:\twor\\000ld\x12(\n\x16string_piece_with_zero\x18\x19 \x01(\t:\x04\x61\x62\x00\x63\x42\x02\x08\x02\x12 \n\x0e\x63ord_with_zero\x18\x1a \x01(\t:\x04\x31\x32\x00\x33\x42\x02\x08\x01\x12&\n\x12replacement_string\x18\x1b \x01(\t:\n${unknown}\"K\n\x11SparseEnumMessage\x12\x36\n\x0bsparse_enum\x18\x01 \x01(\x0e\x32!.protobuf_unittest.TestSparseEnum\"\x19\n\tOneString\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\t\"\x1a\n\nMoreString\x12\x0c\n\x04\x64\x61ta\x18\x01 \x03(\t\"\x18\n\x08OneBytes\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x0c\"\x19\n\tMoreBytes\x12\x0c\n\x04\x64\x61ta\x18\x01 \x03(\x0c\"\xeb\x03\n\x12ManyOptionalString\x12\x0c\n\x04str1\x18\x01 \x01(\t\x12\x0c\n\x04str2\x18\x02 \x01(\t\x12\x0c\n\x04str3\x18\x03 \x01(\t\x12\x0c\n\x04str4\x18\x04 \x01(\t\x12\x0c\n\x04str5\x18\x05 \x01(\t\x12\x0c\n\x04str6\x18\x06 \x01(\t\x12\x0c\n\x04str7\x18\x07 \x01(\t\x12\x0c\n\x04str8\x18\x08 \x01(\t\x12\x0c\n\x04str9\x18\t \x01(\t\x12\r\n\x05str10\x18\n \x01(\t\x12\r\n\x05str11\x18\x0b \x01(\t\x12\r\n\x05str12\x18\x0c \x01(\t\x12\r\n\x05str13\x18\r \x01(\t\x12\r\n\x05str14\x18\x0e \x01(\t\x12\r\n\x05str15\x18\x0f \x01(\t\x12\r\n\x05str16\x18\x10 \x01(\t\x12\r\n\x05str17\x18\x11 \x01(\t\x12\r\n\x05str18\x18\x12 \x01(\t\x12\r\n\x05str19\x18\x13 \x01(\t\x12\r\n\x05str20\x18\x14 \x01(\t\x12\r\n\x05str21\x18\x15 \x01(\t\x12\r\n\x05str22\x18\x16 \x01(\t\x12\r\n\x05str23\x18\x17 \x01(\t\x12\r\n\x05str24\x18\x18 \x01(\t\x12\r\n\x05str25\x18\x19 \x01(\t\x12\r\n\x05str26\x18\x1a \x01(\t\x12\r\n\x05str27\x18\x1b \x01(\t\x12\r\n\x05str28\x18\x1c \x01(\t\x12\r\n\x05str29\x18\x1d \x01(\t\x12\r\n\x05str30\x18\x1e \x01(\t\x12\r\n\x05str31\x18\x1f \x01(\t\x12\r\n\x05str32\x18  \x01(\t\"\x1c\n\x0cInt32Message\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x05\"\x1d\n\rUint32Message\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\r\"\x1c\n\x0cInt64Message\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x03\"\x1d\n\rUint64Message\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x04\"\x1b\n\x0b\x42oolMessage\x12\x0c\n\x04\x64\x61ta\x18\x01 \x01(\x08\"\xd0\x01\n\tTestOneof\x12\x11\n\x07\x66oo_int\x18\x01 \x01(\x05H\x00\x12\x14\n\nfoo_string\x18\x02 \x01(\tH\x00\x12\x36\n\x0b\x66oo_message\x18\x03 \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypesH\x00\x12\x39\n\x08\x66oogroup\x18\x04 \x01(\n2%.protobuf_unittest.TestOneof.FooGroupH\x00\x1a \n\x08\x46ooGroup\x12\t\n\x01\x61\x18\x05 \x01(\x05\x12\t\n\x01\x62\x18\x06 \x01(\tB\x05\n\x03\x66oo\"\xe7\x01\n\x1cTestOneofBackwardsCompatible\x12\x0f\n\x07\x66oo_int\x18\x01 \x01(\x05\x12\x12\n\nfoo_string\x18\x02 \x01(\t\x12\x34\n\x0b\x66oo_message\x18\x03 \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12J\n\x08\x66oogroup\x18\x04 \x01(\n28.protobuf_unittest.TestOneofBackwardsCompatible.FooGroup\x1a \n\x08\x46ooGroup\x12\t\n\x01\x61\x18\x05 \x01(\x05\x12\t\n\x01\x62\x18\x06 \x01(\t\"\xd5\x07\n\nTestOneof2\x12\x11\n\x07\x66oo_int\x18\x01 \x01(\x05H\x00\x12\x14\n\nfoo_string\x18\x02 \x01(\tH\x00\x12\x16\n\x08\x66oo_cord\x18\x03 \x01(\tB\x02\x08\x01H\x00\x12\x1e\n\x10\x66oo_string_piece\x18\x04 \x01(\tB\x02\x08\x02H\x00\x12\x13\n\tfoo_bytes\x18\x05 \x01(\x0cH\x00\x12<\n\x08\x66oo_enum\x18\x06 \x01(\x0e\x32(.protobuf_unittest.TestOneof2.NestedEnumH\x00\x12\x42\n\x0b\x66oo_message\x18\x07 \x01(\x0b\x32+.protobuf_unittest.TestOneof2.NestedMessageH\x00\x12:\n\x08\x66oogroup\x18\x08 \x01(\n2&.protobuf_unittest.TestOneof2.FooGroupH\x00\x12K\n\x10\x66oo_lazy_message\x18\x0b \x01(\x0b\x32+.protobuf_unittest.TestOneof2.NestedMessageB\x02(\x01H\x00\x12\x14\n\x07\x62\x61r_int\x18\x0c \x01(\x05:\x01\x35H\x01\x12\x1c\n\nbar_string\x18\r \x01(\t:\x06STRINGH\x01\x12\x1c\n\x08\x62\x61r_cord\x18\x0e \x01(\t:\x04\x43ORDB\x02\x08\x01H\x01\x12&\n\x10\x62\x61r_string_piece\x18\x0f \x01(\t:\x06SPIECEB\x02\x08\x02H\x01\x12\x1a\n\tbar_bytes\x18\x10 \x01(\x0c:\x05\x42YTESH\x01\x12\x41\n\x08\x62\x61r_enum\x18\x11 \x01(\x0e\x32(.protobuf_unittest.TestOneof2.NestedEnum:\x03\x42\x41RH\x01\x12)\n\x1d\x62\x61r_string_with_empty_default\x18\x14 \x01(\t:\x00H\x01\x12+\n\x1b\x62\x61r_cord_with_empty_default\x18\x15 \x01(\t:\x00\x42\x02\x08\x01H\x01\x12\x33\n#bar_string_piece_with_empty_default\x18\x16 \x01(\t:\x00\x42\x02\x08\x02H\x01\x12(\n\x1c\x62\x61r_bytes_with_empty_default\x18\x17 \x01(\x0c:\x00H\x01\x12\x0f\n\x07\x62\x61z_int\x18\x12 \x01(\x05\x12\x17\n\nbaz_string\x18\x13 \x01(\t:\x03\x42\x41Z\x1a \n\x08\x46ooGroup\x12\t\n\x01\x61\x18\t \x01(\x05\x12\t\n\x01\x62\x18\n \x01(\t\x1a\x33\n\rNestedMessage\x12\x0f\n\x07moo_int\x18\x01 \x01(\x03\x12\x11\n\tcorge_int\x18\x02 \x03(\x05\"\'\n\nNestedEnum\x12\x07\n\x03\x46OO\x10\x01\x12\x07\n\x03\x42\x41R\x10\x02\x12\x07\n\x03\x42\x41Z\x10\x03\x42\x05\n\x03\x66ooB\x05\n\x03\x62\x61r\"\x8c\x02\n\x11TestRequiredOneof\x12\x11\n\x07\x66oo_int\x18\x01 \x01(\x05H\x00\x12\x14\n\nfoo_string\x18\x02 \x01(\tH\x00\x12I\n\x0b\x66oo_message\x18\x03 \x01(\x0b\x32\x32.protobuf_unittest.TestRequiredOneof.NestedMessageH\x00\x12R\n\x10\x66oo_lazy_message\x18\x04 \x01(\x0b\x32\x32.protobuf_unittest.TestRequiredOneof.NestedMessageB\x02(\x01H\x00\x1a(\n\rNestedMessage\x12\x17\n\x0frequired_double\x18\x01 \x02(\x01\x42\x05\n\x03\x66oo\"\xaa\x03\n\x0fTestPackedTypes\x12\x18\n\x0cpacked_int32\x18Z \x03(\x05\x42\x02\x10\x01\x12\x18\n\x0cpacked_int64\x18[ \x03(\x03\x42\x02\x10\x01\x12\x19\n\rpacked_uint32\x18\\ \x03(\rB\x02\x10\x01\x12\x19\n\rpacked_uint64\x18] \x03(\x04\x42\x02\x10\x01\x12\x19\n\rpacked_sint32\x18^ \x03(\x11\x42\x02\x10\x01\x12\x19\n\rpacked_sint64\x18_ \x03(\x12\x42\x02\x10\x01\x12\x1a\n\x0epacked_fixed32\x18` \x03(\x07\x42\x02\x10\x01\x12\x1a\n\x0epacked_fixed64\x18\x61 \x03(\x06\x42\x02\x10\x01\x12\x1b\n\x0fpacked_sfixed32\x18\x62 \x03(\x0f\x42\x02\x10\x01\x12\x1b\n\x0fpacked_sfixed64\x18\x63 \x03(\x10\x42\x02\x10\x01\x12\x18\n\x0cpacked_float\x18\x64 \x03(\x02\x42\x02\x10\x01\x12\x19\n\rpacked_double\x18\x65 \x03(\x01\x42\x02\x10\x01\x12\x17\n\x0bpacked_bool\x18\x66 \x03(\x08\x42\x02\x10\x01\x12\x37\n\x0bpacked_enum\x18g \x03(\x0e\x32\x1e.protobuf_unittest.ForeignEnumB\x02\x10\x01\"\xc8\x03\n\x11TestUnpackedTypes\x12\x1a\n\x0eunpacked_int32\x18Z \x03(\x05\x42\x02\x10\x00\x12\x1a\n\x0eunpacked_int64\x18[ \x03(\x03\x42\x02\x10\x00\x12\x1b\n\x0funpacked_uint32\x18\\ \x03(\rB\x02\x10\x00\x12\x1b\n\x0funpacked_uint64\x18] \x03(\x04\x42\x02\x10\x00\x12\x1b\n\x0funpacked_sint32\x18^ \x03(\x11\x42\x02\x10\x00\x12\x1b\n\x0funpacked_sint64\x18_ \x03(\x12\x42\x02\x10\x00\x12\x1c\n\x10unpacked_fixed32\x18` \x03(\x07\x42\x02\x10\x00\x12\x1c\n\x10unpacked_fixed64\x18\x61 \x03(\x06\x42\x02\x10\x00\x12\x1d\n\x11unpacked_sfixed32\x18\x62 \x03(\x0f\x42\x02\x10\x00\x12\x1d\n\x11unpacked_sfixed64\x18\x63 \x03(\x10\x42\x02\x10\x00\x12\x1a\n\x0eunpacked_float\x18\x64 \x03(\x02\x42\x02\x10\x00\x12\x1b\n\x0funpacked_double\x18\x65 \x03(\x01\x42\x02\x10\x00\x12\x19\n\runpacked_bool\x18\x66 \x03(\x08\x42\x02\x10\x00\x12\x39\n\runpacked_enum\x18g \x03(\x0e\x32\x1e.protobuf_unittest.ForeignEnumB\x02\x10\x00\" \n\x14TestPackedExtensions*\x08\x08\x01\x10\x80\x80\x80\x80\x02\"\"\n\x16TestUnpackedExtensions*\x08\x08\x01\x10\x80\x80\x80\x80\x02\"\x99\x04\n\x15TestDynamicExtensions\x12\x19\n\x10scalar_extension\x18\xd0\x0f \x01(\x07\x12\x37\n\x0e\x65num_extension\x18\xd1\x0f \x01(\x0e\x32\x1e.protobuf_unittest.ForeignEnum\x12Y\n\x16\x64ynamic_enum_extension\x18\xd2\x0f \x01(\x0e\x32\x38.protobuf_unittest.TestDynamicExtensions.DynamicEnumType\x12=\n\x11message_extension\x18\xd3\x0f \x01(\x0b\x32!.protobuf_unittest.ForeignMessage\x12_\n\x19\x64ynamic_message_extension\x18\xd4\x0f \x01(\x0b\x32;.protobuf_unittest.TestDynamicExtensions.DynamicMessageType\x12\x1b\n\x12repeated_extension\x18\xd5\x0f \x03(\t\x12\x1d\n\x10packed_extension\x18\xd6\x0f \x03(\x11\x42\x02\x10\x01\x1a,\n\x12\x44ynamicMessageType\x12\x16\n\rdynamic_field\x18\xb4\x10 \x01(\x05\"G\n\x0f\x44ynamicEnumType\x12\x10\n\x0b\x44YNAMIC_FOO\x10\x98\x11\x12\x10\n\x0b\x44YNAMIC_BAR\x10\x99\x11\x12\x10\n\x0b\x44YNAMIC_BAZ\x10\x9a\x11\"|\n\x12TestRepeatedString\x12\x18\n\x10repeated_string1\x18\x01 \x03(\t\x12\x18\n\x10repeated_string2\x18\x02 \x03(\t\x12\x18\n\x10repeated_bytes11\x18\x0b \x03(\x0c\x12\x18\n\x10repeated_bytes12\x18\x0c \x03(\x0c\"\xc0\x01\n#TestRepeatedScalarDifferentTagSizes\x12\x18\n\x10repeated_fixed32\x18\x0c \x03(\x07\x12\x16\n\x0erepeated_int32\x18\r \x03(\x05\x12\x19\n\x10repeated_fixed64\x18\xfe\x0f \x03(\x06\x12\x17\n\x0erepeated_int64\x18\xff\x0f \x03(\x03\x12\x18\n\x0erepeated_float\x18\xfe\xff\x0f \x03(\x02\x12\x19\n\x0frepeated_uint64\x18\xff\xff\x0f \x03(\x04\"\xf7\t\n\x10TestParsingMerge\x12;\n\x12required_all_types\x18\x01 \x02(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12;\n\x12optional_all_types\x18\x02 \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12;\n\x12repeated_all_types\x18\x03 \x03(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12H\n\roptionalgroup\x18\n \x01(\n21.protobuf_unittest.TestParsingMerge.OptionalGroup\x12H\n\rrepeatedgroup\x18\x14 \x03(\n21.protobuf_unittest.TestParsingMerge.RepeatedGroup\x1a\xaa\x04\n\x17RepeatedFieldsGenerator\x12/\n\x06\x66ield1\x18\x01 \x03(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12/\n\x06\x66ield2\x18\x02 \x03(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12/\n\x06\x66ield3\x18\x03 \x03(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12R\n\x06group1\x18\n \x03(\n2B.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group1\x12R\n\x06group2\x18\x14 \x03(\n2B.protobuf_unittest.TestParsingMerge.RepeatedFieldsGenerator.Group2\x12.\n\x04\x65xt1\x18\xe8\x07 \x03(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12.\n\x04\x65xt2\x18\xe9\x07 \x03(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x1a\x39\n\x06Group1\x12/\n\x06\x66ield1\x18\x0b \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x1a\x39\n\x06Group2\x12/\n\x06\x66ield1\x18\x15 \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x1aR\n\rOptionalGroup\x12\x41\n\x18optional_group_all_types\x18\x0b \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x1aR\n\rRepeatedGroup\x12\x41\n\x18repeated_group_all_types\x18\x15 \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes*\t\x08\xe8\x07\x10\x80\x80\x80\x80\x02\x32[\n\x0coptional_ext\x12#.protobuf_unittest.TestParsingMerge\x18\xe8\x07 \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes2[\n\x0crepeated_ext\x12#.protobuf_unittest.TestParsingMerge\x18\xe9\x07 \x03(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\"R\n\x12TestMergeException\x12<\n\x0e\x61ll_extensions\x18\x01 \x01(\x0b\x32$.protobuf_unittest.TestAllExtensions\"D\n\x1bTestCommentInjectionMessage\x12%\n\x01\x61\x18\x01 \x01(\t:\x1a*/ <- Neither should this.\"Y\n\x0fTestMessageSize\x12\n\n\x02m1\x18\x01 \x01(\x08\x12\n\n\x02m2\x18\x02 \x01(\x03\x12\n\n\x02m3\x18\x03 \x01(\x08\x12\n\n\x02m4\x18\x04 \x01(\t\x12\n\n\x02m5\x18\x05 \x01(\x05\x12\n\n\x02m6\x18\x06 \x01(\x03\"\x0c\n\nFooRequest\"\r\n\x0b\x46ooResponse\"\x12\n\x10\x46ooClientMessage\"\x12\n\x10\x46ooServerMessage\"\x0c\n\nBarRequest\"\r\n\x0b\x42\x61rResponse\"\xa6\x01\n\x0cTestJsonName\x12\x13\n\x0b\x66ield_name1\x18\x01 \x01(\x05\x12\x12\n\nfieldName2\x18\x02 \x01(\x05\x12\x12\n\nFieldName3\x18\x03 \x01(\x05\x12\x14\n\x0c_field_name4\x18\x04 \x01(\x05\x12\x13\n\x0b\x46IELD_NAME5\x18\x05 \x01(\x05\x12\x1a\n\x0b\x66ield_name6\x18\x06 \x01(\x05R\x05@type\x12\x12\n\nfieldname7\x18\x07 \x01(\x05\"\xfd\x05\n\x14TestHugeFieldNumbers\x12\x1a\n\x0eoptional_int32\x18\xf0\xf8\xff\xff\x01 \x01(\x05\x12\x14\n\x08\x66ixed_32\x18\xf1\xf8\xff\xff\x01 \x01(\x05\x12\x1e\n\x0erepeated_int32\x18\xf2\xf8\xff\xff\x01 \x03(\x05\x42\x02\x10\x00\x12\x1c\n\x0cpacked_int32\x18\xf3\xf8\xff\xff\x01 \x03(\x05\x42\x02\x10\x01\x12\x39\n\roptional_enum\x18\xf4\xf8\xff\xff\x01 \x01(\x0e\x32\x1e.protobuf_unittest.ForeignEnum\x12\x1b\n\x0foptional_string\x18\xf5\xf8\xff\xff\x01 \x01(\t\x12\x1a\n\x0eoptional_bytes\x18\xf6\xf8\xff\xff\x01 \x01(\x0c\x12?\n\x10optional_message\x18\xf7\xf8\xff\xff\x01 \x01(\x0b\x32!.protobuf_unittest.ForeignMessage\x12P\n\roptionalgroup\x18\xf8\xf8\xff\xff\x01 \x01(\n25.protobuf_unittest.TestHugeFieldNumbers.OptionalGroup\x12[\n\x11string_string_map\x18\xfa\xf8\xff\xff\x01 \x03(\x0b\x32<.protobuf_unittest.TestHugeFieldNumbers.StringStringMapEntry\x12\x1a\n\x0coneof_uint32\x18\xfb\xf8\xff\xff\x01 \x01(\rH\x00\x12\x43\n\x14oneof_test_all_types\x18\xfc\xf8\xff\xff\x01 \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypesH\x00\x12\x1a\n\x0coneof_string\x18\xfd\xf8\xff\xff\x01 \x01(\tH\x00\x12\x19\n\x0boneof_bytes\x18\xfe\xf8\xff\xff\x01 \x01(\x0cH\x00\x1a$\n\rOptionalGroup\x12\x13\n\x07group_a\x18\xf9\xf8\xff\xff\x01 \x01(\x05\x1a\x36\n\x14StringStringMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01*\x0c\x08\xe0\xaa\xff\xff\x01\x10\xf0\xf8\xff\xff\x01\x42\r\n\x0boneof_field\"\xb1\x01\n\x18TestExtensionInsideTable\x12\x0e\n\x06\x66ield1\x18\x01 \x01(\x05\x12\x0e\n\x06\x66ield2\x18\x02 \x01(\x05\x12\x0e\n\x06\x66ield3\x18\x03 \x01(\x05\x12\x0e\n\x06\x66ield4\x18\x04 \x01(\x05\x12\x0e\n\x06\x66ield6\x18\x06 \x01(\x05\x12\x0e\n\x06\x66ield7\x18\x07 \x01(\x05\x12\x0e\n\x06\x66ield8\x18\x08 \x01(\x05\x12\x0e\n\x06\x66ield9\x18\t \x01(\x05\x12\x0f\n\x07\x66ield10\x18\n \x01(\x05*\x04\x08\x05\x10\x06\"\x96\x04\n\x1dTestNestedGroupExtensionOuter\x12\x61\n\x13layer1optionalgroup\x18\x01 \x01(\n2D.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup\x1a\x91\x03\n\x13Layer1OptionalGroup\x12u\n\x13layer2repeatedgroup\x18\x02 \x03(\n2X.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup\x12\x93\x01\n\"layer2anotheroptionalrepeatedgroup\x18\x04 \x03(\n2g.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2AnotherOptionalRepeatedGroup\x1a\x32\n\x13Layer2RepeatedGroup\x12\x15\n\ranother_field\x18\x06 \x01(\t*\x04\x08\x03\x10\x04\x1a\x39\n\"Layer2AnotherOptionalRepeatedGroup\x12\x13\n\x0b\x62ut_why_tho\x18\x05 \x01(\t\"<\n&TestNestedGroupExtensionInnerExtension\x12\x12\n\ninner_name\x18\x01 \x01(\t\"\xd1\x03\n\x1bTestExtensionRangeSerialize\x12\x0f\n\x07\x66oo_one\x18\x01 \x01(\x05\x12\x0f\n\x07\x66oo_two\x18\x06 \x01(\x05\x12\x11\n\tfoo_three\x18\x07 \x01(\x05\x12\x10\n\x08\x66oo_four\x18\r \x01(\x05*\x04\x08\x02\x10\x03*\x04\x08\x03\x10\x05*\x04\x08\t\x10\x0b*\x04\x08\x0f\x10\x10*\x04\x08\x11\x10\x12*\x04\x08\x13\x10\x14\x32?\n\x07\x62\x61r_one\x12..protobuf_unittest.TestExtensionRangeSerialize\x18\x02 \x01(\x05\x32?\n\x07\x62\x61r_two\x12..protobuf_unittest.TestExtensionRangeSerialize\x18\x04 \x01(\x05\x32\x41\n\tbar_three\x12..protobuf_unittest.TestExtensionRangeSerialize\x18\n \x01(\x05\x32@\n\x08\x62\x61r_four\x12..protobuf_unittest.TestExtensionRangeSerialize\x18\x0f \x01(\x05\x32@\n\x08\x62\x61r_five\x12..protobuf_unittest.TestExtensionRangeSerialize\x18\x13 \x01(\x05\"\x81\x01\n\x15TestVerifyInt32Simple\x12\x18\n\x10optional_int32_1\x18\x01 \x01(\x05\x12\x18\n\x10optional_int32_2\x18\x02 \x01(\x05\x12\x19\n\x11optional_int32_63\x18? \x01(\x05\x12\x19\n\x11optional_int32_64\x18@ \x01(\x05\"\xf5\x01\n\x0fTestVerifyInt32\x12\x18\n\x10optional_int32_1\x18\x01 \x01(\x05\x12\x18\n\x10optional_int32_2\x18\x02 \x01(\x05\x12\x19\n\x11optional_int32_63\x18? \x01(\x05\x12\x19\n\x11optional_int32_64\x18@ \x01(\x05\x12;\n\x12optional_all_types\x18\t \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12;\n\x12repeated_all_types\x18\n \x03(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\"\xca\x02\n\x15TestVerifyMostlyInt32\x12\x19\n\x11optional_int64_30\x18\x1e \x01(\x03\x12\x18\n\x10optional_int32_1\x18\x01 \x01(\x05\x12\x18\n\x10optional_int32_2\x18\x02 \x01(\x05\x12\x18\n\x10optional_int32_3\x18\x03 \x01(\x05\x12\x18\n\x10optional_int32_4\x18\x04 \x01(\x05\x12\x19\n\x11optional_int32_63\x18? \x01(\x05\x12\x19\n\x11optional_int32_64\x18@ \x01(\x05\x12;\n\x12optional_all_types\x18\t \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12;\n\x12repeated_all_types\x18\n \x03(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\"\xf5\x02\n#TestVerifyMostlyInt32BigFieldNumber\x12\x19\n\x11optional_int64_30\x18\x1e \x01(\x03\x12\x1b\n\x12optional_int32_300\x18\xac\x02 \x01(\x05\x12\x18\n\x10optional_int32_1\x18\x01 \x01(\x05\x12\x18\n\x10optional_int32_2\x18\x02 \x01(\x05\x12\x18\n\x10optional_int32_3\x18\x03 \x01(\x05\x12\x18\n\x10optional_int32_4\x18\x04 \x01(\x05\x12\x19\n\x11optional_int32_63\x18? \x01(\x05\x12\x19\n\x11optional_int32_64\x18@ \x01(\x05\x12;\n\x12optional_all_types\x18\t \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12;\n\x12repeated_all_types\x18\n \x03(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\"\x86\x01\n\x16TestVerifyUint32Simple\x12\x19\n\x11optional_uint32_1\x18\x01 \x01(\r\x12\x19\n\x11optional_uint32_2\x18\x02 \x01(\r\x12\x1a\n\x12optional_uint32_63\x18? \x01(\r\x12\x1a\n\x12optional_uint32_64\x18@ \x01(\r\"\xfa\x01\n\x10TestVerifyUint32\x12\x19\n\x11optional_uint32_1\x18\x01 \x01(\r\x12\x19\n\x11optional_uint32_2\x18\x02 \x01(\r\x12\x1a\n\x12optional_uint32_63\x18? \x01(\r\x12\x1a\n\x12optional_uint32_64\x18@ \x01(\r\x12;\n\x12optional_all_types\x18\t \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12;\n\x12repeated_all_types\x18\n \x03(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\"\xfa\x01\n\x13TestVerifyOneUint32\x12\x19\n\x11optional_uint32_1\x18\x01 \x01(\r\x12\x18\n\x10optional_int32_2\x18\x02 \x01(\x05\x12\x19\n\x11optional_int32_63\x18? \x01(\x05\x12\x19\n\x11optional_int32_64\x18@ \x01(\x05\x12;\n\x12optional_all_types\x18\t \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12;\n\x12repeated_all_types\x18\n \x03(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\"\xa1\x02\n TestVerifyOneInt32BigFieldNumber\x12\x19\n\x11optional_int32_65\x18\x41 \x01(\x05\x12\x18\n\x10optional_int64_1\x18\x01 \x01(\x03\x12\x18\n\x10optional_int64_2\x18\x02 \x01(\x03\x12\x19\n\x11optional_int64_63\x18? \x01(\x03\x12\x19\n\x11optional_int64_64\x18@ \x01(\x03\x12;\n\x12optional_all_types\x18\t \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12;\n\x12repeated_all_types\x18\n \x03(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\"\xbc\x02\n\x1dTestVerifyInt32BigFieldNumber\x12\x1c\n\x13optional_int32_1000\x18\xe8\x07 \x01(\x05\x12\x19\n\x11optional_int32_65\x18\x41 \x01(\x05\x12\x18\n\x10optional_int32_1\x18\x01 \x01(\x05\x12\x18\n\x10optional_int32_2\x18\x02 \x01(\x05\x12\x19\n\x11optional_int32_63\x18? \x01(\x05\x12\x19\n\x11optional_int32_64\x18@ \x01(\x05\x12;\n\x12optional_all_types\x18\t \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12;\n\x12repeated_all_types\x18\n \x03(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\"\xc3\x02\n\x1eTestVerifyUint32BigFieldNumber\x12\x1d\n\x14optional_uint32_1000\x18\xe8\x07 \x01(\r\x12\x1a\n\x12optional_uint32_65\x18\x41 \x01(\r\x12\x19\n\x11optional_uint32_1\x18\x01 \x01(\r\x12\x19\n\x11optional_uint32_2\x18\x02 \x01(\r\x12\x1a\n\x12optional_uint32_63\x18? \x01(\r\x12\x1a\n\x12optional_uint32_64\x18@ \x01(\r\x12;\n\x12optional_all_types\x18\t \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\x12;\n\x12repeated_all_types\x18\n \x03(\x0b\x32\x1f.protobuf_unittest.TestAllTypes\"\x88\x04\n\x1eTestVerifyBigFieldNumberUint32\x12Q\n\x0foptional_nested\x18\x01 \x01(\x0b\x32\x38.protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested\x1a\x92\x03\n\x06Nested\x12\x1d\n\x14optional_uint32_5000\x18\x88\' \x01(\r\x12\x1d\n\x14optional_uint32_1000\x18\xe8\x07 \x01(\r\x12\x1a\n\x12optional_uint32_66\x18\x42 \x01(\r\x12\x1a\n\x12optional_uint32_65\x18\x41 \x01(\r\x12\x19\n\x11optional_uint32_1\x18\x01 \x01(\r\x12\x19\n\x11optional_uint32_2\x18\x02 \x01(\r\x12\x1a\n\x12optional_uint32_63\x18? \x01(\r\x12\x1a\n\x12optional_uint32_64\x18@ \x01(\r\x12Q\n\x0foptional_nested\x18\t \x01(\x0b\x32\x38.protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested\x12Q\n\x0frepeated_nested\x18\n \x03(\x0b\x32\x38.protobuf_unittest.TestVerifyBigFieldNumberUint32.Nested\"\xdc\x1f\n\x0f\x45numParseTester\x12S\n\x1doptional_seq_small_0_lowfield\x18\x01 \x01(\x0e\x32,.protobuf_unittest.EnumParseTester.SeqSmall0\x12T\n\x1doptional_seq_small_0_midfield\x18\xe9\x07 \x01(\x0e\x32,.protobuf_unittest.EnumParseTester.SeqSmall0\x12T\n\x1coptional_seq_small_0_hifield\x18\xc1\x84= \x01(\x0e\x32,.protobuf_unittest.EnumParseTester.SeqSmall0\x12S\n\x1drepeated_seq_small_0_lowfield\x18\x02 \x03(\x0e\x32,.protobuf_unittest.EnumParseTester.SeqSmall0\x12T\n\x1drepeated_seq_small_0_midfield\x18\xea\x07 \x03(\x0e\x32,.protobuf_unittest.EnumParseTester.SeqSmall0\x12T\n\x1crepeated_seq_small_0_hifield\x18\xc2\x84= \x03(\x0e\x32,.protobuf_unittest.EnumParseTester.SeqSmall0\x12U\n\x1bpacked_seq_small_0_lowfield\x18\x03 \x03(\x0e\x32,.protobuf_unittest.EnumParseTester.SeqSmall0B\x02\x10\x01\x12V\n\x1bpacked_seq_small_0_midfield\x18\xeb\x07 \x03(\x0e\x32,.protobuf_unittest.EnumParseTester.SeqSmall0B\x02\x10\x01\x12V\n\x1apacked_seq_small_0_hifield\x18\xc3\x84= \x03(\x0e\x32,.protobuf_unittest.EnumParseTester.SeqSmall0B\x02\x10\x01\x12S\n\x1doptional_seq_small_1_lowfield\x18\x04 \x01(\x0e\x32,.protobuf_unittest.EnumParseTester.SeqSmall1\x12T\n\x1doptional_seq_small_1_midfield\x18\xec\x07 \x01(\x0e\x32,.protobuf_unittest.EnumParseTester.SeqSmall1\x12T\n\x1coptional_seq_small_1_hifield\x18\xc4\x84= \x01(\x0e\x32,.protobuf_unittest.EnumParseTester.SeqSmall1\x12S\n\x1drepeated_seq_small_1_lowfield\x18\x05 \x03(\x0e\x32,.protobuf_unittest.EnumParseTester.SeqSmall1\x12T\n\x1drepeated_seq_small_1_midfield\x18\xed\x07 \x03(\x0e\x32,.protobuf_unittest.EnumParseTester.SeqSmall1\x12T\n\x1crepeated_seq_small_1_hifield\x18\xc5\x84= \x03(\x0e\x32,.protobuf_unittest.EnumParseTester.SeqSmall1\x12U\n\x1bpacked_seq_small_1_lowfield\x18\x06 \x03(\x0e\x32,.protobuf_unittest.EnumParseTester.SeqSmall1B\x02\x10\x01\x12V\n\x1bpacked_seq_small_1_midfield\x18\xee\x07 \x03(\x0e\x32,.protobuf_unittest.EnumParseTester.SeqSmall1B\x02\x10\x01\x12V\n\x1apacked_seq_small_1_hifield\x18\xc6\x84= \x03(\x0e\x32,.protobuf_unittest.EnumParseTester.SeqSmall1B\x02\x10\x01\x12P\n\x1boptional_seq_large_lowfield\x18\x07 \x01(\x0e\x32+.protobuf_unittest.EnumParseTester.SeqLarge\x12Q\n\x1boptional_seq_large_midfield\x18\xef\x07 \x01(\x0e\x32+.protobuf_unittest.EnumParseTester.SeqLarge\x12Q\n\x1aoptional_seq_large_hifield\x18\xc7\x84= \x01(\x0e\x32+.protobuf_unittest.EnumParseTester.SeqLarge\x12P\n\x1brepeated_seq_large_lowfield\x18\x08 \x03(\x0e\x32+.protobuf_unittest.EnumParseTester.SeqLarge\x12Q\n\x1brepeated_seq_large_midfield\x18\xf0\x07 \x03(\x0e\x32+.protobuf_unittest.EnumParseTester.SeqLarge\x12Q\n\x1arepeated_seq_large_hifield\x18\xc8\x84= \x03(\x0e\x32+.protobuf_unittest.EnumParseTester.SeqLarge\x12R\n\x19packed_seq_large_lowfield\x18\t \x03(\x0e\x32+.protobuf_unittest.EnumParseTester.SeqLargeB\x02\x10\x01\x12S\n\x19packed_seq_large_midfield\x18\xf1\x07 \x03(\x0e\x32+.protobuf_unittest.EnumParseTester.SeqLargeB\x02\x10\x01\x12S\n\x18packed_seq_large_hifield\x18\xc9\x84= \x03(\x0e\x32+.protobuf_unittest.EnumParseTester.SeqLargeB\x02\x10\x01\x12Q\n\x1boptional_arbitrary_lowfield\x18\n \x01(\x0e\x32,.protobuf_unittest.EnumParseTester.Arbitrary\x12R\n\x1boptional_arbitrary_midfield\x18\xf2\x07 \x01(\x0e\x32,.protobuf_unittest.EnumParseTester.Arbitrary\x12R\n\x1aoptional_arbitrary_hifield\x18\xca\x84= \x01(\x0e\x32,.protobuf_unittest.EnumParseTester.Arbitrary\x12Q\n\x1brepeated_arbitrary_lowfield\x18\x0b \x03(\x0e\x32,.protobuf_unittest.EnumParseTester.Arbitrary\x12R\n\x1brepeated_arbitrary_midfield\x18\xf3\x07 \x03(\x0e\x32,.protobuf_unittest.EnumParseTester.Arbitrary\x12R\n\x1arepeated_arbitrary_hifield\x18\xcb\x84= \x03(\x0e\x32,.protobuf_unittest.EnumParseTester.Arbitrary\x12S\n\x19packed_arbitrary_lowfield\x18\x0c \x03(\x0e\x32,.protobuf_unittest.EnumParseTester.ArbitraryB\x02\x10\x01\x12T\n\x19packed_arbitrary_midfield\x18\xf4\x07 \x03(\x0e\x32,.protobuf_unittest.EnumParseTester.ArbitraryB\x02\x10\x01\x12T\n\x18packed_arbitrary_hifield\x18\xcc\x84= \x03(\x0e\x32,.protobuf_unittest.EnumParseTester.ArbitraryB\x02\x10\x01\x12\x13\n\x0bother_field\x18\x63 \x01(\x05\"J\n\tSeqSmall0\x12\x17\n\x13SEQ_SMALL_0_DEFAULT\x10\x00\x12\x11\n\rSEQ_SMALL_0_1\x10\x01\x12\x11\n\rSEQ_SMALL_0_2\x10\x02\"J\n\tSeqSmall1\x12\x17\n\x13SEQ_SMALL_1_DEFAULT\x10\x01\x12\x11\n\rSEQ_SMALL_1_2\x10\x02\x12\x11\n\rSEQ_SMALL_1_3\x10\x03\"\x84\x05\n\x08SeqLarge\x12\x1e\n\x11SEQ_LARGE_DEFAULT\x10\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\x12\x0f\n\x0bSEQ_LARGE_0\x10\x00\x12\x0f\n\x0bSEQ_LARGE_1\x10\x01\x12\x0f\n\x0bSEQ_LARGE_2\x10\x02\x12\x0f\n\x0bSEQ_LARGE_3\x10\x03\x12\x0f\n\x0bSEQ_LARGE_4\x10\x04\x12\x0f\n\x0bSEQ_LARGE_5\x10\x05\x12\x0f\n\x0bSEQ_LARGE_6\x10\x06\x12\x0f\n\x0bSEQ_LARGE_7\x10\x07\x12\x0f\n\x0bSEQ_LARGE_8\x10\x08\x12\x0f\n\x0bSEQ_LARGE_9\x10\t\x12\x10\n\x0cSEQ_LARGE_10\x10\n\x12\x10\n\x0cSEQ_LARGE_11\x10\x0b\x12\x10\n\x0cSEQ_LARGE_12\x10\x0c\x12\x10\n\x0cSEQ_LARGE_13\x10\r\x12\x10\n\x0cSEQ_LARGE_14\x10\x0e\x12\x10\n\x0cSEQ_LARGE_15\x10\x0f\x12\x10\n\x0cSEQ_LARGE_16\x10\x10\x12\x10\n\x0cSEQ_LARGE_17\x10\x11\x12\x10\n\x0cSEQ_LARGE_18\x10\x12\x12\x10\n\x0cSEQ_LARGE_19\x10\x13\x12\x10\n\x0cSEQ_LARGE_20\x10\x14\x12\x10\n\x0cSEQ_LARGE_21\x10\x15\x12\x10\n\x0cSEQ_LARGE_22\x10\x16\x12\x10\n\x0cSEQ_LARGE_23\x10\x17\x12\x10\n\x0cSEQ_LARGE_24\x10\x18\x12\x10\n\x0cSEQ_LARGE_25\x10\x19\x12\x10\n\x0cSEQ_LARGE_26\x10\x1a\x12\x10\n\x0cSEQ_LARGE_27\x10\x1b\x12\x10\n\x0cSEQ_LARGE_28\x10\x1c\x12\x10\n\x0cSEQ_LARGE_29\x10\x1d\x12\x10\n\x0cSEQ_LARGE_30\x10\x1e\x12\x10\n\x0cSEQ_LARGE_31\x10\x1f\x12\x10\n\x0cSEQ_LARGE_32\x10 \x12\x10\n\x0cSEQ_LARGE_33\x10!\"\x9d\x01\n\tArbitrary\x12\x1e\n\x11\x41RBITRARY_DEFAULT\x10\x8d\xbe\xf8\xff\xff\xff\xff\xff\xff\x01\x12\x18\n\x0b\x41RBITRARY_1\x10\x85\xff\xff\xff\xff\xff\xff\xff\xff\x01\x12\x10\n\x0b\x41RBITRARY_2\x10\xd5\x01\x12\x11\n\x0b\x41RBITRARY_3\x10\xdd\x81\r\x12\x1a\n\rARBITRARY_MIN\x10\x80\x80\x80\x80\xf8\xff\xff\xff\xff\x01\x12\x15\n\rARBITRARY_MAX\x10\xff\xff\xff\xff\x07\"\xd2\x02\n\x0f\x42oolParseTester\x12\x1e\n\x16optional_bool_lowfield\x18\x01 \x01(\x08\x12\x1f\n\x16optional_bool_midfield\x18\xe9\x07 \x01(\x08\x12\x1f\n\x15optional_bool_hifield\x18\xc1\x84= \x01(\x08\x12\x1e\n\x16repeated_bool_lowfield\x18\x02 \x03(\x08\x12\x1f\n\x16repeated_bool_midfield\x18\xea\x07 \x03(\x08\x12\x1f\n\x15repeated_bool_hifield\x18\xc2\x84= \x03(\x08\x12 \n\x14packed_bool_lowfield\x18\x03 \x03(\x08\x42\x02\x10\x01\x12!\n\x14packed_bool_midfield\x18\xeb\x07 \x03(\x08\x42\x02\x10\x01\x12!\n\x13packed_bool_hifield\x18\xc3\x84= \x03(\x08\x42\x02\x10\x01\x12\x13\n\x0bother_field\x18\x63 \x01(\x05\"\xe3\x01\n\x11StringParseTester\x12 \n\x18optional_string_lowfield\x18\x01 \x01(\t\x12!\n\x18optional_string_midfield\x18\xe9\x07 \x01(\t\x12!\n\x17optional_string_hifield\x18\xc1\x84= \x01(\t\x12 \n\x18repeated_string_lowfield\x18\x02 \x03(\t\x12!\n\x18repeated_string_midfield\x18\xea\x07 \x03(\t\x12!\n\x17repeated_string_hifield\x18\xc2\x84= \x03(\t\"3\n\rBadFieldNames\x12\x15\n\rOptionalInt32\x18\x01 \x01(\x05\x12\x0b\n\x03\x66or\x18\x02 \x01(\x05\"7\n\x0eRedactedFields\x12%\n\x18optional_redacted_string\x18\x01 \x01(\tB\x03\x80\x01\x01*@\n\x0b\x46oreignEnum\x12\x0f\n\x0b\x46OREIGN_FOO\x10\x04\x12\x0f\n\x0b\x46OREIGN_BAR\x10\x05\x12\x0f\n\x0b\x46OREIGN_BAZ\x10\x06*A\n\x16TestReservedEnumFields\x12\x0b\n\x07UNKNOWN\x10\x00\"\x04\x08\x02\x10\x02\"\x04\x08\x0f\x10\x0f\"\x04\x08\t\x10\x0b*\x03\x62\x61r*\x03\x62\x61z*K\n\x14TestEnumWithDupValue\x12\x08\n\x04\x46OO1\x10\x01\x12\x08\n\x04\x42\x41R1\x10\x02\x12\x07\n\x03\x42\x41Z\x10\x03\x12\x08\n\x04\x46OO2\x10\x01\x12\x08\n\x04\x42\x41R2\x10\x02\x1a\x02\x10\x01*\x89\x01\n\x0eTestSparseEnum\x12\x0c\n\x08SPARSE_A\x10{\x12\x0e\n\x08SPARSE_B\x10\xa6\xe7\x03\x12\x0f\n\x08SPARSE_C\x10\xb2\xb1\x80\x06\x12\x15\n\x08SPARSE_D\x10\xf1\xff\xff\xff\xff\xff\xff\xff\xff\x01\x12\x15\n\x08SPARSE_E\x10\xb4\xde\xfc\xff\xff\xff\xff\xff\xff\x01\x12\x0c\n\x08SPARSE_F\x10\x00\x12\x0c\n\x08SPARSE_G\x10\x02*\x8b\x0f\n\rVeryLargeEnum\x12\x16\n\x12\x45NUM_LABEL_DEFAULT\x10\x00\x12\x10\n\x0c\x45NUM_LABEL_1\x10\x01\x12\x10\n\x0c\x45NUM_LABEL_2\x10\x02\x12\x10\n\x0c\x45NUM_LABEL_3\x10\x03\x12\x10\n\x0c\x45NUM_LABEL_4\x10\x04\x12\x10\n\x0c\x45NUM_LABEL_5\x10\x05\x12\x10\n\x0c\x45NUM_LABEL_6\x10\x06\x12\x10\n\x0c\x45NUM_LABEL_7\x10\x07\x12\x10\n\x0c\x45NUM_LABEL_8\x10\x08\x12\x10\n\x0c\x45NUM_LABEL_9\x10\t\x12\x11\n\rENUM_LABEL_10\x10\n\x12\x11\n\rENUM_LABEL_11\x10\x0b\x12\x11\n\rENUM_LABEL_12\x10\x0c\x12\x11\n\rENUM_LABEL_13\x10\r\x12\x11\n\rENUM_LABEL_14\x10\x0e\x12\x11\n\rENUM_LABEL_15\x10\x0f\x12\x11\n\rENUM_LABEL_16\x10\x10\x12\x11\n\rENUM_LABEL_17\x10\x11\x12\x11\n\rENUM_LABEL_18\x10\x12\x12\x11\n\rENUM_LABEL_19\x10\x13\x12\x11\n\rENUM_LABEL_20\x10\x14\x12\x11\n\rENUM_LABEL_21\x10\x15\x12\x11\n\rENUM_LABEL_22\x10\x16\x12\x11\n\rENUM_LABEL_23\x10\x17\x12\x11\n\rENUM_LABEL_24\x10\x18\x12\x11\n\rENUM_LABEL_25\x10\x19\x12\x11\n\rENUM_LABEL_26\x10\x1a\x12\x11\n\rENUM_LABEL_27\x10\x1b\x12\x11\n\rENUM_LABEL_28\x10\x1c\x12\x11\n\rENUM_LABEL_29\x10\x1d\x12\x11\n\rENUM_LABEL_30\x10\x1e\x12\x11\n\rENUM_LABEL_31\x10\x1f\x12\x11\n\rENUM_LABEL_32\x10 \x12\x11\n\rENUM_LABEL_33\x10!\x12\x11\n\rENUM_LABEL_34\x10\"\x12\x11\n\rENUM_LABEL_35\x10#\x12\x11\n\rENUM_LABEL_36\x10$\x12\x11\n\rENUM_LABEL_37\x10%\x12\x11\n\rENUM_LABEL_38\x10&\x12\x11\n\rENUM_LABEL_39\x10\'\x12\x11\n\rENUM_LABEL_40\x10(\x12\x11\n\rENUM_LABEL_41\x10)\x12\x11\n\rENUM_LABEL_42\x10*\x12\x11\n\rENUM_LABEL_43\x10+\x12\x11\n\rENUM_LABEL_44\x10,\x12\x11\n\rENUM_LABEL_45\x10-\x12\x11\n\rENUM_LABEL_46\x10.\x12\x11\n\rENUM_LABEL_47\x10/\x12\x11\n\rENUM_LABEL_48\x10\x30\x12\x11\n\rENUM_LABEL_49\x10\x31\x12\x11\n\rENUM_LABEL_50\x10\x32\x12\x11\n\rENUM_LABEL_51\x10\x33\x12\x11\n\rENUM_LABEL_52\x10\x34\x12\x11\n\rENUM_LABEL_53\x10\x35\x12\x11\n\rENUM_LABEL_54\x10\x36\x12\x11\n\rENUM_LABEL_55\x10\x37\x12\x11\n\rENUM_LABEL_56\x10\x38\x12\x11\n\rENUM_LABEL_57\x10\x39\x12\x11\n\rENUM_LABEL_58\x10:\x12\x11\n\rENUM_LABEL_59\x10;\x12\x11\n\rENUM_LABEL_60\x10<\x12\x11\n\rENUM_LABEL_61\x10=\x12\x11\n\rENUM_LABEL_62\x10>\x12\x11\n\rENUM_LABEL_63\x10?\x12\x11\n\rENUM_LABEL_64\x10@\x12\x11\n\rENUM_LABEL_65\x10\x41\x12\x11\n\rENUM_LABEL_66\x10\x42\x12\x11\n\rENUM_LABEL_67\x10\x43\x12\x11\n\rENUM_LABEL_68\x10\x44\x12\x11\n\rENUM_LABEL_69\x10\x45\x12\x11\n\rENUM_LABEL_70\x10\x46\x12\x11\n\rENUM_LABEL_71\x10G\x12\x11\n\rENUM_LABEL_72\x10H\x12\x11\n\rENUM_LABEL_73\x10I\x12\x11\n\rENUM_LABEL_74\x10J\x12\x11\n\rENUM_LABEL_75\x10K\x12\x11\n\rENUM_LABEL_76\x10L\x12\x11\n\rENUM_LABEL_77\x10M\x12\x11\n\rENUM_LABEL_78\x10N\x12\x11\n\rENUM_LABEL_79\x10O\x12\x11\n\rENUM_LABEL_80\x10P\x12\x11\n\rENUM_LABEL_81\x10Q\x12\x11\n\rENUM_LABEL_82\x10R\x12\x11\n\rENUM_LABEL_83\x10S\x12\x11\n\rENUM_LABEL_84\x10T\x12\x11\n\rENUM_LABEL_85\x10U\x12\x11\n\rENUM_LABEL_86\x10V\x12\x11\n\rENUM_LABEL_87\x10W\x12\x11\n\rENUM_LABEL_88\x10X\x12\x11\n\rENUM_LABEL_89\x10Y\x12\x11\n\rENUM_LABEL_90\x10Z\x12\x11\n\rENUM_LABEL_91\x10[\x12\x11\n\rENUM_LABEL_92\x10\\\x12\x11\n\rENUM_LABEL_93\x10]\x12\x11\n\rENUM_LABEL_94\x10^\x12\x11\n\rENUM_LABEL_95\x10_\x12\x11\n\rENUM_LABEL_96\x10`\x12\x11\n\rENUM_LABEL_97\x10\x61\x12\x11\n\rENUM_LABEL_98\x10\x62\x12\x11\n\rENUM_LABEL_99\x10\x63\x12\x12\n\x0e\x45NUM_LABEL_100\x10\x64\x32\x99\x01\n\x0bTestService\x12\x44\n\x03\x46oo\x12\x1d.protobuf_unittest.FooRequest\x1a\x1e.protobuf_unittest.FooResponse\x12\x44\n\x03\x42\x61r\x12\x1d.protobuf_unittest.BarRequest\x1a\x1e.protobuf_unittest.BarResponse:F\n\x18optional_int32_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x01 \x01(\x05:F\n\x18optional_int64_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x02 \x01(\x03:G\n\x19optional_uint32_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x03 \x01(\r:G\n\x19optional_uint64_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x04 \x01(\x04:G\n\x19optional_sint32_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x05 \x01(\x11:G\n\x19optional_sint64_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x06 \x01(\x12:H\n\x1aoptional_fixed32_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x07 \x01(\x07:H\n\x1aoptional_fixed64_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x08 \x01(\x06:I\n\x1boptional_sfixed32_extension\x12$.protobuf_unittest.TestAllExtensions\x18\t \x01(\x0f:I\n\x1boptional_sfixed64_extension\x12$.protobuf_unittest.TestAllExtensions\x18\n \x01(\x10:F\n\x18optional_float_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x0b \x01(\x02:G\n\x19optional_double_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x0c \x01(\x01:E\n\x17optional_bool_extension\x12$.protobuf_unittest.TestAllExtensions\x18\r \x01(\x08:G\n\x19optional_string_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x0e \x01(\t:F\n\x18optional_bytes_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x0f \x01(\x0c:q\n\x17optionalgroup_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x10 \x01(\n2*.protobuf_unittest.OptionalGroup_extension:~\n!optional_nested_message_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x12 \x01(\x0b\x32-.protobuf_unittest.TestAllTypes.NestedMessage:s\n\"optional_foreign_message_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x13 \x01(\x0b\x32!.protobuf_unittest.ForeignMessage:x\n!optional_import_message_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x14 \x01(\x0b\x32\'.protobuf_unittest_import.ImportMessage:x\n\x1eoptional_nested_enum_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x15 \x01(\x0e\x32*.protobuf_unittest.TestAllTypes.NestedEnum:m\n\x1foptional_foreign_enum_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x16 \x01(\x0e\x32\x1e.protobuf_unittest.ForeignEnum:r\n\x1eoptional_import_enum_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x17 \x01(\x0e\x32$.protobuf_unittest_import.ImportEnum:Q\n\x1foptional_string_piece_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x18 \x01(\tB\x02\x08\x02:I\n\x17optional_cord_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x19 \x01(\tB\x02\x08\x01:\x85\x01\n(optional_public_import_message_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x1a \x01(\x0b\x32-.protobuf_unittest_import.PublicImportMessage:\x80\x01\n\x1foptional_lazy_message_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x1b \x01(\x0b\x32-.protobuf_unittest.TestAllTypes.NestedMessageB\x02(\x01:\x8b\x01\n*optional_unverified_lazy_message_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x1c \x01(\x0b\x32-.protobuf_unittest.TestAllTypes.NestedMessageB\x02x\x01:F\n\x18repeated_int32_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x1f \x03(\x05:F\n\x18repeated_int64_extension\x12$.protobuf_unittest.TestAllExtensions\x18  \x03(\x03:G\n\x19repeated_uint32_extension\x12$.protobuf_unittest.TestAllExtensions\x18! \x03(\r:G\n\x19repeated_uint64_extension\x12$.protobuf_unittest.TestAllExtensions\x18\" \x03(\x04:G\n\x19repeated_sint32_extension\x12$.protobuf_unittest.TestAllExtensions\x18# \x03(\x11:G\n\x19repeated_sint64_extension\x12$.protobuf_unittest.TestAllExtensions\x18$ \x03(\x12:H\n\x1arepeated_fixed32_extension\x12$.protobuf_unittest.TestAllExtensions\x18% \x03(\x07:H\n\x1arepeated_fixed64_extension\x12$.protobuf_unittest.TestAllExtensions\x18& \x03(\x06:I\n\x1brepeated_sfixed32_extension\x12$.protobuf_unittest.TestAllExtensions\x18\' \x03(\x0f:I\n\x1brepeated_sfixed64_extension\x12$.protobuf_unittest.TestAllExtensions\x18( \x03(\x10:F\n\x18repeated_float_extension\x12$.protobuf_unittest.TestAllExtensions\x18) \x03(\x02:G\n\x19repeated_double_extension\x12$.protobuf_unittest.TestAllExtensions\x18* \x03(\x01:E\n\x17repeated_bool_extension\x12$.protobuf_unittest.TestAllExtensions\x18+ \x03(\x08:G\n\x19repeated_string_extension\x12$.protobuf_unittest.TestAllExtensions\x18, \x03(\t:F\n\x18repeated_bytes_extension\x12$.protobuf_unittest.TestAllExtensions\x18- \x03(\x0c:q\n\x17repeatedgroup_extension\x12$.protobuf_unittest.TestAllExtensions\x18. \x03(\n2*.protobuf_unittest.RepeatedGroup_extension:~\n!repeated_nested_message_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x30 \x03(\x0b\x32-.protobuf_unittest.TestAllTypes.NestedMessage:s\n\"repeated_foreign_message_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x31 \x03(\x0b\x32!.protobuf_unittest.ForeignMessage:x\n!repeated_import_message_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x32 \x03(\x0b\x32\'.protobuf_unittest_import.ImportMessage:x\n\x1erepeated_nested_enum_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x33 \x03(\x0e\x32*.protobuf_unittest.TestAllTypes.NestedEnum:m\n\x1frepeated_foreign_enum_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x34 \x03(\x0e\x32\x1e.protobuf_unittest.ForeignEnum:r\n\x1erepeated_import_enum_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x35 \x03(\x0e\x32$.protobuf_unittest_import.ImportEnum:Q\n\x1frepeated_string_piece_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x36 \x03(\tB\x02\x08\x02:I\n\x17repeated_cord_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x37 \x03(\tB\x02\x08\x01:\x80\x01\n\x1frepeated_lazy_message_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x39 \x03(\x0b\x32-.protobuf_unittest.TestAllTypes.NestedMessageB\x02(\x01:I\n\x17\x64\x65\x66\x61ult_int32_extension\x12$.protobuf_unittest.TestAllExtensions\x18= \x01(\x05:\x02\x34\x31:I\n\x17\x64\x65\x66\x61ult_int64_extension\x12$.protobuf_unittest.TestAllExtensions\x18> \x01(\x03:\x02\x34\x32:J\n\x18\x64\x65\x66\x61ult_uint32_extension\x12$.protobuf_unittest.TestAllExtensions\x18? \x01(\r:\x02\x34\x33:J\n\x18\x64\x65\x66\x61ult_uint64_extension\x12$.protobuf_unittest.TestAllExtensions\x18@ \x01(\x04:\x02\x34\x34:K\n\x18\x64\x65\x66\x61ult_sint32_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x41 \x01(\x11:\x03-45:J\n\x18\x64\x65\x66\x61ult_sint64_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x42 \x01(\x12:\x02\x34\x36:K\n\x19\x64\x65\x66\x61ult_fixed32_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x43 \x01(\x07:\x02\x34\x37:K\n\x19\x64\x65\x66\x61ult_fixed64_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x44 \x01(\x06:\x02\x34\x38:L\n\x1a\x64\x65\x66\x61ult_sfixed32_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x45 \x01(\x0f:\x02\x34\x39:M\n\x1a\x64\x65\x66\x61ult_sfixed64_extension\x12$.protobuf_unittest.TestAllExtensions\x18\x46 \x01(\x10:\x03-50:K\n\x17\x64\x65\x66\x61ult_float_extension\x12$.protobuf_unittest.TestAllExtensions\x18G \x01(\x02:\x04\x35\x31.5:M\n\x18\x64\x65\x66\x61ult_double_extension\x12$.protobuf_unittest.TestAllExtensions\x18H \x01(\x01:\x05\x35\x32\x30\x30\x30:J\n\x16\x64\x65\x66\x61ult_bool_extension\x12$.protobuf_unittest.TestAllExtensions\x18I \x01(\x08:\x04true:M\n\x18\x64\x65\x66\x61ult_string_extension\x12$.protobuf_unittest.TestAllExtensions\x18J \x01(\t:\x05hello:L\n\x17\x64\x65\x66\x61ult_bytes_extension\x12$.protobuf_unittest.TestAllExtensions\x18K \x01(\x0c:\x05world:|\n\x1d\x64\x65\x66\x61ult_nested_enum_extension\x12$.protobuf_unittest.TestAllExtensions\x18Q \x01(\x0e\x32*.protobuf_unittest.TestAllTypes.NestedEnum:\x03\x42\x41R:y\n\x1e\x64\x65\x66\x61ult_foreign_enum_extension\x12$.protobuf_unittest.TestAllExtensions\x18R \x01(\x0e\x32\x1e.protobuf_unittest.ForeignEnum:\x0b\x46OREIGN_BAR:}\n\x1d\x64\x65\x66\x61ult_import_enum_extension\x12$.protobuf_unittest.TestAllExtensions\x18S \x01(\x0e\x32$.protobuf_unittest_import.ImportEnum:\nIMPORT_BAR:U\n\x1e\x64\x65\x66\x61ult_string_piece_extension\x12$.protobuf_unittest.TestAllExtensions\x18T \x01(\t:\x03\x61\x62\x63\x42\x02\x08\x02:M\n\x16\x64\x65\x66\x61ult_cord_extension\x12$.protobuf_unittest.TestAllExtensions\x18U \x01(\t:\x03\x31\x32\x33\x42\x02\x08\x01:D\n\x16oneof_uint32_extension\x12$.protobuf_unittest.TestAllExtensions\x18o \x01(\r:{\n\x1eoneof_nested_message_extension\x12$.protobuf_unittest.TestAllExtensions\x18p \x01(\x0b\x32-.protobuf_unittest.TestAllTypes.NestedMessage:D\n\x16oneof_string_extension\x12$.protobuf_unittest.TestAllExtensions\x18q \x01(\t:C\n\x15oneof_bytes_extension\x12$.protobuf_unittest.TestAllExtensions\x18r \x01(\x0c:B\n\x13my_extension_string\x12%.protobuf_unittest.TestFieldOrderings\x18\x32 \x01(\t:?\n\x10my_extension_int\x12%.protobuf_unittest.TestFieldOrderings\x18\x05 \x01(\x05:K\n\x16packed_int32_extension\x12\'.protobuf_unittest.TestPackedExtensions\x18Z \x03(\x05\x42\x02\x10\x01:K\n\x16packed_int64_extension\x12\'.protobuf_unittest.TestPackedExtensions\x18[ \x03(\x03\x42\x02\x10\x01:L\n\x17packed_uint32_extension\x12\'.protobuf_unittest.TestPackedExtensions\x18\\ \x03(\rB\x02\x10\x01:L\n\x17packed_uint64_extension\x12\'.protobuf_unittest.TestPackedExtensions\x18] \x03(\x04\x42\x02\x10\x01:L\n\x17packed_sint32_extension\x12\'.protobuf_unittest.TestPackedExtensions\x18^ \x03(\x11\x42\x02\x10\x01:L\n\x17packed_sint64_extension\x12\'.protobuf_unittest.TestPackedExtensions\x18_ \x03(\x12\x42\x02\x10\x01:M\n\x18packed_fixed32_extension\x12\'.protobuf_unittest.TestPackedExtensions\x18` \x03(\x07\x42\x02\x10\x01:M\n\x18packed_fixed64_extension\x12\'.protobuf_unittest.TestPackedExtensions\x18\x61 \x03(\x06\x42\x02\x10\x01:N\n\x19packed_sfixed32_extension\x12\'.protobuf_unittest.TestPackedExtensions\x18\x62 \x03(\x0f\x42\x02\x10\x01:N\n\x19packed_sfixed64_extension\x12\'.protobuf_unittest.TestPackedExtensions\x18\x63 \x03(\x10\x42\x02\x10\x01:K\n\x16packed_float_extension\x12\'.protobuf_unittest.TestPackedExtensions\x18\x64 \x03(\x02\x42\x02\x10\x01:L\n\x17packed_double_extension\x12\'.protobuf_unittest.TestPackedExtensions\x18\x65 \x03(\x01\x42\x02\x10\x01:J\n\x15packed_bool_extension\x12\'.protobuf_unittest.TestPackedExtensions\x18\x66 \x03(\x08\x42\x02\x10\x01:j\n\x15packed_enum_extension\x12\'.protobuf_unittest.TestPackedExtensions\x18g \x03(\x0e\x32\x1e.protobuf_unittest.ForeignEnumB\x02\x10\x01:O\n\x18unpacked_int32_extension\x12).protobuf_unittest.TestUnpackedExtensions\x18Z \x03(\x05\x42\x02\x10\x00:O\n\x18unpacked_int64_extension\x12).protobuf_unittest.TestUnpackedExtensions\x18[ \x03(\x03\x42\x02\x10\x00:P\n\x19unpacked_uint32_extension\x12).protobuf_unittest.TestUnpackedExtensions\x18\\ \x03(\rB\x02\x10\x00:P\n\x19unpacked_uint64_extension\x12).protobuf_unittest.TestUnpackedExtensions\x18] \x03(\x04\x42\x02\x10\x00:P\n\x19unpacked_sint32_extension\x12).protobuf_unittest.TestUnpackedExtensions\x18^ \x03(\x11\x42\x02\x10\x00:P\n\x19unpacked_sint64_extension\x12).protobuf_unittest.TestUnpackedExtensions\x18_ \x03(\x12\x42\x02\x10\x00:Q\n\x1aunpacked_fixed32_extension\x12).protobuf_unittest.TestUnpackedExtensions\x18` \x03(\x07\x42\x02\x10\x00:Q\n\x1aunpacked_fixed64_extension\x12).protobuf_unittest.TestUnpackedExtensions\x18\x61 \x03(\x06\x42\x02\x10\x00:R\n\x1bunpacked_sfixed32_extension\x12).protobuf_unittest.TestUnpackedExtensions\x18\x62 \x03(\x0f\x42\x02\x10\x00:R\n\x1bunpacked_sfixed64_extension\x12).protobuf_unittest.TestUnpackedExtensions\x18\x63 \x03(\x10\x42\x02\x10\x00:O\n\x18unpacked_float_extension\x12).protobuf_unittest.TestUnpackedExtensions\x18\x64 \x03(\x02\x42\x02\x10\x00:P\n\x19unpacked_double_extension\x12).protobuf_unittest.TestUnpackedExtensions\x18\x65 \x03(\x01\x42\x02\x10\x00:N\n\x17unpacked_bool_extension\x12).protobuf_unittest.TestUnpackedExtensions\x18\x66 \x03(\x08\x42\x02\x10\x00:n\n\x17unpacked_enum_extension\x12).protobuf_unittest.TestUnpackedExtensions\x18g \x03(\x0e\x32\x1e.protobuf_unittest.ForeignEnumB\x02\x10\x00:d\n\x0etest_all_types\x12\'.protobuf_unittest.TestHugeFieldNumbers\x18\xe0\xaa\xff\xff\x01 \x01(\x0b\x32\x1f.protobuf_unittest.TestAllTypes:Z\n%test_extension_inside_table_extension\x12+.protobuf_unittest.TestExtensionInsideTable\x18\x05 \x01(\x05:\xa2\x01\n\x05inner\x12X.protobuf_unittest.TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup\x18\x03 \x01(\x0b\x32\x39.protobuf_unittest.TestNestedGroupExtensionInnerExtensionB\x1d\x42\rUnittestProtoH\x01\x80\x01\x01\x88\x01\x01\x90\x01\x01\xf8\x01\x01')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'google.protobuf.unittest_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:
  TestAllExtensions.RegisterExtension(optional_int32_extension)
  TestAllExtensions.RegisterExtension(optional_int64_extension)
  TestAllExtensions.RegisterExtension(optional_uint32_extension)
  TestAllExtensions.RegisterExtension(optional_uint64_extension)
  TestAllExtensions.RegisterExtension(optional_sint32_extension)
  TestAllExtensions.RegisterExtension(optional_sint64_extension)
  TestAllExtensions.RegisterExtension(optional_fixed32_extension)
  TestAllExtensions.RegisterExtension(optional_fixed64_extension)
  TestAllExtensions.RegisterExtension(optional_sfixed32_extension)
  TestAllExtensions.RegisterExtension(optional_sfixed64_extension)
  TestAllExtensions.RegisterExtension(optional_float_extension)
  TestAllExtensions.RegisterExtension(optional_double_extension)
  TestAllExtensions.RegisterExtension(optional_bool_extension)
  TestAllExtensions.RegisterExtension(optional_string_extension)
  TestAllExtensions.RegisterExtension(optional_bytes_extension)
  TestAllExtensions.RegisterExtension(optionalgroup_extension)
  TestAllExtensions.RegisterExtension(optional_nested_message_extension)
  TestAllExtensions.RegisterExtension(optional_foreign_message_extension)
  TestAllExtensions.RegisterExtension(optional_import_message_extension)
  TestAllExtensions.RegisterExtension(optional_nested_enum_extension)
  TestAllExtensions.RegisterExtension(optional_foreign_enum_extension)
  TestAllExtensions.RegisterExtension(optional_import_enum_extension)
  TestAllExtensions.RegisterExtension(optional_string_piece_extension)
  TestAllExtensions.RegisterExtension(optional_cord_extension)
  TestAllExtensions.RegisterExtension(optional_public_import_message_extension)
  TestAllExtensions.RegisterExtension(optional_lazy_message_extension)
  TestAllExtensions.RegisterExtension(optional_unverified_lazy_message_extension)
  TestAllExtensions.RegisterExtension(repeated_int32_extension)
  TestAllExtensions.RegisterExtension(repeated_int64_extension)
  TestAllExtensions.RegisterExtension(repeated_uint32_extension)
  TestAllExtensions.RegisterExtension(repeated_uint64_extension)
  TestAllExtensions.RegisterExtension(repeated_sint32_extension)
  TestAllExtensions.RegisterExtension(repeated_sint64_extension)
  TestAllExtensions.RegisterExtension(repeated_fixed32_extension)
  TestAllExtensions.RegisterExtension(repeated_fixed64_extension)
  TestAllExtensions.RegisterExtension(repeated_sfixed32_extension)
  TestAllExtensions.RegisterExtension(repeated_sfixed64_extension)
  TestAllExtensions.RegisterExtension(repeated_float_extension)
  TestAllExtensions.RegisterExtension(repeated_double_extension)
  TestAllExtensions.RegisterExtension(repeated_bool_extension)
  TestAllExtensions.RegisterExtension(repeated_string_extension)
  TestAllExtensions.RegisterExtension(repeated_bytes_extension)
  TestAllExtensions.RegisterExtension(repeatedgroup_extension)
  TestAllExtensions.RegisterExtension(repeated_nested_message_extension)
  TestAllExtensions.RegisterExtension(repeated_foreign_message_extension)
  TestAllExtensions.RegisterExtension(repeated_import_message_extension)
  TestAllExtensions.RegisterExtension(repeated_nested_enum_extension)
  TestAllExtensions.RegisterExtension(repeated_foreign_enum_extension)
  TestAllExtensions.RegisterExtension(repeated_import_enum_extension)
  TestAllExtensions.RegisterExtension(repeated_string_piece_extension)
  TestAllExtensions.RegisterExtension(repeated_cord_extension)
  TestAllExtensions.RegisterExtension(repeated_lazy_message_extension)
  TestAllExtensions.RegisterExtension(default_int32_extension)
  TestAllExtensions.RegisterExtension(default_int64_extension)
  TestAllExtensions.RegisterExtension(default_uint32_extension)
  TestAllExtensions.RegisterExtension(default_uint64_extension)
  TestAllExtensions.RegisterExtension(default_sint32_extension)
  TestAllExtensions.RegisterExtension(default_sint64_extension)
  TestAllExtensions.RegisterExtension(default_fixed32_extension)
  TestAllExtensions.RegisterExtension(default_fixed64_extension)
  TestAllExtensions.RegisterExtension(default_sfixed32_extension)
  TestAllExtensions.RegisterExtension(default_sfixed64_extension)
  TestAllExtensions.RegisterExtension(default_float_extension)
  TestAllExtensions.RegisterExtension(default_double_extension)
  TestAllExtensions.RegisterExtension(default_bool_extension)
  TestAllExtensions.RegisterExtension(default_string_extension)
  TestAllExtensions.RegisterExtension(default_bytes_extension)
  TestAllExtensions.RegisterExtension(default_nested_enum_extension)
  TestAllExtensions.RegisterExtension(default_foreign_enum_extension)
  TestAllExtensions.RegisterExtension(default_import_enum_extension)
  TestAllExtensions.RegisterExtension(default_string_piece_extension)
  TestAllExtensions.RegisterExtension(default_cord_extension)
  TestAllExtensions.RegisterExtension(oneof_uint32_extension)
  TestAllExtensions.RegisterExtension(oneof_nested_message_extension)
  TestAllExtensions.RegisterExtension(oneof_string_extension)
  TestAllExtensions.RegisterExtension(oneof_bytes_extension)
  TestFieldOrderings.RegisterExtension(my_extension_string)
  TestFieldOrderings.RegisterExtension(my_extension_int)
  TestPackedExtensions.RegisterExtension(packed_int32_extension)
  TestPackedExtensions.RegisterExtension(packed_int64_extension)
  TestPackedExtensions.RegisterExtension(packed_uint32_extension)
  TestPackedExtensions.RegisterExtension(packed_uint64_extension)
  TestPackedExtensions.RegisterExtension(packed_sint32_extension)
  TestPackedExtensions.RegisterExtension(packed_sint64_extension)
  TestPackedExtensions.RegisterExtension(packed_fixed32_extension)
  TestPackedExtensions.RegisterExtension(packed_fixed64_extension)
  TestPackedExtensions.RegisterExtension(packed_sfixed32_extension)
  TestPackedExtensions.RegisterExtension(packed_sfixed64_extension)
  TestPackedExtensions.RegisterExtension(packed_float_extension)
  TestPackedExtensions.RegisterExtension(packed_double_extension)
  TestPackedExtensions.RegisterExtension(packed_bool_extension)
  TestPackedExtensions.RegisterExtension(packed_enum_extension)
  TestUnpackedExtensions.RegisterExtension(unpacked_int32_extension)
  TestUnpackedExtensions.RegisterExtension(unpacked_int64_extension)
  TestUnpackedExtensions.RegisterExtension(unpacked_uint32_extension)
  TestUnpackedExtensions.RegisterExtension(unpacked_uint64_extension)
  TestUnpackedExtensions.RegisterExtension(unpacked_sint32_extension)
  TestUnpackedExtensions.RegisterExtension(unpacked_sint64_extension)
  TestUnpackedExtensions.RegisterExtension(unpacked_fixed32_extension)
  TestUnpackedExtensions.RegisterExtension(unpacked_fixed64_extension)
  TestUnpackedExtensions.RegisterExtension(unpacked_sfixed32_extension)
  TestUnpackedExtensions.RegisterExtension(unpacked_sfixed64_extension)
  TestUnpackedExtensions.RegisterExtension(unpacked_float_extension)
  TestUnpackedExtensions.RegisterExtension(unpacked_double_extension)
  TestUnpackedExtensions.RegisterExtension(unpacked_bool_extension)
  TestUnpackedExtensions.RegisterExtension(unpacked_enum_extension)
  TestHugeFieldNumbers.RegisterExtension(test_all_types)
  TestExtensionInsideTable.RegisterExtension(test_extension_inside_table_extension)
  TestNestedGroupExtensionOuter.Layer1OptionalGroup.Layer2RepeatedGroup.RegisterExtension(inner)
  TestMixedFieldsAndExtensions.RegisterExtension(_TESTMIXEDFIELDSANDEXTENSIONS.extensions_by_name['c'])
  TestMixedFieldsAndExtensions.RegisterExtension(_TESTMIXEDFIELDSANDEXTENSIONS.extensions_by_name['d'])
  TestAllExtensions.RegisterExtension(_TESTNESTEDEXTENSION.extensions_by_name['test'])
  TestAllExtensions.RegisterExtension(_TESTNESTEDEXTENSION.extensions_by_name['nested_string_extension'])
  TestGroupExtension.RegisterExtension(_TESTNESTEDEXTENSION.extensions_by_name['optionalgroup_extension'])
  TestGroupExtension.RegisterExtension(_TESTNESTEDEXTENSION.extensions_by_name['optional_foreign_enum_extension'])
  TestAllExtensions.RegisterExtension(_TESTREQUIRED.extensions_by_name['single'])
  TestAllExtensions.RegisterExtension(_TESTREQUIRED.extensions_by_name['multi'])
  TestFieldOrderings.RegisterExtension(_TESTEXTENSIONORDERINGS1.extensions_by_name['test_ext_orderings1'])
  TestFieldOrderings.RegisterExtension(_TESTEXTENSIONORDERINGS2_TESTEXTENSIONORDERINGS3.extensions_by_name['test_ext_orderings3'])
  TestFieldOrderings.RegisterExtension(_TESTEXTENSIONORDERINGS2.extensions_by_name['test_ext_orderings2'])
  TestParsingMerge.RegisterExtension(_TESTPARSINGMERGE.extensions_by_name['optional_ext'])
  TestParsingMerge.RegisterExtension(_TESTPARSINGMERGE.extensions_by_name['repeated_ext'])
  TestExtensionRangeSerialize.RegisterExtension(_TESTEXTENSIONRANGESERIALIZE.extensions_by_name['bar_one'])
  TestExtensionRangeSerialize.RegisterExtension(_TESTEXTENSIONRANGESERIALIZE.extensions_by_name['bar_two'])
  TestExtensionRangeSerialize.RegisterExtension(_TESTEXTENSIONRANGESERIALIZE.extensions_by_name['bar_three'])
  TestExtensionRangeSerialize.RegisterExtension(_TESTEXTENSIONRANGESERIALIZE.extensions_by_name['bar_four'])
  TestExtensionRangeSerialize.RegisterExtension(_TESTEXTENSIONRANGESERIALIZE.extensions_by_name['bar_five'])

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'B\rUnittestProtoH\001\200\001\001\210\001\001\220\001\001\370\001\001'
  _TESTENUMWITHDUPVALUE._options = None
  _TESTENUMWITHDUPVALUE._serialized_options = b'\020\001'
  optional_string_piece_extension._options = None
  optional_string_piece_extension._serialized_options = b'\010\002'
  optional_cord_extension._options = None
  optional_cord_extension._serialized_options = b'\010\001'
  optional_lazy_message_extension._options = None
  optional_lazy_message_extension._serialized_options = b'(\001'
  optional_unverified_lazy_message_extension._options = None
  optional_unverified_lazy_message_extension._serialized_options = b'x\001'
  repeated_string_piece_extension._options = None
  repeated_string_piece_extension._serialized_options = b'\010\002'
  repeated_cord_extension._options = None
  repeated_cord_extension._serialized_options = b'\010\001'
  repeated_lazy_message_extension._options = None
  repeated_lazy_message_extension._serialized_options = b'(\001'
  default_string_piece_extension._options = None
  default_string_piece_extension._serialized_options = b'\010\002'
  default_cord_extension._options = None
  default_cord_extension._serialized_options = b'\010\001'
  packed_int32_extension._options = None
  packed_int32_extension._serialized_options = b'\020\001'
  packed_int64_extension._options = None
  packed_int64_extension._serialized_options = b'\020\001'
  packed_uint32_extension._options = None
  packed_uint32_extension._serialized_options = b'\020\001'
  packed_uint64_extension._options = None
  packed_uint64_extension._serialized_options = b'\020\001'
  packed_sint32_extension._options = None
  packed_sint32_extension._serialized_options = b'\020\001'
  packed_sint64_extension._options = None
  packed_sint64_extension._serialized_options = b'\020\001'
  packed_fixed32_extension._options = None
  packed_fixed32_extension._serialized_options = b'\020\001'
  packed_fixed64_extension._options = None
  packed_fixed64_extension._serialized_options = b'\020\001'
  packed_sfixed32_extension._options = None
  packed_sfixed32_extension._serialized_options = b'\020\001'
  packed_sfixed64_extension._options = None
  packed_sfixed64_extension._serialized_options = b'\020\001'
  packed_float_extension._options = None
  packed_float_extension._serialized_options = b'\020\001'
  packed_double_extension._options = None
  packed_double_extension._serialized_options = b'\020\001'
  packed_bool_extension._options = None
  packed_bool_extension._serialized_options = b'\020\001'
  packed_enum_extension._options = None
  packed_enum_extension._serialized_options = b'\020\001'
  unpacked_int32_extension._options = None
  unpacked_int32_extension._serialized_options = b'\020\000'
  unpacked_int64_extension._options = None
  unpacked_int64_extension._serialized_options = b'\020\000'
  unpacked_uint32_extension._options = None
  unpacked_uint32_extension._serialized_options = b'\020\000'
  unpacked_uint64_extension._options = None
  unpacked_uint64_extension._serialized_options = b'\020\000'
  unpacked_sint32_extension._options = None
  unpacked_sint32_extension._serialized_options = b'\020\000'
  unpacked_sint64_extension._options = None
  unpacked_sint64_extension._serialized_options = b'\020\000'
  unpacked_fixed32_extension._options = None
  unpacked_fixed32_extension._serialized_options = b'\020\000'
  unpacked_fixed64_extension._options = None
  unpacked_fixed64_extension._serialized_options = b'\020\000'
  unpacked_sfixed32_extension._options = None
  unpacked_sfixed32_extension._serialized_options = b'\020\000'
  unpacked_sfixed64_extension._options = None
  unpacked_sfixed64_extension._serialized_options = b'\020\000'
  unpacked_float_extension._options = None
  unpacked_float_extension._serialized_options = b'\020\000'
  unpacked_double_extension._options = None
  unpacked_double_extension._serialized_options = b'\020\000'
  unpacked_bool_extension._options = None
  unpacked_bool_extension._serialized_options = b'\020\000'
  unpacked_enum_extension._options = None
  unpacked_enum_extension._serialized_options = b'\020\000'
  _TESTALLTYPES.fields_by_name['optional_string_piece']._options = None
  _TESTALLTYPES.fields_by_name['optional_string_piece']._serialized_options = b'\010\002'
  _TESTALLTYPES.fields_by_name['optional_cord']._options = None
  _TESTALLTYPES.fields_by_name['optional_cord']._serialized_options = b'\010\001'
  _TESTALLTYPES.fields_by_name['optional_lazy_message']._options = None
  _TESTALLTYPES.fields_by_name['optional_lazy_message']._serialized_options = b'(\001'
  _TESTALLTYPES.fields_by_name['optional_unverified_lazy_message']._options = None
  _TESTALLTYPES.fields_by_name['optional_unverified_lazy_message']._serialized_options = b'x\001'
  _TESTALLTYPES.fields_by_name['repeated_string_piece']._options = None
  _TESTALLTYPES.fields_by_name['repeated_string_piece']._serialized_options = b'\010\002'
  _TESTALLTYPES.fields_by_name['repeated_cord']._options = None
  _TESTALLTYPES.fields_by_name['repeated_cord']._serialized_options = b'\010\001'
  _TESTALLTYPES.fields_by_name['repeated_lazy_message']._options = None
  _TESTALLTYPES.fields_by_name['repeated_lazy_message']._serialized_options = b'(\001'
  _TESTALLTYPES.fields_by_name['default_string_piece']._options = None
  _TESTALLTYPES.fields_by_name['default_string_piece']._serialized_options = b'\010\002'
  _TESTALLTYPES.fields_by_name['default_cord']._options = None
  _TESTALLTYPES.fields_by_name['default_cord']._serialized_options = b'\010\001'
  _NESTEDTESTALLTYPES.fields_by_name['lazy_child']._options = None
  _NESTEDTESTALLTYPES.fields_by_name['lazy_child']._serialized_options = b'(\001'
  _NESTEDTESTALLTYPES.fields_by_name['eager_child']._options = None
  _NESTEDTESTALLTYPES.fields_by_name['eager_child']._serialized_options = b'(\000'
  _TESTDEPRECATEDFIELDS.fields_by_name['deprecated_int32']._options = None
  _TESTDEPRECATEDFIELDS.fields_by_name['deprecated_int32']._serialized_options = b'\030\001'
  _TESTDEPRECATEDFIELDS.fields_by_name['deprecated_repeated_string']._options = None
  _TESTDEPRECATEDFIELDS.fields_by_name['deprecated_repeated_string']._serialized_options = b'\030\001'
  _TESTDEPRECATEDFIELDS.fields_by_name['deprecated_message']._options = None
  _TESTDEPRECATEDFIELDS.fields_by_name['deprecated_message']._serialized_options = b'\030\001'
  _TESTDEPRECATEDFIELDS.fields_by_name['deprecated_int32_in_oneof']._options = None
  _TESTDEPRECATEDFIELDS.fields_by_name['deprecated_int32_in_oneof']._serialized_options = b'\030\001'
  _TESTDEPRECATEDMESSAGE._options = None
  _TESTDEPRECATEDMESSAGE._serialized_options = b'\030\001'
  _TESTREQUIREDFOREIGN.fields_by_name['optional_lazy_message']._options = None
  _TESTREQUIREDFOREIGN.fields_by_name['optional_lazy_message']._serialized_options = b'(\001'
  _TESTEAGERMESSAGE.fields_by_name['sub_message']._options = None
  _TESTEAGERMESSAGE.fields_by_name['sub_message']._serialized_options = b'(\000'
  _TESTLAZYMESSAGE.fields_by_name['sub_message']._options = None
  _TESTLAZYMESSAGE.fields_by_name['sub_message']._serialized_options = b'(\001'
  _TESTCAMELCASEFIELDNAMES.fields_by_name['StringPieceField']._options = None
  _TESTCAMELCASEFIELDNAMES.fields_by_name['StringPieceField']._serialized_options = b'\010\002'
  _TESTCAMELCASEFIELDNAMES.fields_by_name['CordField']._options = None
  _TESTCAMELCASEFIELDNAMES.fields_by_name['CordField']._serialized_options = b'\010\001'
  _TESTCAMELCASEFIELDNAMES.fields_by_name['RepeatedStringPieceField']._options = None
  _TESTCAMELCASEFIELDNAMES.fields_by_name['RepeatedStringPieceField']._serialized_options = b'\010\002'
  _TESTCAMELCASEFIELDNAMES.fields_by_name['RepeatedCordField']._options = None
  _TESTCAMELCASEFIELDNAMES.fields_by_name['RepeatedCordField']._serialized_options = b'\010\001'
  _TESTEXTREMEDEFAULTVALUES.fields_by_name['string_piece_with_zero']._options = None
  _TESTEXTREMEDEFAULTVALUES.fields_by_name['string_piece_with_zero']._serialized_options = b'\010\002'
  _TESTEXTREMEDEFAULTVALUES.fields_by_name['cord_with_zero']._options = None
  _TESTEXTREMEDEFAULTVALUES.fields_by_name['cord_with_zero']._serialized_options = b'\010\001'
  _TESTONEOF2.fields_by_name['foo_cord']._options = None
  _TESTONEOF2.fields_by_name['foo_cord']._serialized_options = b'\010\001'
  _TESTONEOF2.fields_by_name['foo_string_piece']._options = None
  _TESTONEOF2.fields_by_name['foo_string_piece']._serialized_options = b'\010\002'
  _TESTONEOF2.fields_by_name['foo_lazy_message']._options = None
  _TESTONEOF2.fields_by_name['foo_lazy_message']._serialized_options = b'(\001'
  _TESTONEOF2.fields_by_name['bar_cord']._options = None
  _TESTONEOF2.fields_by_name['bar_cord']._serialized_options = b'\010\001'
  _TESTONEOF2.fields_by_name['bar_string_piece']._options = None
  _TESTONEOF2.fields_by_name['bar_string_piece']._serialized_options = b'\010\002'
  _TESTONEOF2.fields_by_name['bar_cord_with_empty_default']._options = None
  _TESTONEOF2.fields_by_name['bar_cord_with_empty_default']._serialized_options = b'\010\001'
  _TESTONEOF2.fields_by_name['bar_string_piece_with_empty_default']._options = None
  _TESTONEOF2.fields_by_name['bar_string_piece_with_empty_default']._serialized_options = b'\010\002'
  _TESTREQUIREDONEOF.fields_by_name['foo_lazy_message']._options = None
  _TESTREQUIREDONEOF.fields_by_name['foo_lazy_message']._serialized_options = b'(\001'
  _TESTPACKEDTYPES.fields_by_name['packed_int32']._options = None
  _TESTPACKEDTYPES.fields_by_name['packed_int32']._serialized_options = b'\020\001'
  _TESTPACKEDTYPES.fields_by_name['packed_int64']._options = None
  _TESTPACKEDTYPES.fields_by_name['packed_int64']._serialized_options = b'\020\001'
  _TESTPACKEDTYPES.fields_by_name['packed_uint32']._options = None
  _TESTPACKEDTYPES.fields_by_name['packed_uint32']._serialized_options = b'\020\001'
  _TESTPACKEDTYPES.fields_by_name['packed_uint64']._options = None
  _TESTPACKEDTYPES.fields_by_name['packed_uint64']._serialized_options = b'\020\001'
  _TESTPACKEDTYPES.fields_by_name['packed_sint32']._options = None
  _TESTPACKEDTYPES.fields_by_name['packed_sint32']._serialized_options = b'\020\001'
  _TESTPACKEDTYPES.fields_by_name['packed_sint64']._options = None
  _TESTPACKEDTYPES.fields_by_name['packed_sint64']._serialized_options = b'\020\001'
  _TESTPACKEDTYPES.fields_by_name['packed_fixed32']._options = None
  _TESTPACKEDTYPES.fields_by_name['packed_fixed32']._serialized_options = b'\020\001'
  _TESTPACKEDTYPES.fields_by_name['packed_fixed64']._options = None
  _TESTPACKEDTYPES.fields_by_name['packed_fixed64']._serialized_options = b'\020\001'
  _TESTPACKEDTYPES.fields_by_name['packed_sfixed32']._options = None
  _TESTPACKEDTYPES.fields_by_name['packed_sfixed32']._serialized_options = b'\020\001'
  _TESTPACKEDTYPES.fields_by_name['packed_sfixed64']._options = None
  _TESTPACKEDTYPES.fields_by_name['packed_sfixed64']._serialized_options = b'\020\001'
  _TESTPACKEDTYPES.fields_by_name['packed_float']._options = None
  _TESTPACKEDTYPES.fields_by_name['packed_float']._serialized_options = b'\020\001'
  _TESTPACKEDTYPES.fields_by_name['packed_double']._options = None
  _TESTPACKEDTYPES.fields_by_name['packed_double']._serialized_options = b'\020\001'
  _TESTPACKEDTYPES.fields_by_name['packed_bool']._options = None
  _TESTPACKEDTYPES.fields_by_name['packed_bool']._serialized_options = b'\020\001'
  _TESTPACKEDTYPES.fields_by_name['packed_enum']._options = None
  _TESTPACKEDTYPES.fields_by_name['packed_enum']._serialized_options = b'\020\001'
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_int32']._options = None
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_int32']._serialized_options = b'\020\000'
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_int64']._options = None
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_int64']._serialized_options = b'\020\000'
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_uint32']._options = None
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_uint32']._serialized_options = b'\020\000'
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_uint64']._options = None
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_uint64']._serialized_options = b'\020\000'
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_sint32']._options = None
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_sint32']._serialized_options = b'\020\000'
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_sint64']._options = None
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_sint64']._serialized_options = b'\020\000'
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_fixed32']._options = None
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_fixed32']._serialized_options = b'\020\000'
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_fixed64']._options = None
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_fixed64']._serialized_options = b'\020\000'
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_sfixed32']._options = None
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_sfixed32']._serialized_options = b'\020\000'
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_sfixed64']._options = None
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_sfixed64']._serialized_options = b'\020\000'
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_float']._options = None
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_float']._serialized_options = b'\020\000'
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_double']._options = None
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_double']._serialized_options = b'\020\000'
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_bool']._options = None
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_bool']._serialized_options = b'\020\000'
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_enum']._options = None
  _TESTUNPACKEDTYPES.fields_by_name['unpacked_enum']._serialized_options = b'\020\000'
  _TESTDYNAMICEXTENSIONS.fields_by_name['packed_extension']._options = None
  _TESTDYNAMICEXTENSIONS.fields_by_name['packed_extension']._serialized_options = b'\020\001'
  _TESTHUGEFIELDNUMBERS_STRINGSTRINGMAPENTRY._options = None
  _TESTHUGEFIELDNUMBERS_STRINGSTRINGMAPENTRY._serialized_options = b'8\001'
  _TESTHUGEFIELDNUMBERS.fields_by_name['repeated_int32']._options = None
  _TESTHUGEFIELDNUMBERS.fields_by_name['repeated_int32']._serialized_options = b'\020\000'
  _TESTHUGEFIELDNUMBERS.fields_by_name['packed_int32']._options = None
  _TESTHUGEFIELDNUMBERS.fields_by_name['packed_int32']._serialized_options = b'\020\001'
  _ENUMPARSETESTER.fields_by_name['packed_seq_small_0_lowfield']._options = None
  _ENUMPARSETESTER.fields_by_name['packed_seq_small_0_lowfield']._serialized_options = b'\020\001'
  _ENUMPARSETESTER.fields_by_name['packed_seq_small_0_midfield']._options = None
  _ENUMPARSETESTER.fields_by_name['packed_seq_small_0_midfield']._serialized_options = b'\020\001'
  _ENUMPARSETESTER.fields_by_name['packed_seq_small_0_hifield']._options = None
  _ENUMPARSETESTER.fields_by_name['packed_seq_small_0_hifield']._serialized_options = b'\020\001'
  _ENUMPARSETESTER.fields_by_name['packed_seq_small_1_lowfield']._options = None
  _ENUMPARSETESTER.fields_by_name['packed_seq_small_1_lowfield']._serialized_options = b'\020\001'
  _ENUMPARSETESTER.fields_by_name['packed_seq_small_1_midfield']._options = None
  _ENUMPARSETESTER.fields_by_name['packed_seq_small_1_midfield']._serialized_options = b'\020\001'
  _ENUMPARSETESTER.fields_by_name['packed_seq_small_1_hifield']._options = None
  _ENUMPARSETESTER.fields_by_name['packed_seq_small_1_hifield']._serialized_options = b'\020\001'
  _ENUMPARSETESTER.fields_by_name['packed_seq_large_lowfield']._options = None
  _ENUMPARSETESTER.fields_by_name['packed_seq_large_lowfield']._serialized_options = b'\020\001'
  _ENUMPARSETESTER.fields_by_name['packed_seq_large_midfield']._options = None
  _ENUMPARSETESTER.fields_by_name['packed_seq_large_midfield']._serialized_options = b'\020\001'
  _ENUMPARSETESTER.fields_by_name['packed_seq_large_hifield']._options = None
  _ENUMPARSETESTER.fields_by_name['packed_seq_large_hifield']._serialized_options = b'\020\001'
  _ENUMPARSETESTER.fields_by_name['packed_arbitrary_lowfield']._options = None
  _ENUMPARSETESTER.fields_by_name['packed_arbitrary_lowfield']._serialized_options = b'\020\001'
  _ENUMPARSETESTER.fields_by_name['packed_arbitrary_midfield']._options = None
  _ENUMPARSETESTER.fields_by_name['packed_arbitrary_midfield']._serialized_options = b'\020\001'
  _ENUMPARSETESTER.fields_by_name['packed_arbitrary_hifield']._options = None
  _ENUMPARSETESTER.fields_by_name['packed_arbitrary_hifield']._serialized_options = b'\020\001'
  _BOOLPARSETESTER.fields_by_name['packed_bool_lowfield']._options = None
  _BOOLPARSETESTER.fields_by_name['packed_bool_lowfield']._serialized_options = b'\020\001'
  _BOOLPARSETESTER.fields_by_name['packed_bool_midfield']._options = None
  _BOOLPARSETESTER.fields_by_name['packed_bool_midfield']._serialized_options = b'\020\001'
  _BOOLPARSETESTER.fields_by_name['packed_bool_hifield']._options = None
  _BOOLPARSETESTER.fields_by_name['packed_bool_hifield']._serialized_options = b'\020\001'
  _REDACTEDFIELDS.fields_by_name['optional_redacted_string']._options = None
  _REDACTEDFIELDS.fields_by_name['optional_redacted_string']._serialized_options = b'\200\001\001'
  _FOREIGNENUM._serialized_start=27293
  _FOREIGNENUM._serialized_end=27357
  _TESTRESERVEDENUMFIELDS._serialized_start=27359
  _TESTRESERVEDENUMFIELDS._serialized_end=27424
  _TESTENUMWITHDUPVALUE._serialized_start=27426
  _TESTENUMWITHDUPVALUE._serialized_end=27501
  _TESTSPARSEENUM._serialized_start=27504
  _TESTSPARSEENUM._serialized_end=27641
  _VERYLARGEENUM._serialized_start=27644
  _VERYLARGEENUM._serialized_end=29575
  _TESTALLTYPES._serialized_start=93
  _TESTALLTYPES._serialized_end=3367
  _TESTALLTYPES_NESTEDMESSAGE._serialized_start=3210
  _TESTALLTYPES_NESTEDMESSAGE._serialized_end=3237
  _TESTALLTYPES_OPTIONALGROUP._serialized_start=3239
  _TESTALLTYPES_OPTIONALGROUP._serialized_end=3265
  _TESTALLTYPES_REPEATEDGROUP._serialized_start=3267
  _TESTALLTYPES_REPEATEDGROUP._serialized_end=3293
  _TESTALLTYPES_NESTEDENUM._serialized_start=3295
  _TESTALLTYPES_NESTEDENUM._serialized_end=3352
  _NESTEDTESTALLTYPES._serialized_start=3370
  _NESTEDTESTALLTYPES._serialized_end=3678
  _TESTDEPRECATEDFIELDS._serialized_start=3681
  _TESTDEPRECATEDFIELDS._serialized_end=3966
  _TESTDEPRECATEDMESSAGE._serialized_start=3968
  _TESTDEPRECATEDMESSAGE._serialized_end=3995
  _FOREIGNMESSAGE._serialized_start=3997
  _FOREIGNMESSAGE._serialized_end=4035
  _TESTRESERVEDFIELDS._serialized_start=4037
  _TESTRESERVEDFIELDS._serialized_end=4085
  _TESTALLEXTENSIONS._serialized_start=4087
  _TESTALLEXTENSIONS._serialized_end=4116
  _OPTIONALGROUP_EXTENSION._serialized_start=4118
  _OPTIONALGROUP_EXTENSION._serialized_end=4154
  _REPEATEDGROUP_EXTENSION._serialized_start=4156
  _REPEATEDGROUP_EXTENSION._serialized_end=4192
  _TESTMIXEDFIELDSANDEXTENSIONS._serialized_start=4195
  _TESTMIXEDFIELDSANDEXTENSIONS._serialized_end=4379
  _TESTGROUP._serialized_start=4382
  _TESTGROUP._serialized_end=4563
  _TESTGROUP_OPTIONALGROUP._serialized_start=4525
  _TESTGROUP_OPTIONALGROUP._serialized_end=4563
  _TESTGROUPEXTENSION._serialized_start=4565
  _TESTGROUPEXTENSION._serialized_end=4595
  _TESTNESTEDEXTENSION._serialized_start=4598
  _TESTNESTEDEXTENSION._serialized_end=5037
  _TESTNESTEDEXTENSION_OPTIONALGROUP_EXTENSION._serialized_start=4118
  _TESTNESTEDEXTENSION_OPTIONALGROUP_EXTENSION._serialized_end=4154
  _TESTCHILDEXTENSION._serialized_start=5039
  _TESTCHILDEXTENSION._serialized_end=5147
  _TESTCHILDEXTENSIONDATA._serialized_start=5150
  _TESTCHILDEXTENSIONDATA._serialized_end=5492
  _TESTCHILDEXTENSIONDATA_NESTEDTESTALLEXTENSIONSDATA._serialized_start=5298
  _TESTCHILDEXTENSIONDATA_NESTEDTESTALLEXTENSIONSDATA._serialized_end=5492
  _TESTCHILDEXTENSIONDATA_NESTEDTESTALLEXTENSIONSDATA_NESTEDDYNAMICEXTENSIONS._serialized_start=5445
  _TESTCHILDEXTENSIONDATA_NESTEDTESTALLEXTENSIONSDATA_NESTEDDYNAMICEXTENSIONS._serialized_end=5492
  _TESTNESTEDCHILDEXTENSION._serialized_start=5494
  _TESTNESTEDCHILDEXTENSION._serialized_end=5585
  _TESTNESTEDCHILDEXTENSIONDATA._serialized_start=5587
  _TESTNESTEDCHILDEXTENSIONDATA._serialized_end=5686
  _TESTREQUIRED._serialized_start=5689
  _TESTREQUIRED._serialized_end=6475
  _TESTREQUIREDFOREIGN._serialized_start=6478
  _TESTREQUIREDFOREIGN._serialized_end=6706
  _TESTREQUIREDMESSAGE._serialized_start=6709
  _TESTREQUIREDMESSAGE._serialized_end=6907
  _TESTNESTEDREQUIREDFOREIGN._serialized_start=6910
  _TESTNESTEDREQUIREDFOREIGN._serialized_end=7070
  _TESTFOREIGNNESTED._serialized_start=7072
  _TESTFOREIGNNESTED._serialized_end=7162
  _TESTEMPTYMESSAGE._serialized_start=7164
  _TESTEMPTYMESSAGE._serialized_end=7182
  _TESTEMPTYMESSAGEWITHEXTENSIONS._serialized_start=7184
  _TESTEMPTYMESSAGEWITHEXTENSIONS._serialized_end=7226
  _TESTPICKLENESTEDMESSAGE._serialized_start=7228
  _TESTPICKLENESTEDMESSAGE._serialized_end=7317
  _TESTPICKLENESTEDMESSAGE_NESTEDMESSAGE._serialized_start=7255
  _TESTPICKLENESTEDMESSAGE_NESTEDMESSAGE._serialized_end=7317
  _TESTPICKLENESTEDMESSAGE_NESTEDMESSAGE_NESTEDNESTEDMESSAGE._serialized_start=7284
  _TESTPICKLENESTEDMESSAGE_NESTEDMESSAGE_NESTEDNESTEDMESSAGE._serialized_end=7317
  _TESTMULTIPLEEXTENSIONRANGES._serialized_start=7319
  _TESTMULTIPLEEXTENSIONRANGES._serialized_end=7374
  _TESTREALLYLARGETAGNUMBER._serialized_start=7376
  _TESTREALLYLARGETAGNUMBER._serialized_end=7428
  _TESTRECURSIVEMESSAGE._serialized_start=7430
  _TESTRECURSIVEMESSAGE._serialized_end=7515
  _TESTMUTUALRECURSIONA._serialized_start=7518
  _TESTMUTUALRECURSIONA._serialized_end=7871
  _TESTMUTUALRECURSIONA_SUBMESSAGE._serialized_start=7663
  _TESTMUTUALRECURSIONA_SUBMESSAGE._serialized_end=7727
  _TESTMUTUALRECURSIONA_SUBGROUP._serialized_start=7730
  _TESTMUTUALRECURSIONA_SUBGROUP._serialized_end=7871
  _TESTMUTUALRECURSIONB._serialized_start=7873
  _TESTMUTUALRECURSIONB._serialized_end=7971
  _TESTISINITIALIZED._serialized_start=7974
  _TESTISINITIALIZED._serialized_end=8176
  _TESTISINITIALIZED_SUBMESSAGE._serialized_start=8065
  _TESTISINITIALIZED_SUBMESSAGE._serialized_end=8176
  _TESTISINITIALIZED_SUBMESSAGE_SUBGROUP._serialized_start=8155
  _TESTISINITIALIZED_SUBMESSAGE_SUBGROUP._serialized_end=8176
  _TESTDUPFIELDNUMBER._serialized_start=8179
  _TESTDUPFIELDNUMBER._serialized_end=8358
  _TESTDUPFIELDNUMBER_FOO._serialized_start=8324
  _TESTDUPFIELDNUMBER_FOO._serialized_end=8340
  _TESTDUPFIELDNUMBER_BAR._serialized_start=8342
  _TESTDUPFIELDNUMBER_BAR._serialized_end=8358
  _TESTEAGERMESSAGE._serialized_start=8360
  _TESTEAGERMESSAGE._serialized_end=8436
  _TESTLAZYMESSAGE._serialized_start=8438
  _TESTLAZYMESSAGE._serialized_end=8513
  _TESTEAGERMAYBELAZY._serialized_start=8516
  _TESTEAGERMAYBELAZY._serialized_end=8787
  _TESTEAGERMAYBELAZY_NESTEDMESSAGE._serialized_start=8720
  _TESTEAGERMAYBELAZY_NESTEDMESSAGE._serialized_end=8787
  _TESTNESTEDMESSAGEHASBITS._serialized_start=8790
  _TESTNESTEDMESSAGEHASBITS._serialized_end=9046
  _TESTNESTEDMESSAGEHASBITS_NESTEDMESSAGE._serialized_start=8911
  _TESTNESTEDMESSAGEHASBITS_NESTEDMESSAGE._serialized_end=9046
  _TESTCAMELCASEFIELDNAMES._serialized_start=9049
  _TESTCAMELCASEFIELDNAMES._serialized_end=9534
  _TESTFIELDORDERINGS._serialized_start=9537
  _TESTFIELDORDERINGS._serialized_end=9750
  _TESTFIELDORDERINGS_NESTEDMESSAGE._serialized_start=9699
  _TESTFIELDORDERINGS_NESTEDMESSAGE._serialized_end=9738
  _TESTEXTENSIONORDERINGS1._serialized_start=9753
  _TESTEXTENSIONORDERINGS1._serialized_end=9909
  _TESTEXTENSIONORDERINGS2._serialized_start=9912
  _TESTEXTENSIONORDERINGS2._serialized_end=10252
  _TESTEXTENSIONORDERINGS2_TESTEXTENSIONORDERINGS3._serialized_start=9959
  _TESTEXTENSIONORDERINGS2_TESTEXTENSIONORDERINGS3._serialized_end=10140
  _TESTEXTREMEDEFAULTVALUES._serialized_start=10255
  _TESTEXTREMEDEFAULTVALUES._serialized_end=11205
  _SPARSEENUMMESSAGE._serialized_start=11207
  _SPARSEENUMMESSAGE._serialized_end=11282
  _ONESTRING._serialized_start=11284
  _ONESTRING._serialized_end=11309
  _MORESTRING._serialized_start=11311
  _MORESTRING._serialized_end=11337
  _ONEBYTES._serialized_start=11339
  _ONEBYTES._serialized_end=11363
  _MOREBYTES._serialized_start=11365
  _MOREBYTES._serialized_end=11390
  _MANYOPTIONALSTRING._serialized_start=11393
  _MANYOPTIONALSTRING._serialized_end=11884
  _INT32MESSAGE._serialized_start=11886
  _INT32MESSAGE._serialized_end=11914
  _UINT32MESSAGE._serialized_start=11916
  _UINT32MESSAGE._serialized_end=11945
  _INT64MESSAGE._serialized_start=11947
  _INT64MESSAGE._serialized_end=11975
  _UINT64MESSAGE._serialized_start=11977
  _UINT64MESSAGE._serialized_end=12006
  _BOOLMESSAGE._serialized_start=12008
  _BOOLMESSAGE._serialized_end=12035
  _TESTONEOF._serialized_start=12038
  _TESTONEOF._serialized_end=12246
  _TESTONEOF_FOOGROUP._serialized_start=12207
  _TESTONEOF_FOOGROUP._serialized_end=12239
  _TESTONEOFBACKWARDSCOMPATIBLE._serialized_start=12249
  _TESTONEOFBACKWARDSCOMPATIBLE._serialized_end=12480
  _TESTONEOFBACKWARDSCOMPATIBLE_FOOGROUP._serialized_start=12207
  _TESTONEOFBACKWARDSCOMPATIBLE_FOOGROUP._serialized_end=12239
  _TESTONEOF2._serialized_start=12483
  _TESTONEOF2._serialized_end=13464
  _TESTONEOF2_FOOGROUP._serialized_start=13324
  _TESTONEOF2_FOOGROUP._serialized_end=13356
  _TESTONEOF2_NESTEDMESSAGE._serialized_start=13358
  _TESTONEOF2_NESTEDMESSAGE._serialized_end=13409
  _TESTONEOF2_NESTEDENUM._serialized_start=3295
  _TESTONEOF2_NESTEDENUM._serialized_end=3334
  _TESTREQUIREDONEOF._serialized_start=13467
  _TESTREQUIREDONEOF._serialized_end=13735
  _TESTREQUIREDONEOF_NESTEDMESSAGE._serialized_start=13688
  _TESTREQUIREDONEOF_NESTEDMESSAGE._serialized_end=13728
  _TESTPACKEDTYPES._serialized_start=13738
  _TESTPACKEDTYPES._serialized_end=14164
  _TESTUNPACKEDTYPES._serialized_start=14167
  _TESTUNPACKEDTYPES._serialized_end=14623
  _TESTPACKEDEXTENSIONS._serialized_start=14625
  _TESTPACKEDEXTENSIONS._serialized_end=14657
  _TESTUNPACKEDEXTENSIONS._serialized_start=14659
  _TESTUNPACKEDEXTENSIONS._serialized_end=14693
  _TESTDYNAMICEXTENSIONS._serialized_start=14696
  _TESTDYNAMICEXTENSIONS._serialized_end=15233
  _TESTDYNAMICEXTENSIONS_DYNAMICMESSAGETYPE._serialized_start=15116
  _TESTDYNAMICEXTENSIONS_DYNAMICMESSAGETYPE._serialized_end=15160
  _TESTDYNAMICEXTENSIONS_DYNAMICENUMTYPE._serialized_start=15162
  _TESTDYNAMICEXTENSIONS_DYNAMICENUMTYPE._serialized_end=15233
  _TESTREPEATEDSTRING._serialized_start=15235
  _TESTREPEATEDSTRING._serialized_end=15359
  _TESTREPEATEDSCALARDIFFERENTTAGSIZES._serialized_start=15362
  _TESTREPEATEDSCALARDIFFERENTTAGSIZES._serialized_end=15554
  _TESTPARSINGMERGE._serialized_start=15557
  _TESTPARSINGMERGE._serialized_end=16828
  _TESTPARSINGMERGE_REPEATEDFIELDSGENERATOR._serialized_start=15909
  _TESTPARSINGMERGE_REPEATEDFIELDSGENERATOR._serialized_end=16463
  _TESTPARSINGMERGE_REPEATEDFIELDSGENERATOR_GROUP1._serialized_start=16347
  _TESTPARSINGMERGE_REPEATEDFIELDSGENERATOR_GROUP1._serialized_end=16404
  _TESTPARSINGMERGE_REPEATEDFIELDSGENERATOR_GROUP2._serialized_start=16406
  _TESTPARSINGMERGE_REPEATEDFIELDSGENERATOR_GROUP2._serialized_end=16463
  _TESTPARSINGMERGE_OPTIONALGROUP._serialized_start=16465
  _TESTPARSINGMERGE_OPTIONALGROUP._serialized_end=16547
  _TESTPARSINGMERGE_REPEATEDGROUP._serialized_start=16549
  _TESTPARSINGMERGE_REPEATEDGROUP._serialized_end=16631
  _TESTMERGEEXCEPTION._serialized_start=16830
  _TESTMERGEEXCEPTION._serialized_end=16912
  _TESTCOMMENTINJECTIONMESSAGE._serialized_start=16914
  _TESTCOMMENTINJECTIONMESSAGE._serialized_end=16982
  _TESTMESSAGESIZE._serialized_start=16984
  _TESTMESSAGESIZE._serialized_end=17073
  _FOOREQUEST._serialized_start=17075
  _FOOREQUEST._serialized_end=17087
  _FOORESPONSE._serialized_start=17089
  _FOORESPONSE._serialized_end=17102
  _FOOCLIENTMESSAGE._serialized_start=17104
  _FOOCLIENTMESSAGE._serialized_end=17122
  _FOOSERVERMESSAGE._serialized_start=17124
  _FOOSERVERMESSAGE._serialized_end=17142
  _BARREQUEST._serialized_start=17144
  _BARREQUEST._serialized_end=17156
  _BARRESPONSE._serialized_start=17158
  _BARRESPONSE._serialized_end=17171
  _TESTJSONNAME._serialized_start=17174
  _TESTJSONNAME._serialized_end=17340
  _TESTHUGEFIELDNUMBERS._serialized_start=17343
  _TESTHUGEFIELDNUMBERS._serialized_end=18108
  _TESTHUGEFIELDNUMBERS_OPTIONALGROUP._serialized_start=17987
  _TESTHUGEFIELDNUMBERS_OPTIONALGROUP._serialized_end=18023
  _TESTHUGEFIELDNUMBERS_STRINGSTRINGMAPENTRY._serialized_start=18025
  _TESTHUGEFIELDNUMBERS_STRINGSTRINGMAPENTRY._serialized_end=18079
  _TESTEXTENSIONINSIDETABLE._serialized_start=18111
  _TESTEXTENSIONINSIDETABLE._serialized_end=18288
  _TESTNESTEDGROUPEXTENSIONOUTER._serialized_start=18291
  _TESTNESTEDGROUPEXTENSIONOUTER._serialized_end=18825
  _TESTNESTEDGROUPEXTENSIONOUTER_LAYER1OPTIONALGROUP._serialized_start=18424
  _TESTNESTEDGROUPEXTENSIONOUTER_LAYER1OPTIONALGROUP._serialized_end=18825
  _TESTNESTEDGROUPEXTENSIONOUTER_LAYER1OPTIONALGROUP_LAYER2REPEATEDGROUP._serialized_start=18716
  _TESTNESTEDGROUPEXTENSIONOUTER_LAYER1OPTIONALGROUP_LAYER2REPEATEDGROUP._serialized_end=18766
  _TESTNESTEDGROUPEXTENSIONOUTER_LAYER1OPTIONALGROUP_LAYER2ANOTHEROPTIONALREPEATEDGROUP._serialized_start=18768
  _TESTNESTEDGROUPEXTENSIONOUTER_LAYER1OPTIONALGROUP_LAYER2ANOTHEROPTIONALREPEATEDGROUP._serialized_end=18825
  _TESTNESTEDGROUPEXTENSIONINNEREXTENSION._serialized_start=18827
  _TESTNESTEDGROUPEXTENSIONINNEREXTENSION._serialized_end=18887
  _TESTEXTENSIONRANGESERIALIZE._serialized_start=18890
  _TESTEXTENSIONRANGESERIALIZE._serialized_end=19355
  _TESTVERIFYINT32SIMPLE._serialized_start=19358
  _TESTVERIFYINT32SIMPLE._serialized_end=19487
  _TESTVERIFYINT32._serialized_start=19490
  _TESTVERIFYINT32._serialized_end=19735
  _TESTVERIFYMOSTLYINT32._serialized_start=19738
  _TESTVERIFYMOSTLYINT32._serialized_end=20068
  _TESTVERIFYMOSTLYINT32BIGFIELDNUMBER._serialized_start=20071
  _TESTVERIFYMOSTLYINT32BIGFIELDNUMBER._serialized_end=20444
  _TESTVERIFYUINT32SIMPLE._serialized_start=20447
  _TESTVERIFYUINT32SIMPLE._serialized_end=20581
  _TESTVERIFYUINT32._serialized_start=20584
  _TESTVERIFYUINT32._serialized_end=20834
  _TESTVERIFYONEUINT32._serialized_start=20837
  _TESTVERIFYONEUINT32._serialized_end=21087
  _TESTVERIFYONEINT32BIGFIELDNUMBER._serialized_start=21090
  _TESTVERIFYONEINT32BIGFIELDNUMBER._serialized_end=21379
  _TESTVERIFYINT32BIGFIELDNUMBER._serialized_start=21382
  _TESTVERIFYINT32BIGFIELDNUMBER._serialized_end=21698
  _TESTVERIFYUINT32BIGFIELDNUMBER._serialized_start=21701
  _TESTVERIFYUINT32BIGFIELDNUMBER._serialized_end=22024
  _TESTVERIFYBIGFIELDNUMBERUINT32._serialized_start=22027
  _TESTVERIFYBIGFIELDNUMBERUINT32._serialized_end=22547
  _TESTVERIFYBIGFIELDNUMBERUINT32_NESTED._serialized_start=22145
  _TESTVERIFYBIGFIELDNUMBERUINT32_NESTED._serialized_end=22547
  _ENUMPARSETESTER._serialized_start=22550
  _ENUMPARSETESTER._serialized_end=26610
  _ENUMPARSETESTER_SEQSMALL0._serialized_start=25653
  _ENUMPARSETESTER_SEQSMALL0._serialized_end=25727
  _ENUMPARSETESTER_SEQSMALL1._serialized_start=25729
  _ENUMPARSETESTER_SEQSMALL1._serialized_end=25803
  _ENUMPARSETESTER_SEQLARGE._serialized_start=25806
  _ENUMPARSETESTER_SEQLARGE._serialized_end=26450
  _ENUMPARSETESTER_ARBITRARY._serialized_start=26453
  _ENUMPARSETESTER_ARBITRARY._serialized_end=26610
  _BOOLPARSETESTER._serialized_start=26613
  _BOOLPARSETESTER._serialized_end=26951
  _STRINGPARSETESTER._serialized_start=26954
  _STRINGPARSETESTER._serialized_end=27181
  _BADFIELDNAMES._serialized_start=27183
  _BADFIELDNAMES._serialized_end=27234
  _REDACTEDFIELDS._serialized_start=27236
  _REDACTEDFIELDS._serialized_end=27291
  _TESTSERVICE._serialized_start=29578
  _TESTSERVICE._serialized_end=29731
_builder.BuildServices(DESCRIPTOR, 'google.protobuf.unittest_pb2', globals())
# @@protoc_insertion_point(module_scope)
