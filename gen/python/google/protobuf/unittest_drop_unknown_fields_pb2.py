# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/protobuf/unittest_drop_unknown_fields.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n2google/protobuf/unittest_drop_unknown_fields.proto\x12\x1cunittest_drop_unknown_fields\"\x85\x01\n\x03\x46oo\x12\x13\n\x0bint32_value\x18\x01 \x01(\x05\x12@\n\nenum_value\x18\x02 \x01(\x0e\x32,.unittest_drop_unknown_fields.Foo.NestedEnum\"\'\n\nNestedEnum\x12\x07\n\x03\x46OO\x10\x00\x12\x07\n\x03\x42\x41R\x10\x01\x12\x07\n\x03\x42\x41Z\x10\x02\"\xc7\x01\n\x12\x46ooWithExtraFields\x12\x13\n\x0bint32_value\x18\x01 \x01(\x05\x12O\n\nenum_value\x18\x02 \x01(\x0e\x32;.unittest_drop_unknown_fields.FooWithExtraFields.NestedEnum\x12\x19\n\x11\x65xtra_int32_value\x18\x03 \x01(\x05\"0\n\nNestedEnum\x12\x07\n\x03\x46OO\x10\x00\x12\x07\n\x03\x42\x41R\x10\x01\x12\x07\n\x03\x42\x41Z\x10\x02\x12\x07\n\x03MOO\x10\x03\x42,\xa2\x02\x0c\x44ropUnknowns\xaa\x02\x1aGoogle.Protobuf.TestProtosb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'google.protobuf.unittest_drop_unknown_fields_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\242\002\014DropUnknowns\252\002\032Google.Protobuf.TestProtos'
  _FOO._serialized_start=85
  _FOO._serialized_end=218
  _FOO_NESTEDENUM._serialized_start=179
  _FOO_NESTEDENUM._serialized_end=218
  _FOOWITHEXTRAFIELDS._serialized_start=221
  _FOOWITHEXTRAFIELDS._serialized_end=420
  _FOOWITHEXTRAFIELDS_NESTEDENUM._serialized_start=372
  _FOOWITHEXTRAFIELDS_NESTEDENUM._serialized_end=420
# @@protoc_insertion_point(module_scope)
