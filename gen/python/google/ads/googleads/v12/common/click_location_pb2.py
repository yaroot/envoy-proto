# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/ads/googleads/v12/common/click_location.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n4google/ads/googleads/v12/common/click_location.proto\x12\x1fgoogle.ads.googleads.v12.common\"\xb9\x01\n\rClickLocation\x12\x11\n\x04\x63ity\x18\x06 \x01(\tH\x00\x88\x01\x01\x12\x14\n\x07\x63ountry\x18\x07 \x01(\tH\x01\x88\x01\x01\x12\x12\n\x05metro\x18\x08 \x01(\tH\x02\x88\x01\x01\x12\x1a\n\rmost_specific\x18\t \x01(\tH\x03\x88\x01\x01\x12\x13\n\x06region\x18\n \x01(\tH\x04\x88\x01\x01\x42\x07\n\x05_cityB\n\n\x08_countryB\x08\n\x06_metroB\x10\n\x0e_most_specificB\t\n\x07_regionB\xf2\x01\n#com.google.ads.googleads.v12.commonB\x12\x43lickLocationProtoP\x01ZEgoogle.golang.org/genproto/googleapis/ads/googleads/v12/common;common\xa2\x02\x03GAA\xaa\x02\x1fGoogle.Ads.GoogleAds.V12.Common\xca\x02\x1fGoogle\\Ads\\GoogleAds\\V12\\Common\xea\x02#Google::Ads::GoogleAds::V12::Commonb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'google.ads.googleads.v12.common.click_location_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n#com.google.ads.googleads.v12.commonB\022ClickLocationProtoP\001ZEgoogle.golang.org/genproto/googleapis/ads/googleads/v12/common;common\242\002\003GAA\252\002\037Google.Ads.GoogleAds.V12.Common\312\002\037Google\\Ads\\GoogleAds\\V12\\Common\352\002#Google::Ads::GoogleAds::V12::Common'
  _CLICKLOCATION._serialized_start=90
  _CLICKLOCATION._serialized_end=275
# @@protoc_insertion_point(module_scope)
